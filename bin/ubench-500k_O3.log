ARG 1: --bin_path
ARG 2: /home/kili337/Projects/IPPD/gitlab/memgaze/bin/ubench-500k_O3
ARG 3: --load_class
ARG 4: 1
ARG 5: --inst_loads=1
ARG 6: --inst_stores=0
ARG 7: --inst_strided=1
ARG 8: --inst_indirect=1
ARG 9: --inst_frame=0
ARG 10: --lcFile=/home/kili337/Projects/IPPD/gitlab/memgaze/bin/ubench-500k_O3.binanlys
CALLIng to add line map.
/home/kili337/Projects/IPPD/gitlab/memgaze/bin/ubench-500k_O3 test2 0
Inst loads=1 Stores=0 Strided=1 Indirect=1 Frame/Constant=0
Function Name is 
[INFO]MIAMI_Driver::LoadImage: /home/kili337/Projects/IPPD/gitlab/memgaze/bin/ubench-500k_O3 0 0
OZGURDBG::Discover the Path func:LoadImage line684
OZGURDBG in load_classes
createDyninstImage trying to open binary named /home/kili337/Projects/IPPD/gitlab/memgaze/bin/ubench-500k_O3
ubench-500k_O3 /home/kili337/Projects/IPPD/gitlab/memgaze/bin/ubench-500k_O3
	ubench-500k_O3 4808
	array.c 4808
dyninstAnalyzeRoutines1357
Name of the routine is: deregister_tm_clones
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: deregister_tm_clones start: 0x850 offset: 0x850 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'deregister_tm_clones 0x7f48ba049000'
OZGURDBG discover_CFG: 0x850 0x850 0x882
OZGURIMM case RELLBR at pc 0x7f48ba049865 imm:0
OZGURDBGSLICE at IP 7f48ba049865 imm_values:19
OZGURDBG discover_CFG: 0x7f48ba049880 0x850 0x882
OZGURDBG discover_CFG: 0x880 0x850 0x882
OZGURIMM Stack uop at pc 0x7f48ba049881 imm:0
OZGURDBG discover_CFG: 0x867 0x850 0x882
OZGURIMM case RELLBR at pc 0x7f48ba049871 imm:0
OZGURDBGSLICE at IP 7f48ba049871 imm_values:d
OZGURDBG discover_CFG: 0x7f48ba049880 0x850 0x882
OZGURDBG discover_CFG: 0x880 0x850 0x882
OZGURDBG discover_CFG: 0x873 0x850 0x882
OZGURDBG sliceVal:   Reg_RAX/0{RegOp}[0,63](0x7f48ba049874,-1) 
OZGURERROR:: in func StartSLice pc is:0x7f48ba049874 block start:0x873 b end:0x876
PartialCFGSlice::StartSlice, block [0x873,0x876], on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0x7f48ba049874 micro-op type 7 (UncondBranch)
main_analysis841
[INFO]Routine::main_analysis(): 'deregister_tm_clones'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURDCODE@PC at IP 0x7f48ba049850 disp:2017c1
OZGURIMM Stack uop at pc 0x7f48ba049857 imm:0
OZGURDCODE@PC at IP 0x7f48ba049858 disp:2017b9
OZGURIMM case RELLBR at pc 0x7f48ba049865 imm:0
OZGURDCODE@PC at IP 0x7f48ba049867 disp:20176a
OZGURIMM case RELLBR at pc 0x7f48ba049871 imm:0
OZGURDBGSLICE at IP 867 disp:20176a
OZGURIMM Stack uop at pc 0x7f48ba049880 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049881 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049873 imm:0
 This is Rslice 0x7f489403ef90
build_loops_for_interval routine: deregister_tm_clones'
OZGURDCODE@PC at IP 0x7f48ba049850 disp:2017c1
OZGURIMM Stack uop at pc 0x7f48ba049857 imm:0
OZGURDCODE@PC at IP 0x7f48ba049858 disp:2017b9
OZGURIMM case RELLBR at pc 0x7f48ba049865 imm:0
OZGURDCODE@PC at IP 0x7f48ba049867 disp:20176a
OZGURIMM case RELLBR at pc 0x7f48ba049871 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049880 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049881 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049873 imm:0
[INFO]Routine::constructLoops(): 'deregister_tm_clones'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'deregister_tm_clones'
In SchedDG constructor for routine deregister_tm_clones, pathId 0x850/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'deregister_tm_clones'
OZGURDCODE@PC at IP 0x7f48ba049850 disp:2017c1
OZGURIMM Stack uop at pc 0x7f48ba049857 imm:0
OZGURDCODE@PC at IP 0x7f48ba049858 disp:2017b9
OZGURIMM case RELLBR at pc 0x7f48ba049865 imm:0
OZGURDCODE@PC at IP 0x7f48ba049867 disp:20176a
OZGURIMM case RELLBR at pc 0x7f48ba049871 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049880 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049881 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049873 imm:0
Sniper Routine: deregister_tm_clones StartAddr:850
OZGURDBGX3 #Blocks: 5
	Block[0] 's startAddres: 850 endAddress:  867
		instruction addres:850
		instruction addres:857
		instruction addres:858
		instruction addres:85f
		instruction addres:862
		instruction addres:865
850-0
857-0
858-0
85f-0
862-0
865-0

	Block[1] 's startAddres: 867 endAddress:  873
		instruction addres:867
		instruction addres:86e
		instruction addres:871
867-0
86e-0
871-0

	Block[2] 's startAddres: 880 endAddress:  882
		instruction addres:880
		instruction addres:881
880-0
881-0

	Block[3] 's startAddres: 873 endAddress:  876
		instruction addres:873
		instruction addres:874
873-0
874-0

	Block[4] 's startAddres: 0 endAddress:  0
Node Ox880 is Frame
Node Ox881 is Frame
Node Ox873 is Frame
866
	850-0
	857-0
	858-0
	85f-0
	862-0
	865-0
872
	867-0
	86e-0
	871-0
875
	873-1
	874-0
881
	880-1
	881-1
ffffffffffffffff
Address	type	class
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 3 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=850, type=21
850: LEA --> r81[0:63] 
 <-- (20)
 --> (7 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x850 try:0
Node 4 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=857, type=20
857: Add r78[0:63] --> r78[0:63] 
 <-- (20, 19)
 --> (5 [{ 1 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 8 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 11 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 13 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x857 try:0
Node 5 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=857, type=3
857: Store r79[0:63] a78[0:63] --> 
 <-- (4, 18)
 --> (9 [{ 6 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 10 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 20 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x850,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049857 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x857 try:0
Node 6 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=858, type=21
858: LEA --> r74[0:63] 
 <-- (20)
 --> (7 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x858 try:0
Node 7 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=85f, type=19
85f: Cmp r74[0:63] r81[0:63] --> r41[0:63] 
 <-- (6, 3)
 --> (9 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x85f try:0
Node 8 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=862, type=13
862: Copy r78[0:63] --> r79[0:63] 
 <-- (4)
 --> (9 [{ 7 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x862 try:0
Node 9 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=865, type=8
865: CondBranch r41[0:63] --> 
 <-- (7, 5, 8)
OZGURDBG::instrumenting node:0x865 try:0
Node 10 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=867, type=2
867: Load --> r74[0:63] 
 <-- (20)
 --> (11 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 25 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105304 den: 1 HAHAHA Before num: 2105304 den: 1 After num: 2105304 den: 1
ref->base:  0x201fd8 +
consten Term of Formula is: 2105304
Decoded Instruction PC:7f48ba049867 Reloc:7f48ba049000 len:7 disp:20176a scale:1
OZGURDBG::instrumenting node:0x867 try:0
867	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 11 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=86e, type=29
86e: LogicalOp r74[0:63] r74[0:63] --> r41[0:63] 
 <-- (10)
 --> (12 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x86e try:0
Node 12 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=871, type=8
871: CondBranch r41[0:63] --> 
 <-- (11)
 --> (13 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x871 try:0
Node 13 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=880, type=2
880: Load a78[0:63] --> r79[0:63] 
 <-- (5, 4, 12)
 --> (17 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x850,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049880 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x880 try:0
Node 14 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=880, type=20
880: Add r78[0:63] --> r78[0:63] 
 <-- (4, 12)
 --> (15 [{ 15 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 16 [{ 16 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x880 try:0
Node 15 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=881, type=2
881: Load a78[0:63] --> 
 <-- (14)
 --> (17 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x850,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049881 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x881 try:0
Node 16 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=881, type=20
881: Add r78[0:63] --> r78[0:63] 
 <-- (14)
 --> (17 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 21 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 23 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x881 try:0
Node 17 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=881, type=10
881: Return --> 
 <-- (13, 15, 16)
 --> (18 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 26 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x881 try:0
Node 18 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=873, type=2
873: Load a78[0:63] --> r79[0:63] 
 <-- (5, 16, 17)
 --> (20 [{ 27 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 34 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x850,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049873 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x873 try:0
Node 19 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=873, type=20
873: Add r78[0:63] --> r78[0:63] 
 <-- (16, 17)
 --> (20 [{ 28 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 4 [{ 33 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x873 try:0
Node 20 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 20, pc=874, type=7
874: UncondBranch r74[0:63] --> 
 <-- (10, 17, 18, 19)
 --> (3 [{ 29 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 4 [{ 30 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 31 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 10 [{ 32 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x874 try:0
866
	850-0
	857-0
	858-0
	85f-0
	862-0
	865-0
872
	867-0
	86e-0
	871-0
875
	873-1
	874-0
881
	880-1
	881-1
ffffffffffffffff
866-0
866-0
872-0
872-0
875-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load at880
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d40f4c0
875-1
881-0
881-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:4	frame:3	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: deregister_tm_clones
Name of the routine is: malloc
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: malloc start: 0x5f0 offset: 0x5f0 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'malloc 0x7f48ba049000'
OZGURDBG discover_CFG: 0x5f0 0x5f0 0x5f6
OZGURDCODE@PC at IP 0x7f48ba0495f0 disp:2019da
OZGURDBG sliceVal:   Reg_T0/0{TempReg}[0,63](0x7f48ba0495f0,-1) 
OZGURERROR:: in func StartSLice pc is:0x7f48ba0495f0 block start:0x5f0 b end:0x5f6
PartialCFGSlice::StartSlice, block [0x5f0,0x5f6], on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0x7f48ba0495f0 micro-op type 7 (UncondBranch)
main_analysis841
[INFO]Routine::main_analysis(): 'malloc'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURDCODE@PC at IP 0x7f48ba0495f0 disp:2019da
OZGURDBGSLICE at IP 5f0 disp:2019da
 This is Rslice 0x7f489403ef90
build_loops_for_interval routine: malloc'
OZGURDCODE@PC at IP 0x7f48ba0495f0 disp:2019da
[INFO]Routine::constructLoops(): 'malloc'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'malloc'
In SchedDG constructor for routine malloc, pathId 0x5f0/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'malloc'
OZGURDCODE@PC at IP 0x7f48ba0495f0 disp:2019da
Sniper Routine: malloc StartAddr:5f0
OZGURDBGX3 #Blocks: 2
	Block[0] 's startAddres: 5f0 endAddress:  5f6
		instruction addres:5f0
5f0-0

	Block[1] 's startAddres: 0 endAddress:  0
5f5
	5f0-0
ffffffffffffffff
--SERIOUS-- #100: Image: Unable to find function: malloc
Address	type	class
Node 4 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=5f0, type=7
5f0: UncondBranch t0[0:63] --> 
 <-- (3)
 --> (3 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x5f0 try:0
Node 3 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=5f0, type=2
5f0: Load --> t0[0:63] 
 <-- (4)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105296 den: 1 HAHAHA Before num: 2105296 den: 1 After num: 2105296 den: 1
ref->base:  0x201fd0 +
consten Term of Formula is: 2105296
Decoded Instruction PC:7f48ba0495f0 Reloc:7f48ba049000 len:6 disp:2019da scale:1
OZGURDBG::instrumenting node:0x5f0 try:0
5f0	load	strided
OZGURDBG Instrumenting Strided Load
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
5f5
	5f0-0
ffffffffffffffff
5f5-0
5f5-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:1	frame:0	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: malloc
Name of the routine is: _init
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: _init start: 0x598 offset: 0x598 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): '_init 0x7f48ba049000'
OZGURDBG discover_CFG: 0x598 0x598 0x5af
OZGURIMM case RELLBR at pc 0x7f48ba0495a6 imm:0
OZGURDBGSLICE at IP 7f48ba0495a6 imm_values:2
OZGURDBG discover_CFG: 0x7f48ba0495aa 0x598 0x5af
OZGURDBG discover_CFG: 0x5aa 0x598 0x5af
OZGURIMM Stack uop at pc 0x7f48ba0495ae imm:0
OZGURDBG discover_CFG: 0x5a8 0x598 0x5af
OZGURIMM Stack uop at pc 0x7f48ba0495a8 imm:0
OZGURDBG discover_CFG: 0x5aa 0x598 0x5af
main_analysis841
[INFO]Routine::main_analysis(): '_init'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM0 if signed at pc 0x7f48ba049598 imm:8
OZGURDCODE@PC at IP 0x7f48ba04959c disp:201a45
OZGURIMM case RELLBR at pc 0x7f48ba0495a6 imm:0
OZGURDBGSLICE at IP 59c disp:201a45
OZGURIMM Stack uop at pc 0x7f48ba0495a8 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0495aa imm:8
OZGURIMM Stack uop at pc 0x7f48ba0495ae imm:0
 This is Rslice 0x7f489403ef90
build_loops_for_interval routine: _init'
OZGURIMM0 if signed at pc 0x7f48ba049598 imm:8
OZGURDCODE@PC at IP 0x7f48ba04959c disp:201a45
OZGURIMM case RELLBR at pc 0x7f48ba0495a6 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0495a8 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0495aa imm:8
OZGURIMM Stack uop at pc 0x7f48ba0495ae imm:0
[INFO]Routine::constructLoops(): '_init'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: '_init'
In SchedDG constructor for routine _init, pathId 0x598/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: '_init'
OZGURIMM0 if signed at pc 0x7f48ba049598 imm:8
OZGURDCODE@PC at IP 0x7f48ba04959c disp:201a45
OZGURIMM case RELLBR at pc 0x7f48ba0495a6 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0495a8 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0495aa imm:8
OZGURIMM Stack uop at pc 0x7f48ba0495ae imm:0
Sniper Routine: _init StartAddr:598
OZGURDBGX3 #Blocks: 5
	Block[0] 's startAddres: 598 endAddress:  5a8
		instruction addres:598
		instruction addres:59c
		instruction addres:5a3
		instruction addres:5a6
598-0
59c-0
5a3-0
5a6-0

	Block[1] 's startAddres: 5a8 endAddress:  5aa
		instruction addres:5a8
5a8-0

	Block[2] 's startAddres: 5aa endAddress:  5aa

	Block[3] 's startAddres: 5aa endAddress:  5af
		instruction addres:5aa
		instruction addres:5ae
5aa-0
5ae-0

	Block[4] 's startAddres: 0 endAddress:  0
Node Ox5ae is Frame
5a7
	598-0
	59c-0
	5a3-0
	5a6-0
5a9
	5a8-0
5ae
	5aa-0
	5ae-1
ffffffffffffffff
Address	type	class
Node 8 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=5a8, type=3
5a8: Store a78[0:63] --> 
 <-- (7)
 --> (9 [{ 9 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x598,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba0495a8 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x5a8 try:0
Node 7 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=5a8, type=20
5a8: Add r78[0:63] --> r78[0:63] 
 <-- (3, 6)
 --> (8 [{ 6 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x5a8 try:0
Node 6 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=5a6, type=8
5a6: CondBranch r41[0:63] --> 
 <-- (5, 3)
 --> (7 [{ 5 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 8 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x5a6 try:0
Node 5 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=5a3, type=29
5a3: LogicalOp r74[0:63] r74[0:63] --> r41[0:63] 
 <-- (4)
 --> (6 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x5a3 try:0
Node 4 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=59c, type=2
59c: Load --> r74[0:63] 
 <-- (14, 1, 9)
 --> (5 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105320 den: 1 HAHAHA Before num: 2105320 den: 1 After num: 2105320 den: 1
ref->base:  0x201fe8 +
consten Term of Formula is: 2105320
Decoded Instruction PC:7f48ba04959c Reloc:7f48ba049000 len:7 disp:201a45 scale:1
OZGURDBG::instrumenting node:0x59c try:0
59c	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 3 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=598, type=23
598: Sub r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (14, 13, 1, 9)
 --> (6 [{ 3 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x598 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- (14)
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
 --> (4 [{ 20 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 21 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x0 try:0
Node 9 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=5a8, type=9
5a8: Jump r74[0:63] --> 
 <-- (4, 6, 8, 14)
 --> (10 [{ 10 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 4 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x5a8 try:0
Node 10 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=5a8, type=20
5a8: Add r78[0:63] --> r78[0:63] 
 <-- (9)
 --> (11 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x5a8 try:0
Node 11 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=5aa, type=20
5aa: Add r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (10)
 --> (12 [{ 12 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 13 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x5aa try:0
Node 12 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=5ae, type=2
5ae: Load a78[0:63] --> 
 <-- (11)
 --> (14 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x598,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba0495ae Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x5ae try:0
Node 13 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=5ae, type=20
5ae: Add r78[0:63] --> r78[0:63] 
 <-- (11)
 --> (14 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 19 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x5ae try:0
Node 14 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=5ae, type=10
5ae: Return --> 
 <-- (9, 12, 13)
 --> (4 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 2 [{ 22 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x5ae try:0
5a7
	598-0
	59c-0
	5a3-0
	5a6-0
5a9
	5a8-0
5ae
	5aa-0
	5ae-1
ffffffffffffffff
5a7-0
5a7-0
5a9-0
5a9-0
5ae-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load at5ae
Node has 1 src regs
Node has 0 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d487d60
5ae-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:2	frame:1	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: _init
Name of the routine is: free
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: free start: 0x5c0 offset: 0x5c0 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'free 0x7f48ba049000'
OZGURDBG discover_CFG: 0x5c0 0x5c0 0x5c6
OZGURDCODE@PC at IP 0x7f48ba0495c0 disp:2019f2
OZGURDBG sliceVal:   Reg_T0/0{TempReg}[0,63](0x7f48ba0495c0,-1) 
OZGURERROR:: in func StartSLice pc is:0x7f48ba0495c0 block start:0x5c0 b end:0x5c6
PartialCFGSlice::StartSlice, block [0x5c0,0x5c6], on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0x7f48ba0495c0 micro-op type 7 (UncondBranch)
main_analysis841
[INFO]Routine::main_analysis(): 'free'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURDCODE@PC at IP 0x7f48ba0495c0 disp:2019f2
OZGURDBGSLICE at IP 5c0 disp:2019f2
 This is Rslice 0x7f489403ef90
build_loops_for_interval routine: free'
OZGURDCODE@PC at IP 0x7f48ba0495c0 disp:2019f2
[INFO]Routine::constructLoops(): 'free'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'free'
In SchedDG constructor for routine free, pathId 0x5c0/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'free'
OZGURDCODE@PC at IP 0x7f48ba0495c0 disp:2019f2
Sniper Routine: free StartAddr:5c0
OZGURDBGX3 #Blocks: 2
	Block[0] 's startAddres: 5c0 endAddress:  5c6
		instruction addres:5c0
5c0-0

	Block[1] 's startAddres: 0 endAddress:  0
5c5
	5c0-0
ffffffffffffffff
--SERIOUS-- #100: Image: Unable to find function: free
Address	type	class
Node 4 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=5c0, type=7
5c0: UncondBranch t0[0:63] --> 
 <-- (3)
 --> (3 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x5c0 try:0
Node 3 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=5c0, type=2
5c0: Load --> t0[0:63] 
 <-- (4)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105272 den: 1 HAHAHA Before num: 2105272 den: 1 After num: 2105272 den: 1
ref->base:  0x201fb8 +
consten Term of Formula is: 2105272
Decoded Instruction PC:7f48ba0495c0 Reloc:7f48ba049000 len:6 disp:2019f2 scale:1
OZGURDBG::instrumenting node:0x5c0 try:0
5c0	load	strided
OZGURDBG Instrumenting Strided Load
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
5c5
	5c0-0
ffffffffffffffff
5c5-0
5c5-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:1	frame:0	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: free
Name of the routine is: strtol
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: strtol start: 0x5d0 offset: 0x5d0 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'strtol 0x7f48ba049000'
OZGURDBG discover_CFG: 0x5d0 0x5d0 0x5d6
OZGURDCODE@PC at IP 0x7f48ba0495d0 disp:2019ea
OZGURDBG sliceVal:   Reg_T0/0{TempReg}[0,63](0x7f48ba0495d0,-1) 
OZGURERROR:: in func StartSLice pc is:0x7f48ba0495d0 block start:0x5d0 b end:0x5d6
PartialCFGSlice::StartSlice, block [0x5d0,0x5d6], on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0x7f48ba0495d0 micro-op type 7 (UncondBranch)
main_analysis841
[INFO]Routine::main_analysis(): 'strtol'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURDCODE@PC at IP 0x7f48ba0495d0 disp:2019ea
OZGURDBGSLICE at IP 5d0 disp:2019ea
 This is Rslice 0x7f489403ef90
build_loops_for_interval routine: strtol'
OZGURDCODE@PC at IP 0x7f48ba0495d0 disp:2019ea
[INFO]Routine::constructLoops(): 'strtol'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'strtol'
In SchedDG constructor for routine strtol, pathId 0x5d0/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'strtol'
OZGURDCODE@PC at IP 0x7f48ba0495d0 disp:2019ea
Sniper Routine: strtol StartAddr:5d0
OZGURDBGX3 #Blocks: 2
	Block[0] 's startAddres: 5d0 endAddress:  5d6
		instruction addres:5d0
5d0-0

	Block[1] 's startAddres: 0 endAddress:  0
5d5
	5d0-0
ffffffffffffffff
--SERIOUS-- #100: Image: Unable to find function: strtol
Address	type	class
Node 4 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=5d0, type=7
5d0: UncondBranch t0[0:63] --> 
 <-- (3)
 --> (3 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x5d0 try:0
Node 3 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=5d0, type=2
5d0: Load --> t0[0:63] 
 <-- (4)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105280 den: 1 HAHAHA Before num: 2105280 den: 1 After num: 2105280 den: 1
ref->base:  0x201fc0 +
consten Term of Formula is: 2105280
Decoded Instruction PC:7f48ba0495d0 Reloc:7f48ba049000 len:6 disp:2019ea scale:1
OZGURDBG::instrumenting node:0x5d0 try:0
5d0	load	strided
OZGURDBG Instrumenting Strided Load
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
5d5
	5d0-0
ffffffffffffffff
5d5-0
5d5-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:1	frame:0	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: strtol
Name of the routine is: register_tm_clones
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: register_tm_clones start: 0x890 offset: 0x890 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'register_tm_clones 0x7f48ba049000'
OZGURDBG discover_CFG: 0x890 0x890 0x8d2
OZGURIMM case RELLBR at pc 0x7f48ba0498b6 imm:0
OZGURDBGSLICE at IP 7f48ba0498b6 imm_values:18
OZGURDBG discover_CFG: 0x7f48ba0498d0 0x890 0x8d2
OZGURDBG discover_CFG: 0x8d0 0x890 0x8d2
OZGURIMM Stack uop at pc 0x7f48ba0498d1 imm:0
OZGURDBG discover_CFG: 0x8b8 0x890 0x8d2
OZGURIMM case RELLBR at pc 0x7f48ba0498c2 imm:0
OZGURDBGSLICE at IP 7f48ba0498c2 imm_values:c
OZGURDBG discover_CFG: 0x7f48ba0498d0 0x890 0x8d2
OZGURDBG discover_CFG: 0x8d0 0x890 0x8d2
OZGURDBG discover_CFG: 0x8c4 0x890 0x8d2
OZGURDBG sliceVal:   Reg_RAX/0{RegOp}[0,63](0x7f48ba0498c5,-1) 
OZGURERROR:: in func StartSLice pc is:0x7f48ba0498c5 block start:0x8c4 b end:0x8c7
PartialCFGSlice::StartSlice, block [0x8c4,0x8c7], on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0x7f48ba0498c5 micro-op type 7 (UncondBranch)
main_analysis841
[INFO]Routine::main_analysis(): 'register_tm_clones'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURDCODE@PC at IP 0x7f48ba049890 disp:201781
OZGURDCODE@PC at IP 0x7f48ba049897 disp:20177a
OZGURIMM Stack uop at pc 0x7f48ba04989e imm:0
OZGURIMM0 if not signed at pc 0x7f48ba0498a5 imm:3
OZGURIMM0 if not signed at pc 0x7f48ba0498ac imm:3f
OZGURIMM0 if not signed at pc 0x7f48ba0498b3 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0498b6 imm:0
OZGURDCODE@PC at IP 0x7f48ba0498b8 disp:201731
OZGURIMM case RELLBR at pc 0x7f48ba0498c2 imm:0
OZGURDBGSLICE at IP 8b8 disp:201731
OZGURIMM Stack uop at pc 0x7f48ba0498d0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498d1 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498c4 imm:0
 This is Rslice 0x7f489403ef90
build_loops_for_interval routine: register_tm_clones'
OZGURDCODE@PC at IP 0x7f48ba049890 disp:201781
OZGURDCODE@PC at IP 0x7f48ba049897 disp:20177a
OZGURIMM Stack uop at pc 0x7f48ba04989e imm:0
OZGURIMM0 if not signed at pc 0x7f48ba0498a5 imm:3
OZGURIMM0 if not signed at pc 0x7f48ba0498ac imm:3f
OZGURIMM0 if not signed at pc 0x7f48ba0498b3 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0498b6 imm:0
OZGURDCODE@PC at IP 0x7f48ba0498b8 disp:201731
OZGURIMM case RELLBR at pc 0x7f48ba0498c2 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498d0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498d1 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498c4 imm:0
[INFO]Routine::constructLoops(): 'register_tm_clones'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'register_tm_clones'
In SchedDG constructor for routine register_tm_clones, pathId 0x890/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'register_tm_clones'
OZGURDCODE@PC at IP 0x7f48ba049890 disp:201781
OZGURDCODE@PC at IP 0x7f48ba049897 disp:20177a
OZGURIMM Stack uop at pc 0x7f48ba04989e imm:0
OZGURIMM0 if not signed at pc 0x7f48ba0498a5 imm:3
OZGURIMM0 if not signed at pc 0x7f48ba0498ac imm:3f
OZGURIMM0 if not signed at pc 0x7f48ba0498b3 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0498b6 imm:0
OZGURDCODE@PC at IP 0x7f48ba0498b8 disp:201731
OZGURIMM case RELLBR at pc 0x7f48ba0498c2 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498d0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498d1 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498c4 imm:0
Sniper Routine: register_tm_clones StartAddr:890
OZGURDBGX3 #Blocks: 5
	Block[0] 's startAddres: 890 endAddress:  8b8
		instruction addres:890
		instruction addres:897
		instruction addres:89e
		instruction addres:89f
		instruction addres:8a2
		instruction addres:8a5
		instruction addres:8a9
		instruction addres:8ac
		instruction addres:8b0
		instruction addres:8b3
		instruction addres:8b6
890-0
897-0
89e-0
89f-0
8a2-0
8a5-0
8a9-0
8ac-0
8b0-0
8b3-0
8b6-0

	Block[1] 's startAddres: 8b8 endAddress:  8c4
		instruction addres:8b8
		instruction addres:8bf
		instruction addres:8c2
8b8-0
8bf-0
8c2-0

	Block[2] 's startAddres: 8d0 endAddress:  8d2
		instruction addres:8d0
		instruction addres:8d1
8d0-0
8d1-0

	Block[3] 's startAddres: 8c4 endAddress:  8c7
		instruction addres:8c4
		instruction addres:8c5
8c4-0
8c5-0

	Block[4] 's startAddres: 0 endAddress:  0
Node Ox8d0 is Frame
Node Ox8d1 is Frame
Node Ox8c4 is Frame
8b7
	890-0
	897-0
	89e-0
	89f-0
	8a2-0
	8a5-0
	8a9-0
	8ac-0
	8b0-0
	8b3-0
	8b6-0
8c3
	8b8-0
	8bf-0
	8c2-0
8c6
	8c4-1
	8c5-0
8d1
	8d0-1
	8d1-1
ffffffffffffffff
Address	type	class
Node 7 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=89f, type=23
89f: Sub r80[0:63] r81[0:63] --> r80[0:63] r41[0:63] 
 <-- (4, 3)
 --> (9 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x89f try:0
Node 6 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=89e, type=3
89e: Store r79[0:63] a78[0:63] --> 
 <-- (5, 23)
 --> (14 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 16 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 23 [{ 26 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x890,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba04989e Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x89e try:0
Node 5 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=89e, type=20
89e: Add r78[0:63] --> r78[0:63] 
 <-- (25, 24)
 --> (6 [{ 1 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 8 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 17 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 19 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x89e try:0
Node 4 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=897, type=21
897: LEA --> r80[0:63] 
 <-- (25)
 --> (7 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x897 try:0
Node 3 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=890, type=21
890: LEA --> r81[0:63] 
 <-- (25)
 --> (7 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x890 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=8a2, type=13
8a2: Copy r78[0:63] --> r79[0:63] 
 <-- (5)
 --> (14 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8a2 try:0
Node 9 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=8a5, type=30
8a5: Shift r80[0:63] --> r80[0:63] r41[0:63] 
 <-- (7)
 --> (10 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8a5 try:0
Node 10 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=8a9, type=13
8a9: Copy r80[0:63] --> r74[0:63] 
 <-- (9)
 --> (11 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8a9 try:0
Node 11 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=8ac, type=30
8ac: Shift r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (10)
 --> (12 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8ac try:0
Node 12 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=8b0, type=20
8b0: Add r80[0:63] r74[0:63] --> r80[0:63] r41[0:63] 
 <-- (9, 11)
 --> (13 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8b0 try:0
Node 13 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=8b3, type=30
8b3: Shift r80[0:63] --> r80[0:63] r41[0:63] 
 <-- (12)
 --> (14 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8b3 try:0
Node 14 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=8b6, type=8
8b6: CondBranch r41[0:63] --> 
 <-- (13, 6, 8)
OZGURDBG::instrumenting node:0x8b6 try:0
Node 15 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=8b8, type=2
8b8: Load --> r74[0:63] 
 <-- (25)
 --> (16 [{ 14 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 25 [{ 31 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105328 den: 1 HAHAHA Before num: 2105328 den: 1 After num: 2105328 den: 1
ref->base:  0x201ff0 +
consten Term of Formula is: 2105328
Decoded Instruction PC:7f48ba0498b8 Reloc:7f48ba049000 len:7 disp:201731 scale:1
OZGURDBG::instrumenting node:0x8b8 try:0
8b8	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 16 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=8bf, type=29
8bf: LogicalOp r74[0:63] r74[0:63] --> r41[0:63] 
 <-- (15)
 --> (17 [{ 15 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8bf try:0
Node 17 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=8c2, type=8
8c2: CondBranch r41[0:63] --> 
 <-- (16)
 --> (18 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8c2 try:0
Node 18 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=8d0, type=2
8d0: Load a78[0:63] --> r79[0:63] 
 <-- (6, 5, 17)
 --> (22 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x890,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba0498d0 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x8d0 try:0
Node 19 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=8d0, type=20
8d0: Add r78[0:63] --> r78[0:63] 
 <-- (5, 17)
 --> (20 [{ 21 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 21 [{ 22 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8d0 try:0
Node 20 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 20, pc=8d1, type=2
8d1: Load a78[0:63] --> 
 <-- (19)
 --> (22 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x890,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba0498d1 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x8d1 try:0
Node 21 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 21, pc=8d1, type=20
8d1: Add r78[0:63] --> r78[0:63] 
 <-- (19)
 --> (22 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 23 [{ 27 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 24 [{ 29 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8d1 try:0
Node 22 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 22, pc=8d1, type=10
8d1: Return --> 
 <-- (18, 20, 21)
 --> (23 [{ 28 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 24 [{ 30 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 25 [{ 32 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8d1 try:0
Node 23 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=8c4, type=2
8c4: Load a78[0:63] --> r79[0:63] 
 <-- (6, 21, 22)
 --> (25 [{ 33 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 40 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x890,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba0498c4 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x8c4 try:0
Node 24 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 24, pc=8c4, type=20
8c4: Add r78[0:63] --> r78[0:63] 
 <-- (21, 22)
 --> (25 [{ 34 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 39 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x8c4 try:0
Node 25 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 25, pc=8c5, type=7
8c5: UncondBranch r74[0:63] --> 
 <-- (15, 22, 23, 24)
 --> (5 [{ 35 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 4 [{ 36 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 37 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 38 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x8c5 try:0
8b7
	890-0
	897-0
	89e-0
	89f-0
	8a2-0
	8a5-0
	8a9-0
	8ac-0
	8b0-0
	8b3-0
	8b6-0
8c3
	8b8-0
	8bf-0
	8c2-0
8c6
	8c4-1
	8c5-0
8d1
	8d0-1
	8d1-1
ffffffffffffffff
8b7-0
8b7-0
8c3-0
8c3-0
8c6-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load at8d0
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d497f30
8c6-1
8d1-0
8d1-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:4	frame:3	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: register_tm_clones
Name of the routine is: __do_global_dtors_aux
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: __do_global_dtors_aux start: 0x8e0 offset: 0x8e0 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): '__do_global_dtors_aux 0x7f48ba049000'
OZGURDBG discover_CFG: 0x8e0 0x8e0 0x91a
OZGURIMM case RELLBR at pc 0x7f48ba0498e7 imm:0
OZGURDBGSLICE at IP 7f48ba0498e7 imm_values:2f
OZGURDBG discover_CFG: 0x7f48ba049918 0x8e0 0x91a
OZGURDBG discover_CFG: 0x918 0x8e0 0x91a
OZGURIMM Stack uop at pc 0x7f48ba049918 imm:0
OZGURDBG discover_CFG: 0x8e9 0x8e0 0x91a
OZGURIMM case RELLBR at pc 0x7f48ba0498f5 imm:0
OZGURDBGSLICE at IP 7f48ba0498f5 imm_values:c
OZGURDBG discover_CFG: 0x7f48ba049903 0x8e0 0x91a
OZGURDBG discover_CFG: 0x903 0x8e0 0x91a
OZGURIMM case RELLBR at pc 0x7f48ba049903 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049903 imm:0
OZGURDBGSLICE at IP 7f48ba049903 imm_values:ffffffffffffff48
OZGURDBG discover_CFG: 0x7f48ba049850 0x8e0 0x91a
OZGURDBG discover_CFG: 0x850 0x8e0 0x91a
OZGURDBG discover_CFG: 0x908 0x8e0 0x91a
OZGURIMM Stack uop at pc 0x7f48ba049910 imm:0
OZGURDBG discover_CFG: 0x8f7 0x8e0 0x91a
OZGURIMM case RELLBR at pc 0x7f48ba0498fe imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498fe imm:0
OZGURDBGSLICE at IP 7f48ba0498fe imm_values:fffffffffffffcfd
OZGURDBG discover_CFG: 0x7f48ba049600 0x8e0 0x91a
OZGURDBG discover_CFG: 0x600 0x8e0 0x91a
OZGURDBG discover_CFG: 0x903 0x8e0 0x91a
main_analysis841
[INFO]Routine::main_analysis(): '__do_global_dtors_aux'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURDCODE@PC at IP 0x7f48ba0498e0 disp:201731
OZGURIMM0 if signed at pc 0x7f48ba0498e0 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0498e7 imm:0
OZGURDBGSLICE at IP 8e0 disp:201731
OZGURIMM Stack uop at pc 0x7f48ba049918 imm:0
OZGURDCODE@PC at IP 0x7f48ba0498e9 disp:201707
OZGURIMM0 if signed at pc 0x7f48ba0498e9 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498f1 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0498f5 imm:0
OZGURDBGSLICE at IP 8e9 disp:201707
OZGURDCODE@PC at IP 0x7f48ba0498f7 disp:20170a
OZGURIMM case RELLBR at pc 0x7f48ba0498fe imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498fe imm:0
OZGURDBGSLICE at IP 8f7 disp:20170a
OZGURIMM case RELLBR at pc 0x7f48ba049903 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049903 imm:0
OZGURDCODE@PC at IP 0x7f48ba049908 disp:201709
OZGURIMM0 if not signed at pc 0x7f48ba049908 imm:1
OZGURIMM Stack uop at pc 0x7f48ba04990f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049910 imm:0
OZGURDBGSLICE at IP 908 disp:201709
 This is Rslice 0x7f489403ef90
build_loops_for_interval routine: __do_global_dtors_aux'
OZGURDCODE@PC at IP 0x7f48ba0498e0 disp:201731
OZGURIMM0 if signed at pc 0x7f48ba0498e0 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0498e7 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049918 imm:0
OZGURDCODE@PC at IP 0x7f48ba0498e9 disp:201707
OZGURIMM0 if signed at pc 0x7f48ba0498e9 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498f1 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0498f5 imm:0
OZGURDCODE@PC at IP 0x7f48ba0498f7 disp:20170a
OZGURIMM case RELLBR at pc 0x7f48ba0498fe imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498fe imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049903 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049903 imm:0
OZGURDCODE@PC at IP 0x7f48ba049908 disp:201709
OZGURIMM0 if not signed at pc 0x7f48ba049908 imm:1
OZGURIMM Stack uop at pc 0x7f48ba04990f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049910 imm:0
[INFO]Routine::constructLoops(): '__do_global_dtors_aux'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: '__do_global_dtors_aux'
In SchedDG constructor for routine __do_global_dtors_aux, pathId 0x8e0/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: '__do_global_dtors_aux'
OZGURDCODE@PC at IP 0x7f48ba0498e0 disp:201731
OZGURIMM0 if signed at pc 0x7f48ba0498e0 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0498e7 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049918 imm:0
OZGURDCODE@PC at IP 0x7f48ba0498e9 disp:201707
OZGURIMM0 if signed at pc 0x7f48ba0498e9 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498f1 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0498f5 imm:0
OZGURDCODE@PC at IP 0x7f48ba0498f7 disp:20170a
OZGURIMM case RELLBR at pc 0x7f48ba0498fe imm:0
OZGURIMM Stack uop at pc 0x7f48ba0498fe imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049903 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049903 imm:0
OZGURDCODE@PC at IP 0x7f48ba049908 disp:201709
OZGURIMM0 if not signed at pc 0x7f48ba049908 imm:1
OZGURIMM Stack uop at pc 0x7f48ba04990f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049910 imm:0
Sniper Routine: __do_global_dtors_aux StartAddr:8e0
OZGURDBGX3 #Blocks: 9
	Block[0] 's startAddres: 8e0 endAddress:  8e9
		instruction addres:8e0
		instruction addres:8e7
8e0-0
8e7-0

	Block[1] 's startAddres: 918 endAddress:  91a
		instruction addres:918
918-0

	Block[2] 's startAddres: 8e9 endAddress:  8f7
		instruction addres:8e9
		instruction addres:8f1
		instruction addres:8f2
		instruction addres:8f5
8e9-0
8f1-0
8f2-0
8f5-0

	Block[3] 's startAddres: 8f7 endAddress:  903
		instruction addres:8f7
		instruction addres:8fe
8f7-0
8fe-0

	Block[4] 's startAddres: 903 endAddress:  903

	Block[5] 's startAddres: 903 endAddress:  908
		instruction addres:903
903-0

	Block[6] 's startAddres: 908 endAddress:  908

	Block[7] 's startAddres: 908 endAddress:  911
		instruction addres:908
		instruction addres:90f
		instruction addres:910
908-0
90f-0
910-0

	Block[8] 's startAddres: 0 endAddress:  0
Node Ox918 is Frame
Node Ox90f is Frame
Node Ox910 is Frame
8e8
	8e0-0
	8e7-0
8f6
	8e9-0
	8f1-0
	8f2-0
	8f5-0
902
	8f7-0
	8fe-0
907
	903-0
910
	908-0
	90f-1
	910-1
919
	918-1
ffffffffffffffff
Address	type	class
Node 7 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=918, type=20
918: Add r78[0:63] --> r78[0:63] 
 <-- (29, 28, 1, 22)
 --> (8 [{ 3 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x918 try:0
Node 6 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=918, type=2
918: Load a78[0:63] --> 
 <-- (29, 28, 1, 22)
 --> (8 [{ 4 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0x8e0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049918 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x918 try:0
Node 5 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=8e7, type=8
8e7: CondBranch r41[0:63] --> 
 <-- (4)
 --> (18 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8e7 try:0
Node 4 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=8e0, type=19
8e0: Cmp t0[0:31] --> r41[0:31] 
 <-- (3)
 --> (5 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8e0 try:0
Node 3 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=8e0, type=2
8e0: Load --> t0[0:7] 
 <-- (29, 1, 22)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105368 den: 1 HAHAHA Before num: 2105368 den: 1 After num: 2105368 den: 1
ref->base:  0x202018 +
consten Term of Formula is: 2105368
Decoded Instruction PC:7f48ba0498e0 Reloc:7f48ba049000 len:7 disp:201731 scale:1
OZGURDBG::instrumenting node:0x8e0 try:0
8e0	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- (29)
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
 --> (7 [{ 46 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 47 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 48 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 49 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 50 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=918, type=10
918: Return --> 
 <-- (7, 6)
 --> (11 [{ 7 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x918 try:0
Node 9 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=8e9, type=2
8e9: Load --> t0[0:63] 
 <-- (29, 1, 22)
 --> (10 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105336 den: 1 HAHAHA Before num: 2105336 den: 1 After num: 2105336 den: 1
ref->base:  0x201ff8 +
consten Term of Formula is: 2105336
Decoded Instruction PC:7f48ba0498e9 Reloc:7f48ba049000 len:8 disp:201707 scale:1
OZGURDBG::instrumenting node:0x8e9 try:0
8e9	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 10 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=8e9, type=19
8e9: Cmp t0[0:63] --> r41[0:63] 
 <-- (9)
 --> (14 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8e9 try:0
Node 13 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=8f2, type=13
8f2: Copy r78[0:63] --> r79[0:63] 
 <-- (11)
 --> (14 [{ 11 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8f2 try:0
Node 14 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=8f5, type=8
8f5: CondBranch r41[0:63] --> 
 <-- (10, 13, 12)
 --> (16 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8f5 try:0
Node 15 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=8f7, type=2
8f7: Load --> r81[0:63] 
 <-- (29, 1, 22)
 --> (18 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105352 den: 1 HAHAHA Before num: 2105352 den: 1 After num: 2105352 den: 1
ref->base:  0x202008 +
consten Term of Formula is: 2105352
Decoded Instruction PC:7f48ba0498f7 Reloc:7f48ba049000 len:7 disp:20170a scale:1
OZGURDBG::instrumenting node:0x8f7 try:0
8f7	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 16 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=8fe, type=20
8fe: Add r78[0:63] --> r78[0:63] 
 <-- (11, 14)
 --> (17 [{ 15 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8fe try:0
Node 17 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=8fe, type=3
8fe: Store a78[0:63] --> 
 <-- (16)
 --> (18 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x8e0,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba0498fe Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x8fe try:0
Node 18 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=8fe, type=9
8fe: Jump --> 
 <-- (15, 17, 5, 8, 14, 29)
 --> (19 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 22 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8fe try:0
Node 19 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=8fe, type=20
8fe: Add r78[0:63] --> r78[0:63] 
 <-- (18)
 --> (20 [{ 22 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8fe try:0
Node 11 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=8f1, type=20
8f1: Add r78[0:63] --> r78[0:63] 
 <-- (7, 8)
 --> (12 [{ 8 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 16 [{ 13 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x8f1 try:0
Node 12 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=8f1, type=3
8f1: Store r79[0:63] a78[0:63] --> 
 <-- (11, 25)
 --> (14 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 25 [{ 28 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x8e0,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba0498f1 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x8f1 try:0
Node 20 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 20, pc=903, type=20
903: Add r78[0:63] --> r78[0:63] 
 <-- (19)
 --> (21 [{ 23 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x903 try:0
Node 21 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 21, pc=903, type=3
903: Store a78[0:63] --> 
 <-- (20)
 --> (22 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x8e0,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba049903 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x903 try:0
Node 22 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 22, pc=903, type=9
903: Jump --> 
 <-- (18, 21)
 --> (23 [{ 26 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 24 [{ 27 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 29 [{ 33 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 53 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 54 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 55 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 9 [{ 56 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 57 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x903 try:0
Node 23 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=903, type=20
903: Add r78[0:63] --> r78[0:63] 
 <-- (22)
 --> (25 [{ 29 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 26 [{ 30 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x903 try:0
Node 24 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 24, pc=908, type=3
908: Store --> 
 <-- (22)
 --> (29 [{ 34 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105368 den: 1 HAHAHA Before num: 2105368 den: 1 After num: 2105368 den: 1
ref->base:  0x202018 +
consten Term of Formula is: 2105368
Decoded Instruction PC:7f48ba049908 Reloc:7f48ba049000 len:7 disp:201709 scale:1
OZGURDBG::instrumenting node:0x908 try:0
Node 25 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 25, pc=90f, type=2
90f: Load a78[0:63] --> r79[0:63] 
 <-- (12, 23)
 --> (29 [{ 35 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 45 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x8e0,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba04990f Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x90f try:0
Node 26 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 26, pc=90f, type=20
90f: Add r78[0:63] --> r78[0:63] 
 <-- (23)
 --> (27 [{ 31 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 28 [{ 32 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x90f try:0
Node 27 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 27, pc=910, type=2
910: Load a78[0:63] --> 
 <-- (26)
 --> (29 [{ 36 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x8e0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049910 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x910 try:0
Node 28 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 28, pc=910, type=20
910: Add r78[0:63] --> r78[0:63] 
 <-- (26)
 --> (29 [{ 37 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 43 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 7 [{ 44 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x910 try:0
Node 29 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 29, pc=910, type=10
910: Return --> 
 <-- (22, 24, 25, 27, 28)
 --> (7 [{ 38 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 39 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 40 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 9 [{ 41 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 42 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 2 [{ 51 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 52 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x910 try:0
8e8
	8e0-0
	8e7-0
8f6
	8e9-0
	8f1-0
	8f2-0
	8f5-0
902
	8f7-0
	8fe-0
907
	903-0
910
	908-0
	90f-1
	910-1
919
	918-1
ffffffffffffffff
8e8-0
8e8-0
8f6-0
8f6-0
902-0
902-0
907-0
907-0
910-2
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load at918
Node has 1 src regs
Node has 0 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d4a0460
910-2
919-0
919-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:6	frame:3	strided:3	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: __do_global_dtors_aux
Name of the routine is: frame_dummy
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: frame_dummy start: 0x920 offset: 0x920 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'frame_dummy 0x7f48ba049000'
OZGURDBG discover_CFG: 0x920 0x920 0x92a
OZGURIMM case RELLBR at pc 0x7f48ba049925 imm:0
OZGURDBGSLICE at IP 7f48ba049925 imm_values:ffffffffffffff66
OZGURDBG discover_CFG: 0x7f48ba049890 0x920 0x92a
OZGURDBG discover_CFG: 0x890 0x920 0x92a
main_analysis841
[INFO]Routine::main_analysis(): 'frame_dummy'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM Stack uop at pc 0x7f48ba049920 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049924 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049925 imm:0
 This is Rslice 0x7f489403ef90
build_loops_for_interval routine: frame_dummy'
OZGURIMM Stack uop at pc 0x7f48ba049920 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049924 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049925 imm:0
[INFO]Routine::constructLoops(): 'frame_dummy'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'frame_dummy'
In SchedDG constructor for routine frame_dummy, pathId 0x920/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'frame_dummy'
OZGURIMM Stack uop at pc 0x7f48ba049920 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049924 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049925 imm:0
Sniper Routine: frame_dummy StartAddr:920
OZGURDBGX3 #Blocks: 2
	Block[0] 's startAddres: 920 endAddress:  92a
		instruction addres:920
		instruction addres:921
		instruction addres:924
		instruction addres:925
920-0
921-0
924-0
925-0

	Block[1] 's startAddres: 0 endAddress:  0
Node Ox924 is Frame
929
	920-0
	921-0
	924-1
	925-0
ffffffffffffffff
Address	type	class
Node 7 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=924, type=20
924: Add r78[0:63] --> r78[0:63] 
 <-- (3)
 --> (8 [{ 6 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x924 try:0
Node 6 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=924, type=2
924: Load a78[0:63] --> r79[0:63] 
 <-- (4, 3)
 --> (8 [{ 7 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 4 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x920,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049924 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x924 try:0
Node 5 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=921, type=13
921: Copy r78[0:63] --> r79[0:63] 
 <-- (3)
 --> (8 [{ 8 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x921 try:0
Node 4 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=920, type=3
920: Store r79[0:63] a78[0:63] --> 
 <-- (3, 6)
 --> (6 [{ 3 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x920,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049920 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x920 try:0
Node 3 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=920, type=20
920: Add r78[0:63] --> r78[0:63] 
 <-- (8, 7)
 --> (4 [{ 1 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 4 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x920 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=925, type=7
925: UncondBranch --> 
 <-- (7, 6, 5)
 --> (3 [{ 9 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x925 try:0
929
	920-0
	921-0
	924-1
	925-0
ffffffffffffffff
929-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load at924
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d4a09f0
929-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:1	frame:1	strided:0	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: frame_dummy
Name of the routine is: __libc_csu_init
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: __libc_csu_init start: 0xed0 offset: 0xed0 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): '__libc_csu_init 0x7f48ba049000'
OZGURDBG discover_CFG: 0xed0 0xed0 0xf35
OZGURIMM case RELLBR at pc 0x7f48ba049efc imm:0
OZGURIMM Stack uop at pc 0x7f48ba049efc imm:0
OZGURDBGSLICE at IP 7f48ba049efc imm_values:fffffffffffff697
OZGURDBG discover_CFG: 0x7f48ba049598 0xed0 0xf35
OZGURDBG discover_CFG: 0x598 0xed0 0xf35
OZGURDBG discover_CFG: 0xf01 0xed0 0xf35
OZGURIMM case RELLBR at pc 0x7f48ba049f04 imm:0
OZGURDBGSLICE at IP 7f48ba049f04 imm_values:20
OZGURDBG discover_CFG: 0x7f48ba049f26 0xed0 0xf35
OZGURDBG discover_CFG: 0xf26 0xed0 0xf35
OZGURIMM Stack uop at pc 0x7f48ba049f34 imm:0
OZGURDBG discover_CFG: 0xf06 0xed0 0xf35
OZGURDECODE@PC at IP 0x7f48ba049f19 scale:8
OZGURIMM Stack uop at pc 0x7f48ba049f19 imm:0
OZGURDBG discover_CFG: 0xf1d 0xed0 0xf35
OZGURIMM case RELLBR at pc 0x7f48ba049f24 imm:0
OZGURDBGSLICE at IP 7f48ba049f24 imm_values:ffffffffffffffea
OZGURDBG discover_CFG: 0x7f48ba049f10 0xed0 0xf35
OZGURDBG discover_CFG: 0xf10 0xed0 0xf35
OZGURDBG discover_CFG: 0xf26 0xed0 0xf35
main_analysis841
[INFO]Routine::main_analysis(): '__libc_csu_init'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM Stack uop at pc 0x7f48ba049ed0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed2 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed7 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed9 imm:0
OZGURDCODE@PC at IP 0x7f48ba049edb disp:200ebe
OZGURIMM Stack uop at pc 0x7f48ba049ee2 imm:0
OZGURDCODE@PC at IP 0x7f48ba049ee3 disp:200ebe
OZGURIMM Stack uop at pc 0x7f48ba049eea imm:0
OZGURIMM0 if signed at pc 0x7f48ba049ef4 imm:8
OZGURIMM0 if not signed at pc 0x7f48ba049ef8 imm:3
OZGURIMM case RELLBR at pc 0x7f48ba049efc imm:0
OZGURIMM Stack uop at pc 0x7f48ba049efc imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049f04 imm:0
OZGURDECODE@PC at IP 0x7f48ba049f08 scale:1
OZGURDCODE@PC at IP 0x7f48ba049f08 disp:0
OZGURDECODE@PC at IP 0x7f48ba049f19 scale:8
OZGURIMM Stack uop at pc 0x7f48ba049f19 imm:0
OZGURDBGSLICE at IP f19 scale:8
OZGURDBGSLICE at IP edb scale:1
OZGURDBGSLICE at IP edb disp:200ebe
OZGURDBGSLICE at IP edb disp:200ebe
OZGURIMM0 if signed at pc 0x7f48ba049f1d imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049f24 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049f26 imm:8
OZGURIMM Stack uop at pc 0x7f48ba049f2a imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f2b imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f2c imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f2e imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f30 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f32 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f34 imm:0
 This is Rslice 0x7f489403ef90
OZGURDBGSLICE at IP f19 scale:8

  ** StrideSlice::Slice, block [0xf10,0xf1d], from_uop=3, on reg Name RBX {type MemOp(2), stack=0, [0,63]}, start_pc=0xf19, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xf1d,0xf26], from_uop=0, on reg Name RBX {type RegOp(1), stack=0, [0,63]}, start_pc=0xf1d, start_be=1, start_rank=3
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xf10,0xf1d], from_uop=3, on reg Name R12 {type MemOp(2), stack=0, [0,63]}, start_pc=0xf19, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xf10,0xf1d], from_uop=5, on reg Name RSP {type MemOp(2), stack=0, [0,63]}, start_pc=0xf19, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xf10,0xf1d], from_uop=4, on reg Name RSP {type RegOp(1), stack=0, [0,63]}, start_pc=0xf19, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xf10,0xf1d], from_uop=7, on reg Name RSP {type RegOp(1), stack=0, [0,63]}, start_pc=0xf19, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2
build_loops_for_interval routine: __libc_csu_init'
build_loops_for_interval routine: __libc_csu_init'
OZGURDECODE@PC at IP 0x7f48ba049f19 scale:8
OZGURIMM Stack uop at pc 0x7f48ba049f19 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049f1d imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049f24 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed2 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed7 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed9 imm:0
OZGURDCODE@PC at IP 0x7f48ba049edb disp:200ebe
OZGURIMM Stack uop at pc 0x7f48ba049ee2 imm:0
OZGURDCODE@PC at IP 0x7f48ba049ee3 disp:200ebe
OZGURIMM Stack uop at pc 0x7f48ba049eea imm:0
OZGURIMM0 if signed at pc 0x7f48ba049ef4 imm:8
OZGURIMM0 if not signed at pc 0x7f48ba049ef8 imm:3
OZGURIMM case RELLBR at pc 0x7f48ba049efc imm:0
OZGURIMM Stack uop at pc 0x7f48ba049efc imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049f04 imm:0
OZGURDECODE@PC at IP 0x7f48ba049f08 scale:1
OZGURDCODE@PC at IP 0x7f48ba049f08 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049f26 imm:8
OZGURIMM Stack uop at pc 0x7f48ba049f2a imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f2b imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f2c imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f2e imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f30 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f32 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f34 imm:0
[INFO]Routine::constructLoops(): '__libc_csu_init'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: '__libc_csu_init'
In SchedDG constructor for routine __libc_csu_init, pathId 0xed0/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: '__libc_csu_init'
OZGURIMM Stack uop at pc 0x7f48ba049ed0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed2 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed7 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ed9 imm:0
OZGURDCODE@PC at IP 0x7f48ba049edb disp:200ebe
OZGURIMM Stack uop at pc 0x7f48ba049ee2 imm:0
OZGURDCODE@PC at IP 0x7f48ba049ee3 disp:200ebe
OZGURIMM Stack uop at pc 0x7f48ba049eea imm:0
OZGURIMM0 if signed at pc 0x7f48ba049ef4 imm:8
OZGURIMM0 if not signed at pc 0x7f48ba049ef8 imm:3
OZGURIMM case RELLBR at pc 0x7f48ba049efc imm:0
OZGURIMM Stack uop at pc 0x7f48ba049efc imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049f04 imm:0
OZGURDECODE@PC at IP 0x7f48ba049f08 scale:1
OZGURDCODE@PC at IP 0x7f48ba049f08 disp:0
OZGURDECODE@PC at IP 0x7f48ba049f19 scale:8
OZGURIMM Stack uop at pc 0x7f48ba049f19 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049f1d imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049f24 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049f26 imm:8
OZGURIMM Stack uop at pc 0x7f48ba049f2a imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f2b imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f2c imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f2e imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f30 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f32 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049f34 imm:0
Sniper Routine: __libc_csu_init StartAddr:ed0
OZGURDBGX3 #Blocks: 9
	Block[0] 's startAddres: ed0 endAddress:  f01
		instruction addres:ed0
		instruction addres:ed2
		instruction addres:ed4
		instruction addres:ed7
		instruction addres:ed9
		instruction addres:edb
		instruction addres:ee2
		instruction addres:ee3
		instruction addres:eea
		instruction addres:eeb
		instruction addres:eee
		instruction addres:ef1
		instruction addres:ef4
		instruction addres:ef8
		instruction addres:efc
ed0-0
ed2-0
ed4-0
ed7-0
ed9-0
edb-0
ee2-0
ee3-0
eea-0
eeb-0
eee-0
ef1-0
ef4-0
ef8-0
efc-0

	Block[1] 's startAddres: f01 endAddress:  f01

	Block[2] 's startAddres: f01 endAddress:  f06
		instruction addres:f01
		instruction addres:f04
f01-0
f04-0

	Block[3] 's startAddres: f06 endAddress:  f10
		instruction addres:f06
		instruction addres:f08
f06-0
f08-0

	Block[4] 's startAddres: f10 endAddress:  f1d
		instruction addres:f10
		instruction addres:f13
		instruction addres:f16
		instruction addres:f19
f10-0
f13-0
f16-0
f19-0

	Block[5] 's startAddres: f1d endAddress:  f1d

	Block[6] 's startAddres: f1d endAddress:  f26
		instruction addres:f1d
		instruction addres:f21
		instruction addres:f24
f1d-0
f21-0
f24-0

	Block[7] 's startAddres: f26 endAddress:  f35
		instruction addres:f26
		instruction addres:f2a
		instruction addres:f2b
		instruction addres:f2c
		instruction addres:f2e
		instruction addres:f30
		instruction addres:f32
		instruction addres:f34
f26-0
f2a-0
f2b-0
f2c-0
f2e-0
f30-0
f32-0
f34-0

	Block[8] 's startAddres: 0 endAddress:  0
Node Oxf2a is Frame
Node Oxf2b is Frame
Node Oxf2c is Frame
Node Oxf2e is Frame
Node Oxf30 is Frame
Node Oxf32 is Frame
Node Oxf34 is Frame
f00
	ed0-0
	ed2-0
	ed4-0
	ed7-0
	ed9-0
	edb-0
	ee2-0
	ee3-0
	eea-0
	eeb-0
	eee-0
	ef1-0
	ef4-0
	ef8-0
	efc-0
f05
	f01-0
	f04-0
f0f
	f06-0
	f08-0
f1c
	f10-0
	f13-0
	f16-0
	f19-0
f25
	f1d-0
	f21-0
	f24-0
f34
	f26-0
	f2a-1
	f2b-1
	f2c-1
	f2e-1
	f30-1
	f32-1
	f34-1
ffffffffffffffff
Address	type	class
Node 7 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=ed4, type=13
ed4: Copy r76[0:63] --> r89[0:63] 
 <-- (57, 1, 37)
 --> (25 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xed4 try:0
Node 6 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=ed2, type=3
ed2: Store r88[0:63] a78[0:63] --> 
 <-- (5, 51)
 --> (25 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 51 [{ 70 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba049ed2 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xed2 try:0
Node 5 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=ed2, type=20
ed2: Add r78[0:63] --> r78[0:63] 
 <-- (3)
 --> (6 [{ 3 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 8 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xed2 try:0
Node 4 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=ed0, type=3
ed0: Store r89[0:63] a78[0:63] --> 
 <-- (3, 53)
 --> (25 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 53 [{ 73 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049ed0 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xed0 try:0
Node 3 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=ed0, type=20
ed0: Add r78[0:63] --> r78[0:63] 
 <-- (57, 56, 1, 37)
 --> (4 [{ 1 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xed0 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- (41, 57)
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
 --> (7 [{ 100 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 101 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 102 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 103 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 104 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 105 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=ed7, type=20
ed7: Add r78[0:63] --> r78[0:63] 
 <-- (5)
 --> (9 [{ 5 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xed7 try:0
Node 9 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=ed7, type=3
ed7: Store r87[0:63] a78[0:63] --> 
 <-- (8, 49)
 --> (25 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 49 [{ 67 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -24 den: 1 HAHAHA Before num: -24 den: 1 After num: -24 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x18 +
consten Term of Formula is: -24
Decoded Instruction PC:7f48ba049ed7 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xed7 try:0
Node 10 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=ed9, type=20
ed9: Add r78[0:63] --> r78[0:63] 
 <-- (8)
 --> (11 [{ 7 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xed9 try:0
Node 11 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=ed9, type=3
ed9: Store r86[0:63] a78[0:63] --> 
 <-- (10, 47)
 --> (25 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 47 [{ 64 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -32 den: 1 HAHAHA Before num: -32 den: 1 After num: -32 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x20 +
consten Term of Formula is: -32
Decoded Instruction PC:7f48ba049ed9 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xed9 try:0
Node 12 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=edb, type=21
edb: LEA --> r86[0:63] 
 <-- (57, 1, 37)
 --> (20 [{ 13 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xedb try:0
Node 13 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=ee2, type=20
ee2: Add r78[0:63] --> r78[0:63] 
 <-- (10)
 --> (14 [{ 9 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 16 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xee2 try:0
Node 14 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=ee2, type=3
ee2: Store r79[0:63] a78[0:63] --> 
 <-- (13, 45)
 --> (25 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 45 [{ 61 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -40 den: 1 HAHAHA Before num: -40 den: 1 After num: -40 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x28 +
consten Term of Formula is: -40
Decoded Instruction PC:7f48ba049ee2 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xee2 try:0
Node 15 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=ee3, type=21
ee3: LEA --> r79[0:63] 
 <-- (57, 1, 37)
 --> (20 [{ 12 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xee3 try:0
Node 16 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=eea, type=20
eea: Add r78[0:63] --> r78[0:63] 
 <-- (13)
 --> (17 [{ 11 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 21 [{ 14 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xeea try:0
Node 17 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=eea, type=3
eea: Store r77[0:63] a78[0:63] --> 
 <-- (16, 43)
 --> (25 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 43 [{ 58 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -48 den: 1 HAHAHA Before num: -48 den: 1 After num: -48 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x30 +
consten Term of Formula is: -48
Decoded Instruction PC:7f48ba049eea Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xeea try:0
Node 18 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=eeb, type=13
eeb: Copy r81[0:31] --> r87[0:31] 
 <-- (57, 1, 37)
 --> (25 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xeeb try:0
Node 19 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=eee, type=13
eee: Copy r80[0:63] --> r88[0:63] 
 <-- (57, 1, 37)
 --> (25 [{ 26 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xeee try:0
Node 20 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 20, pc=ef1, type=23
ef1: Sub r79[0:63] r86[0:63] --> r79[0:63] r41[0:63] 
 <-- (15, 12)
 --> (22 [{ 15 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xef1 try:0
Node 21 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 21, pc=ef4, type=23
ef4: Sub r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (16)
 --> (23 [{ 16 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xef4 try:0
Node 22 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 22, pc=ef8, type=30
ef8: Shift r79[0:63] --> r79[0:63] r41[0:63] 
 <-- (20)
 --> (25 [{ 27 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xef8 try:0
Node 23 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=efc, type=20
efc: Add r78[0:63] --> r78[0:63] 
 <-- (21)
 --> (24 [{ 17 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xefc try:0
Node 24 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 24, pc=efc, type=3
efc: Store a78[0:63] --> 
 <-- (23)
 --> (25 [{ 28 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049efc Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0xefc try:0
Node 25 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 25, pc=efc, type=9
efc: Jump --> 
 <-- (7, 6, 4, 9, 11, 14, 17, 18, 19, 22, 24, 41, 57)
 --> (26 [{ 29 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 27 [{ 30 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 29 [{ 33 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 30 [{ 34 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 31 [{ 35 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 32 [{ 36 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 33 [{ 37 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 35 [{ 41 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xefc try:0
Node 26 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 26, pc=efc, type=20
efc: Add r78[0:63] --> r78[0:63] 
 <-- (25)
 --> (28 [{ 32 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 35 [{ 39 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xefc try:0
Node 27 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 27, pc=f01, type=29
f01: LogicalOp r79[0:63] r79[0:63] --> r41[0:63] 
 <-- (25)
 --> (28 [{ 31 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf01 try:0
Node 28 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 28, pc=f04, type=8
f04: CondBranch r41[0:63] --> 
 <-- (27, 26)
 --> (35 [{ 40 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 37 [{ 49 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf04 try:0
Node 29 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 29, pc=f06, type=28
f06: Xor r77[0:31] r77[0:31] --> r77[0:31] r41[0:31] 
 <-- (25)
 --> (34 [{ 38 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf06 try:0
Node 30 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 30, pc=f08, type=31
f08: NOP --> 
 <-- (25)
 --> (37 [{ 44 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf08 try:0
Node 31 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 31, pc=f10, type=13
f10: Copy r89[0:63] --> r76[0:63] 
 <-- (25)
 --> (37 [{ 45 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf10 try:0
Node 32 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 32, pc=f13, type=13
f13: Copy r88[0:63] --> r80[0:63] 
 <-- (25)
 --> (37 [{ 46 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf13 try:0
Node 33 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 33, pc=f16, type=13
f16: Copy r87[0:31] --> r81[0:31] 
 <-- (25)
 --> (37 [{ 47 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf16 try:0
Node 34 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 34, pc=f19, type=2
f19: Load a86[0:63] a77[0:63] --> t0[0:63] 
 <-- (29)
 --> (37 [{ 43 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2104736 den: 1 HAHAHA Before num: 2104736 den: 1 After num: 2104736 den: 1
ref->base:  0x201da0 +
consten Term of Formula is: 2104736
Decoded Instruction PC:7f48ba049f19 Reloc:7f48ba049000 len:4 disp:0 scale:8
OZGURDBG::instrumenting node:0xf19 try:0
f19	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name R12 {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 86
PTW r12  @ 0x556e1d48ad70
Print Src reg info
Name RBX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 77
PTW rbx  @ 0x556e1d48ad70
Node 35 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 35, pc=f19, type=20
f19: Add r78[0:63] --> r78[0:63] 
 <-- (26, 28, 25)
 --> (36 [{ 42 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf19 try:0
Node 36 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 36, pc=f19, type=3
f19: Store a78[0:63] --> 
 <-- (35)
 --> (37 [{ 48 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049f19 Reloc:7f48ba049000 len:4 disp:0 scale:8
OZGURDBG::instrumenting node:0xf19 try:0
Node 37 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 37, pc=f19, type=9
f19: Jump t0[0:63] --> 
 <-- (34, 30, 31, 32, 33, 36, 28)
 --> (38 [{ 50 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 39 [{ 51 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 42 [{ 57 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 57 [{ 78 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 110 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 111 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 12 [{ 112 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 113 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 18 [{ 114 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 19 [{ 115 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xf19 try:0
Node 38 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 38, pc=f19, type=20
f19: Add r78[0:63] --> r78[0:63] 
 <-- (37)
 --> (41 [{ 54 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 42 [{ 55 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf19 try:0
Node 39 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 39, pc=f1d, type=20
f1d: Add r77[0:63] --> r77[0:63] r41[0:63] 
 <-- (37)
 --> (40 [{ 52 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf1d try:0
Node 40 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 40, pc=f21, type=19
f21: Cmp r79[0:63] r77[0:63] --> r41[0:63] 
 <-- (39)
 --> (41 [{ 53 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf21 try:0
Node 41 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 41, pc=f24, type=8
f24: CondBranch r41[0:63] --> 
 <-- (40, 38)
 --> (42 [{ 56 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 2 [{ 106 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 25 [{ 108 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xf24 try:0
Node 42 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 42, pc=f26, type=20
f26: Add r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (38, 41, 37)
 --> (43 [{ 59 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 44 [{ 60 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf26 try:0
Node 43 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 43, pc=f2a, type=2
f2a: Load a78[0:63] --> r77[0:63] 
 <-- (17, 42)
 --> (57 [{ 79 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 17 [{ 99 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -48 den: 1 HAHAHA Before num: -48 den: 1 After num: -48 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x30 +
consten Term of Formula is: -48
Decoded Instruction PC:7f48ba049f2a Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xf2a try:0
Node 44 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 44, pc=f2a, type=20
f2a: Add r78[0:63] --> r78[0:63] 
 <-- (42)
 --> (45 [{ 62 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 46 [{ 63 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf2a try:0
Node 45 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 45, pc=f2b, type=2
f2b: Load a78[0:63] --> r79[0:63] 
 <-- (14, 44)
 --> (57 [{ 80 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 98 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -40 den: 1 HAHAHA Before num: -40 den: 1 After num: -40 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x28 +
consten Term of Formula is: -40
Decoded Instruction PC:7f48ba049f2b Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xf2b try:0
Node 46 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 46, pc=f2b, type=20
f2b: Add r78[0:63] --> r78[0:63] 
 <-- (44)
 --> (47 [{ 65 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 48 [{ 66 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf2b try:0
Node 47 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 47, pc=f2c, type=2
f2c: Load a78[0:63] --> r86[0:63] 
 <-- (11, 46)
 --> (57 [{ 81 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 97 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -32 den: 1 HAHAHA Before num: -32 den: 1 After num: -32 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x20 +
consten Term of Formula is: -32
Decoded Instruction PC:7f48ba049f2c Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xf2c try:0
Node 48 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 48, pc=f2c, type=20
f2c: Add r78[0:63] --> r78[0:63] 
 <-- (46)
 --> (49 [{ 68 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 50 [{ 69 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf2c try:0
Node 49 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 49, pc=f2e, type=2
f2e: Load a78[0:63] --> r87[0:63] 
 <-- (9, 48)
 --> (57 [{ 82 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 96 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -24 den: 1 HAHAHA Before num: -24 den: 1 After num: -24 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x18 +
consten Term of Formula is: -24
Decoded Instruction PC:7f48ba049f2e Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xf2e try:0
Node 50 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 50, pc=f2e, type=20
f2e: Add r78[0:63] --> r78[0:63] 
 <-- (48)
 --> (51 [{ 71 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 52 [{ 72 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf2e try:0
Node 51 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 51, pc=f30, type=2
f30: Load a78[0:63] --> r88[0:63] 
 <-- (6, 50)
 --> (57 [{ 83 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 95 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba049f30 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xf30 try:0
Node 52 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 52, pc=f30, type=20
f30: Add r78[0:63] --> r78[0:63] 
 <-- (50)
 --> (53 [{ 74 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 54 [{ 75 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf30 try:0
Node 53 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 53, pc=f32, type=2
f32: Load a78[0:63] --> r89[0:63] 
 <-- (4, 52)
 --> (57 [{ 84 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 4 [{ 94 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049f32 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xf32 try:0
Node 54 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 54, pc=f32, type=20
f32: Add r78[0:63] --> r78[0:63] 
 <-- (52)
 --> (55 [{ 76 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 56 [{ 77 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf32 try:0
Node 55 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 55, pc=f34, type=2
f34: Load a78[0:63] --> 
 <-- (54)
 --> (57 [{ 85 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xed0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049f34 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xf34 try:0
Node 56 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 56, pc=f34, type=20
f34: Add r78[0:63] --> r78[0:63] 
 <-- (54)
 --> (57 [{ 86 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 93 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xf34 try:0
Node 57 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 57, pc=f34, type=10
f34: Return --> 
 <-- (37, 43, 45, 47, 49, 51, 53, 55, 56)
 --> (7 [{ 87 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 88 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 12 [{ 89 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 90 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 18 [{ 91 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 19 [{ 92 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 2 [{ 107 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 25 [{ 109 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xf34 try:0
f00
	ed0-0
	ed2-0
	ed4-0
	ed7-0
	ed9-0
	edb-0
	ee2-0
	ee3-0
	eea-0
	eeb-0
	eee-0
	ef1-0
	ef4-0
	ef8-0
	efc-0
f05
	f01-0
	f04-0
f0f
	f06-0
	f08-0
f1c
	f10-0
	f13-0
	f16-0
	f19-0
f25
	f1d-0
	f21-0
	f24-0
f34
	f26-0
	f2a-1
	f2b-1
	f2c-1
	f2e-1
	f30-1
	f32-1
	f34-1
ffffffffffffffff
f00-0
f00-0
f05-0
f05-0
f0f-0
f0f-0
f1c-0
f1c-0
f25-0
f25-0
f34-7
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load atf2a
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d4baf90
f34-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:8	frame:7	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: __libc_csu_init
Name of the routine is: __libc_csu_fini
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: __libc_csu_fini start: 0xf40 offset: 0xf40 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): '__libc_csu_fini 0x7f48ba049000'
OZGURDBG discover_CFG: 0xf40 0xf40 0xf42
OZGURIMM Stack uop at pc 0x7f48ba049f40 imm:0
main_analysis841
[INFO]Routine::main_analysis(): '__libc_csu_fini'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM Stack uop at pc 0x7f48ba049f40 imm:0
 This is Rslice 0x556e1d4992c0
build_loops_for_interval routine: __libc_csu_fini'
OZGURIMM Stack uop at pc 0x7f48ba049f40 imm:0
[INFO]Routine::constructLoops(): '__libc_csu_fini'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: '__libc_csu_fini'
In SchedDG constructor for routine __libc_csu_fini, pathId 0xf40/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: '__libc_csu_fini'
OZGURIMM Stack uop at pc 0x7f48ba049f40 imm:0
Sniper Routine: __libc_csu_fini StartAddr:f40
OZGURDBGX3 #Blocks: 2
	Block[0] 's startAddres: f40 endAddress:  f42
		instruction addres:f40
f40-0

	Block[1] 's startAddres: 0 endAddress:  0
Node Oxf40 is Frame
f41
	f40-1
ffffffffffffffff
Address	type	class
Node 5 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=f40, type=10
f40: Return --> 
 <-- (4, 3)
 --> (4 [{ 3 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 4 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xf40 try:0
Node 4 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=f40, type=20
f40: Add r78[0:63] --> r78[0:63] 
 <-- (5, 4)
 --> (5 [{ 1 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 5 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 4 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xf40 try:0
Node 3 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=f40, type=2
f40: Load a78[0:63] --> 
 <-- (5, 4)
 --> (5 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xf40,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049f40 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xf40 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
f41
	f40-1
ffffffffffffffff
f41-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load atf40
Node has 1 src regs
Node has 0 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d4bb6d0
f41-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:1	frame:1	strided:0	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: __libc_csu_fini
Name of the routine is: _fini
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: _fini start: 0xf44 offset: 0xf44 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): '_fini 0x7f48ba049000'
OZGURDBG discover_CFG: 0xf44 0xf44 0xf4d
OZGURIMM Stack uop at pc 0x7f48ba049f4c imm:0
main_analysis841
[INFO]Routine::main_analysis(): '_fini'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM0 if signed at pc 0x7f48ba049f44 imm:8
OZGURIMM0 if signed at pc 0x7f48ba049f48 imm:8
OZGURIMM Stack uop at pc 0x7f48ba049f4c imm:0
 This is Rslice 0x556e1d4992c0
build_loops_for_interval routine: _fini'
OZGURIMM0 if signed at pc 0x7f48ba049f44 imm:8
OZGURIMM0 if signed at pc 0x7f48ba049f48 imm:8
OZGURIMM Stack uop at pc 0x7f48ba049f4c imm:0
[INFO]Routine::constructLoops(): '_fini'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: '_fini'
In SchedDG constructor for routine _fini, pathId 0xf44/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: '_fini'
OZGURIMM0 if signed at pc 0x7f48ba049f44 imm:8
OZGURIMM0 if signed at pc 0x7f48ba049f48 imm:8
OZGURIMM Stack uop at pc 0x7f48ba049f4c imm:0
Sniper Routine: _fini StartAddr:f44
OZGURDBGX3 #Blocks: 2
	Block[0] 's startAddres: f44 endAddress:  f4d
		instruction addres:f44
		instruction addres:f48
		instruction addres:f4c
f44-0
f48-0
f4c-0

	Block[1] 's startAddres: 0 endAddress:  0
Node Oxf4c is Frame
f4c
	f44-0
	f48-0
	f4c-1
ffffffffffffffff
Address	type	class
Node 7 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=f4c, type=10
f4c: Return --> 
 <-- (6, 5)
 --> (3 [{ 6 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xf4c try:0
Node 6 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=f4c, type=20
f4c: Add r78[0:63] --> r78[0:63] 
 <-- (4)
 --> (7 [{ 4 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xf4c try:0
Node 5 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=f4c, type=2
f4c: Load a78[0:63] --> 
 <-- (4)
 --> (7 [{ 5 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xf44,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049f4c Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xf4c try:0
Node 4 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=f48, type=20
f48: Add r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (3)
 --> (5 [{ 2 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf48 try:0
Node 3 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=f44, type=23
f44: Sub r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (7, 6)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xf44 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
f4c
	f44-0
	f48-0
	f4c-1
ffffffffffffffff
f4c-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load atf4c
Node has 1 src regs
Node has 0 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d498ac0
f4c-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:1	frame:1	strided:0	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: _fini
Name of the routine is: random
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: random start: 0x5e0 offset: 0x5e0 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'random 0x7f48ba049000'
OZGURDBG discover_CFG: 0x5e0 0x5e0 0x5e6
OZGURDCODE@PC at IP 0x7f48ba0495e0 disp:2019e2
OZGURDBG sliceVal:   Reg_T0/0{TempReg}[0,63](0x7f48ba0495e0,-1) 
OZGURERROR:: in func StartSLice pc is:0x7f48ba0495e0 block start:0x5e0 b end:0x5e6
PartialCFGSlice::StartSlice, block [0x5e0,0x5e6], on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0x7f48ba0495e0 micro-op type 7 (UncondBranch)
main_analysis841
[INFO]Routine::main_analysis(): 'random'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURDCODE@PC at IP 0x7f48ba0495e0 disp:2019e2
OZGURDBGSLICE at IP 5e0 disp:2019e2
 This is Rslice 0x556e1d4992c0
build_loops_for_interval routine: random'
OZGURDCODE@PC at IP 0x7f48ba0495e0 disp:2019e2
[INFO]Routine::constructLoops(): 'random'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'random'
In SchedDG constructor for routine random, pathId 0x5e0/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'random'
OZGURDCODE@PC at IP 0x7f48ba0495e0 disp:2019e2
Sniper Routine: random StartAddr:5e0
OZGURDBGX3 #Blocks: 2
	Block[0] 's startAddres: 5e0 endAddress:  5e6
		instruction addres:5e0
5e0-0

	Block[1] 's startAddres: 0 endAddress:  0
5e5
	5e0-0
ffffffffffffffff
--SERIOUS-- #100: Image: Unable to find function: random
Address	type	class
Node 4 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=5e0, type=7
5e0: UncondBranch t0[0:63] --> 
 <-- (3)
 --> (3 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x5e0 try:0
Node 3 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=5e0, type=2
5e0: Load --> t0[0:63] 
 <-- (4)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105288 den: 1 HAHAHA Before num: 2105288 den: 1 After num: 2105288 den: 1
ref->base:  0x201fc8 +
consten Term of Formula is: 2105288
Decoded Instruction PC:7f48ba0495e0 Reloc:7f48ba049000 len:6 disp:2019e2 scale:1
OZGURDBG::instrumenting node:0x5e0 try:0
5e0	load	strided
OZGURDBG Instrumenting Strided Load
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
5e5
	5e0-0
ffffffffffffffff
5e5-0
5e5-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:1	frame:0	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: random
Name of the routine is: _start
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: _start start: 0x820 offset: 0x820 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): '_start 0x7f48ba049000'
OZGURDBG discover_CFG: 0x820 0x820 0x84b
OZGURDCODE@PC at IP 0x7f48ba049844 disp:201796
OZGURIMM Stack uop at pc 0x7f48ba049844 imm:0
OZGURDBG discover_CFG: 0x84a 0x820 0x84b
main_analysis841
[INFO]Routine::main_analysis(): '_start'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM Stack uop at pc 0x7f48ba049825 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049829 imm:fffffffffffffff0
OZGURIMM Stack uop at pc 0x7f48ba04982d imm:0
OZGURIMM Stack uop at pc 0x7f48ba04982e imm:0
OZGURDCODE@PC at IP 0x7f48ba04982f disp:70a
OZGURDCODE@PC at IP 0x7f48ba049836 disp:693
OZGURDCODE@PC at IP 0x7f48ba04983d disp:fffffffffffffdcc
OZGURDCODE@PC at IP 0x7f48ba049844 disp:201796
OZGURIMM Stack uop at pc 0x7f48ba049844 imm:0
OZGURDBGSLICE at IP 844 disp:201796
 This is Rslice 0x556e1d4992c0
build_loops_for_interval routine: _start'
OZGURIMM Stack uop at pc 0x7f48ba049825 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049829 imm:fffffffffffffff0
OZGURIMM Stack uop at pc 0x7f48ba04982d imm:0
OZGURIMM Stack uop at pc 0x7f48ba04982e imm:0
OZGURDCODE@PC at IP 0x7f48ba04982f disp:70a
OZGURDCODE@PC at IP 0x7f48ba049836 disp:693
OZGURDCODE@PC at IP 0x7f48ba04983d disp:fffffffffffffdcc
OZGURDCODE@PC at IP 0x7f48ba049844 disp:201796
OZGURIMM Stack uop at pc 0x7f48ba049844 imm:0
[INFO]Routine::constructLoops(): '_start'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: '_start'
In SchedDG constructor for routine _start, pathId 0x820/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: '_start'
OZGURIMM Stack uop at pc 0x7f48ba049825 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049829 imm:fffffffffffffff0
OZGURIMM Stack uop at pc 0x7f48ba04982d imm:0
OZGURIMM Stack uop at pc 0x7f48ba04982e imm:0
OZGURDCODE@PC at IP 0x7f48ba04982f disp:70a
OZGURDCODE@PC at IP 0x7f48ba049836 disp:693
OZGURDCODE@PC at IP 0x7f48ba04983d disp:fffffffffffffdcc
OZGURDCODE@PC at IP 0x7f48ba049844 disp:201796
OZGURIMM Stack uop at pc 0x7f48ba049844 imm:0
Sniper Routine: _start StartAddr:820
OZGURDBGX3 #Blocks: 4
	Block[0] 's startAddres: 820 endAddress:  84a
		instruction addres:820
		instruction addres:822
		instruction addres:825
		instruction addres:826
		instruction addres:829
		instruction addres:82d
		instruction addres:82e
		instruction addres:82f
		instruction addres:836
		instruction addres:83d
		instruction addres:844
820-0
822-0
825-0
826-0
829-0
82d-0
82e-0
82f-0
836-0
83d-0
844-0

	Block[1] 's startAddres: 84a endAddress:  84a

	Block[2] 's startAddres: 84a endAddress:  84b
		instruction addres:84a
84a-0

	Block[3] 's startAddres: 0 endAddress:  0
Node Ox825 is Frame
849
	820-0
	822-0
	825-1
	826-0
	829-0
	82d-0
	82e-0
	82f-0
	836-0
	83d-0
	844-0
84a
	84a-0
ffffffffffffffff
Address	type	class
Node 7 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=826, type=13
826: Copy r78[0:63] --> r76[0:63] 
 <-- (6)
 --> (19 [{ 11 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x826 try:0
Node 6 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=825, type=20
825: Add r78[0:63] --> r78[0:63] 
 <-- (19, 20, 1)
 --> (7 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 8 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x825 try:0
Node 5 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=825, type=2
825: Load a78[0:63] --> r80[0:63] 
 <-- (19, 20, 1)
 --> (19 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0x820,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049825 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x825 try:0
Node 4 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=822, type=13
822: Copy r76[0:63] --> r83[0:63] 
 <-- (19, 1)
 --> (19 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x822 try:0
Node 3 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=820, type=28
820: Xor r79[0:31] r79[0:31] --> r79[0:31] r41[0:31] 
 <-- (19, 1)
 --> (19 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x820 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- (20, 21)
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
 --> (6 [{ 33 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 34 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 4 [{ 35 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 36 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 37 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 38 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 39 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 16 [{ 40 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x0 try:0
Node 12 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=82e, type=3
82e: Store r78[0:63] a78[0:63] --> 
 <-- (11, 11)
 --> (19 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x829,5) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba04982e Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x82e try:0
Node 9 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=82d, type=20
82d: Add r78[0:63] --> r78[0:63] 
 <-- (8)
 --> (10 [{ 4 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x82d try:0
Node 10 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=82d, type=3
82d: Store r74[0:63] a78[0:63] --> 
 <-- (9)
 --> (19 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x829,5) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba04982d Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x82d try:0
Node 8 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=829, type=29
829: LogicalOp r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (6)
 --> (9 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x829 try:0
Node 11 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=82e, type=20
82e: Add r78[0:63] --> r78[0:63] 
 <-- (9)
 --> (12 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 7 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 17 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x82e try:0
Node 13 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=82f, type=21
82f: LEA --> r82[0:63] 
 <-- (19, 1)
 --> (19 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x82f try:0
Node 14 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=836, type=21
836: LEA --> r75[0:63] 
 <-- (19, 1)
 --> (19 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x836 try:0
Node 15 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=83d, type=21
83d: LEA --> r81[0:63] 
 <-- (19, 1)
 --> (19 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x83d try:0
Node 16 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=844, type=2
844: Load --> t0[0:63] 
 <-- (19, 1)
 --> (19 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105312 den: 1 HAHAHA Before num: 2105312 den: 1 After num: 2105312 den: 1
ref->base:  0x201fe0 +
consten Term of Formula is: 2105312
Decoded Instruction PC:7f48ba049844 Reloc:7f48ba049000 len:6 disp:201796 scale:1
OZGURDBG::instrumenting node:0x844 try:0
844	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 17 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=844, type=20
844: Add r78[0:63] --> r78[0:63] 
 <-- (11)
 --> (18 [{ 9 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x844 try:0
Node 18 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=844, type=3
844: Store a78[0:63] --> 
 <-- (17)
 --> (19 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -24 den: 1 HAHAHA Before num: -24 den: 1 After num: -24 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x829,5) + -0x18 +
consten Term of Formula is: -24
Decoded Instruction PC:7f48ba049844 Reloc:7f48ba049000 len:6 disp:201796 scale:1
OZGURDBG::instrumenting node:0x844 try:0
Node 19 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=844, type=9
844: Jump t0[0:63] --> 
 <-- (16, 7, 5, 4, 3, 12, 10, 13, 14, 15, 18, 20, 21)
 --> (20 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 21 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 4 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 26 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 27 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 14 [{ 28 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 29 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 30 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x844 try:0
Node 20 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 20, pc=844, type=20
844: Add r78[0:63] --> r78[0:63] 
 <-- (19)
 --> (5 [{ 31 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 32 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 2 [{ 41 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 43 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x844 try:0
Node 21 of type PrivilegedOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 21, pc=84a, type=6
84a: PrivilegedOp --> 
 <-- (19)
 --> (2 [{ 42 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 44 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x84a try:0
849
	820-0
	822-0
	825-1
	826-0
	829-0
	82d-0
	82e-0
	82f-0
	836-0
	83d-0
	844-0
84a
	84a-0
ffffffffffffffff
849-0
849-0
84a-0
84a-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:2	frame:1	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: _start
Name of the routine is: targ600
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: targ600 start: 0x600 offset: 0x600 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'targ600 0x7f48ba049000'
OZGURDBG discover_CFG: 0x600 0x600 0x606
OZGURDCODE@PC at IP 0x7f48ba049600 disp:2019f2
OZGURDBG sliceVal:   Reg_T0/0{TempReg}[0,63](0x7f48ba049600,-1) 
OZGURERROR:: in func StartSLice pc is:0x7f48ba049600 block start:0x600 b end:0x606
PartialCFGSlice::StartSlice, block [0x600,0x606], on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0x7f48ba049600 micro-op type 7 (UncondBranch)
main_analysis841
[INFO]Routine::main_analysis(): 'targ600'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURDCODE@PC at IP 0x7f48ba049600 disp:2019f2
OZGURDBGSLICE at IP 600 disp:2019f2
 This is Rslice 0x556e1d4992c0
build_loops_for_interval routine: targ600'
OZGURDCODE@PC at IP 0x7f48ba049600 disp:2019f2
[INFO]Routine::constructLoops(): 'targ600'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'targ600'
In SchedDG constructor for routine targ600, pathId 0x600/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'targ600'
OZGURDCODE@PC at IP 0x7f48ba049600 disp:2019f2
Sniper Routine: targ600 StartAddr:600
OZGURDBGX3 #Blocks: 2
	Block[0] 's startAddres: 600 endAddress:  606
		instruction addres:600
600-0

	Block[1] 's startAddres: 0 endAddress:  0
605
	600-0
ffffffffffffffff
Address	type	class
Node 4 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=600, type=7
600: UncondBranch t0[0:63] --> 
 <-- (3)
 --> (3 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x600 try:0
Node 3 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=600, type=2
600: Load --> t0[0:63] 
 <-- (4)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105336 den: 1 HAHAHA Before num: 2105336 den: 1 After num: 2105336 den: 1
ref->base:  0x201ff8 +
consten Term of Formula is: 2105336
Decoded Instruction PC:7f48ba049600 Reloc:7f48ba049000 len:6 disp:2019f2 scale:1
OZGURDBG::instrumenting node:0x600 try:0
600	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
605
	600-0
ffffffffffffffff
605-0
605-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:1	frame:0	strided:1	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: targ600
Name of the routine is: main
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: main start: 0x610 offset: 0x610 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'main 0x7f48ba049000'
OZGURDBG discover_CFG: 0x610 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049621 imm:0
OZGURDBGSLICE at IP 7f48ba049621 imm_values:ea
OZGURDBG discover_CFG: 0x7f48ba049711 0x610 0x811
OZGURDBG discover_CFG: 0x711 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04971c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04971c imm:0
OZGURDBGSLICE at IP 7f48ba04971c imm_values:fffffffffffffeaf
OZGURDBG discover_CFG: 0x7f48ba0495d0 0x610 0x811
OZGURDBG discover_CFG: 0x5d0 0x610 0x811
OZGURDBG discover_CFG: 0x721 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049736 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049736 imm:0
OZGURDBGSLICE at IP 7f48ba049736 imm_values:fffffffffffffeb5
OZGURDBG discover_CFG: 0x7f48ba0495f0 0x610 0x811
OZGURDBG discover_CFG: 0x5f0 0x610 0x811
OZGURDBG discover_CFG: 0x73b 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049741 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049741 imm:0
OZGURDBGSLICE at IP 7f48ba049741 imm_values:fffffffffffffeaa
OZGURDBG discover_CFG: 0x7f48ba0495f0 0x610 0x811
OZGURDBG discover_CFG: 0x5f0 0x610 0x811
OZGURDBG discover_CFG: 0x746 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04974c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04974c imm:0
OZGURDBGSLICE at IP 7f48ba04974c imm_values:fffffffffffffe9f
OZGURDBG discover_CFG: 0x7f48ba0495f0 0x610 0x811
OZGURDBG discover_CFG: 0x5f0 0x610 0x811
OZGURDBG discover_CFG: 0x751 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049757 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049757 imm:0
OZGURDBGSLICE at IP 7f48ba049757 imm_values:fffffffffffffe94
OZGURDBG discover_CFG: 0x7f48ba0495f0 0x610 0x811
OZGURDBG discover_CFG: 0x5f0 0x610 0x811
OZGURDBG discover_CFG: 0x75c 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049765 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049765 imm:0
OZGURDBGSLICE at IP 7f48ba049765 imm_values:1c6
OZGURDBG discover_CFG: 0x7f48ba049930 0x610 0x811
OZGURDBG discover_CFG: 0x930 0x610 0x811
OZGURDBG discover_CFG: 0x76a 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049774 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049774 imm:0
OZGURDBGSLICE at IP 7f48ba049774 imm_values:1f7
OZGURDBG discover_CFG: 0x7f48ba049970 0x610 0x811
OZGURDBG discover_CFG: 0x970 0x610 0x811
OZGURDBG discover_CFG: 0x779 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04977c imm:0
OZGURDBGSLICE at IP 7f48ba04977c imm_values:ffffffffffffff0e
OZGURDBG discover_CFG: 0x7f48ba049690 0x610 0x811
OZGURDBG discover_CFG: 0x690 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049693 imm:0
OZGURDBGSLICE at IP 7f48ba049693 imm_values:136
OZGURDBG discover_CFG: 0x7f48ba0497cf 0x610 0x811
OZGURDBG discover_CFG: 0x7cf 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0497d9 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497d9 imm:0
OZGURDBGSLICE at IP 7f48ba0497d9 imm_values:332
OZGURDBG discover_CFG: 0x7f48ba049b10 0x610 0x811
OZGURDBG discover_CFG: 0xb10 0x610 0x811
OZGURDBG discover_CFG: 0x7de 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0497de imm:0
OZGURDBGSLICE at IP 7f48ba0497de imm_values:fffffffffffffeb6
OZGURDBG discover_CFG: 0x7f48ba049699 0x610 0x811
OZGURDBG discover_CFG: 0x699 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04969c imm:0
OZGURDBGSLICE at IP 7f48ba04969c imm_values:15b
OZGURDBG discover_CFG: 0x7f48ba0497fd 0x610 0x811
OZGURDBG discover_CFG: 0x7fd 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049807 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049807 imm:0
OZGURDBGSLICE at IP 7f48ba049807 imm_values:344
OZGURDBG discover_CFG: 0x7f48ba049b50 0x610 0x811
OZGURDBG discover_CFG: 0xb50 0x610 0x811
OZGURDBG discover_CFG: 0x80c 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04980c imm:0
OZGURDBGSLICE at IP 7f48ba04980c imm_values:fffffffffffffe91
OZGURDBG discover_CFG: 0x7f48ba0496a2 0x610 0x811
OZGURDBG discover_CFG: 0x6a2 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496a5 imm:0
OZGURDBGSLICE at IP 7f48ba0496a5 imm_values:138
OZGURDBG discover_CFG: 0x7f48ba0497e3 0x610 0x811
OZGURDBG discover_CFG: 0x7e3 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0497f3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497f3 imm:0
OZGURDBGSLICE at IP 7f48ba0497f3 imm_values:658
OZGURDBG discover_CFG: 0x7f48ba049e50 0x610 0x811
OZGURDBG discover_CFG: 0xe50 0x610 0x811
OZGURDBG discover_CFG: 0x7f8 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0497f8 imm:0
OZGURDBGSLICE at IP 7f48ba0497f8 imm_values:fffffffffffffeae
OZGURDBG discover_CFG: 0x7f48ba0496ab 0x610 0x811
OZGURDBG discover_CFG: 0x6ab 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496ae imm:0
OZGURDBGSLICE at IP 7f48ba0496ae imm_values:ea
OZGURDBG discover_CFG: 0x7f48ba04979e 0x610 0x811
OZGURDBG discover_CFG: 0x79e 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0497ab imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497ab imm:0
OZGURDBGSLICE at IP 7f48ba0497ab imm_values:5b0
OZGURDBG discover_CFG: 0x7f48ba049d60 0x610 0x811
OZGURDBG discover_CFG: 0xd60 0x610 0x811
OZGURDBG discover_CFG: 0x7b0 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0497b0 imm:0
OZGURDBGSLICE at IP 7f48ba0497b0 imm_values:fffffffffffffeff
OZGURDBG discover_CFG: 0x7f48ba0496b4 0x610 0x811
OZGURDBG discover_CFG: 0x6b4 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496b7 imm:0
OZGURDBGSLICE at IP 7f48ba0496b7 imm_values:ca
OZGURDBG discover_CFG: 0x7f48ba049787 0x610 0x811
OZGURDBG discover_CFG: 0x787 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049794 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049794 imm:0
OZGURDBGSLICE at IP 7f48ba049794 imm_values:5f7
OZGURDBG discover_CFG: 0x7f48ba049d90 0x610 0x811
OZGURDBG discover_CFG: 0xd90 0x610 0x811
OZGURDBG discover_CFG: 0x799 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049799 imm:0
OZGURDBGSLICE at IP 7f48ba049799 imm_values:ffffffffffffff1f
OZGURDBG discover_CFG: 0x7f48ba0496bd 0x610 0x811
OZGURDBG discover_CFG: 0x6bd 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496c0 imm:0
OZGURDBGSLICE at IP 7f48ba0496c0 imm_values:ef
OZGURDBG discover_CFG: 0x7f48ba0497b5 0x610 0x811
OZGURDBG discover_CFG: 0x7b5 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0497c5 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497c5 imm:0
OZGURDBGSLICE at IP 7f48ba0497c5 imm_values:616
OZGURDBG discover_CFG: 0x7f48ba049de0 0x610 0x811
OZGURDBG discover_CFG: 0xde0 0x610 0x811
OZGURDBG discover_CFG: 0x7ca 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0497ca imm:0
OZGURDBGSLICE at IP 7f48ba0497ca imm_values:fffffffffffffef7
OZGURDBG discover_CFG: 0x7f48ba0496c6 0x610 0x811
OZGURDBG discover_CFG: 0x6c6 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496c9 imm:0
OZGURDBGSLICE at IP 7f48ba0496c9 imm_values:15
OZGURDBG discover_CFG: 0x7f48ba0496e0 0x610 0x811
OZGURDBG discover_CFG: 0x6e0 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496e3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496e3 imm:0
OZGURDBGSLICE at IP 7f48ba0496e3 imm_values:fffffffffffffed8
OZGURDBG discover_CFG: 0x7f48ba0495c0 0x610 0x811
OZGURDBG discover_CFG: 0x5c0 0x610 0x811
OZGURDBG discover_CFG: 0x6e8 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496eb imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496eb imm:0
OZGURDBGSLICE at IP 7f48ba0496eb imm_values:fffffffffffffed0
OZGURDBG discover_CFG: 0x7f48ba0495c0 0x610 0x811
OZGURDBG discover_CFG: 0x5c0 0x610 0x811
OZGURDBG discover_CFG: 0x6f0 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496f3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496f3 imm:0
OZGURDBGSLICE at IP 7f48ba0496f3 imm_values:fffffffffffffec8
OZGURDBG discover_CFG: 0x7f48ba0495c0 0x610 0x811
OZGURDBG discover_CFG: 0x5c0 0x610 0x811
OZGURDBG discover_CFG: 0x6f8 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496fb imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496fb imm:0
OZGURDBGSLICE at IP 7f48ba0496fb imm_values:fffffffffffffec0
OZGURDBG discover_CFG: 0x7f48ba0495c0 0x610 0x811
OZGURDBG discover_CFG: 0x5c0 0x610 0x811
OZGURDBG discover_CFG: 0x700 0x610 0x811
OZGURIMM Stack uop at pc 0x7f48ba049710 imm:0
OZGURDBG discover_CFG: 0x6cb 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba0496db imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496db imm:0
OZGURDBGSLICE at IP 7f48ba0496db imm_values:730
OZGURDBG discover_CFG: 0x7f48ba049e10 0x610 0x811
OZGURDBG discover_CFG: 0xe10 0x610 0x811
OZGURDBG discover_CFG: 0x6e0 0x610 0x811
OZGURDBG discover_CFG: 0x6c6 0x610 0x811
OZGURDBG discover_CFG: 0x6bd 0x610 0x811
OZGURDBG discover_CFG: 0x6b4 0x610 0x811
OZGURDBG discover_CFG: 0x6ab 0x610 0x811
OZGURDBG discover_CFG: 0x6a2 0x610 0x811
OZGURDBG discover_CFG: 0x699 0x610 0x811
OZGURDBG discover_CFG: 0x782 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049782 imm:0
OZGURDBGSLICE at IP 7f48ba049782 imm_values:fffffffffffffefa
OZGURDBG discover_CFG: 0x7f48ba049681 0x610 0x811
OZGURDBG discover_CFG: 0x681 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04968b imm:0
OZGURIMM Stack uop at pc 0x7f48ba04968b imm:0
OZGURDBGSLICE at IP 7f48ba04968b imm_values:540
OZGURDBG discover_CFG: 0x7f48ba049bd0 0x610 0x811
OZGURDBG discover_CFG: 0xbd0 0x610 0x811
OZGURDBG discover_CFG: 0x690 0x610 0x811
OZGURDBG discover_CFG: 0x627 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049639 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049639 imm:0
OZGURDBGSLICE at IP 7f48ba049639 imm_values:ffffffffffffffb2
OZGURDBG discover_CFG: 0x7f48ba0495f0 0x610 0x811
OZGURDBG discover_CFG: 0x5f0 0x610 0x811
OZGURDBG discover_CFG: 0x63e 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba049644 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049644 imm:0
OZGURDBGSLICE at IP 7f48ba049644 imm_values:ffffffffffffffa7
OZGURDBG discover_CFG: 0x7f48ba0495f0 0x610 0x811
OZGURDBG discover_CFG: 0x5f0 0x610 0x811
OZGURDBG discover_CFG: 0x649 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04964f imm:0
OZGURIMM Stack uop at pc 0x7f48ba04964f imm:0
OZGURDBGSLICE at IP 7f48ba04964f imm_values:ffffffffffffff9c
OZGURDBG discover_CFG: 0x7f48ba0495f0 0x610 0x811
OZGURDBG discover_CFG: 0x5f0 0x610 0x811
OZGURDBG discover_CFG: 0x654 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04965f imm:0
OZGURIMM Stack uop at pc 0x7f48ba04965f imm:0
OZGURDBGSLICE at IP 7f48ba04965f imm_values:ffffffffffffff8c
OZGURDBG discover_CFG: 0x7f48ba0495f0 0x610 0x811
OZGURDBG discover_CFG: 0x5f0 0x610 0x811
OZGURDBG discover_CFG: 0x664 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04966d imm:0
OZGURIMM Stack uop at pc 0x7f48ba04966d imm:0
OZGURDBGSLICE at IP 7f48ba04966d imm_values:2be
OZGURDBG discover_CFG: 0x7f48ba049930 0x610 0x811
OZGURDBG discover_CFG: 0x930 0x610 0x811
OZGURDBG discover_CFG: 0x672 0x610 0x811
OZGURIMM case RELLBR at pc 0x7f48ba04967c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04967c imm:0
OZGURDBGSLICE at IP 7f48ba04967c imm_values:2ef
OZGURDBG discover_CFG: 0x7f48ba049970 0x610 0x811
OZGURDBG discover_CFG: 0x970 0x610 0x811
OZGURDBG discover_CFG: 0x681 0x610 0x811
main_analysis841
[INFO]Routine::main_analysis(): 'main'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM Stack uop at pc 0x7f48ba049610 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049612 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049614 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049616 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049618 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049619 imm:0
OZGURIMM0 if signed at pc 0x7f48ba04961a imm:8
OZGURIMM0 if signed at pc 0x7f48ba04961e imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049621 imm:0
OZGURDCODE@PC at IP 0x7f48ba049711 disp:8
OZGURIMM0 if not signed at pc 0x7f48ba049715 imm:10
OZGURIMM case RELLBR at pc 0x7f48ba04971c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04971c imm:0
OZGURDBGSLICE at IP 711 disp:8
OZGURDCODE@PC at IP 0x7f48ba049627 disp:2019e2
OZGURDECODE@PC at IP 0x7f48ba04962e scale:4
OZGURDCODE@PC at IP 0x7f48ba04962e disp:0
OZGURIMM case RELLBR at pc 0x7f48ba049639 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049639 imm:0
OZGURDBGSLICE at IP 627 disp:2019e2
OZGURDCODE@PC at IP 0x7f48ba049721 disp:2018e8
OZGURDECODE@PC at IP 0x7f48ba04972b scale:4
OZGURDCODE@PC at IP 0x7f48ba04972b disp:0
OZGURIMM case RELLBR at pc 0x7f48ba049736 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049736 imm:0
OZGURDBGSLICE at IP 721 disp:2018e8
OZGURIMM case RELLBR at pc 0x7f48ba049644 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049644 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049741 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049741 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04964f imm:0
OZGURIMM Stack uop at pc 0x7f48ba04964f imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04974c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04974c imm:0
OZGURIMM0 if not signed at pc 0x7f48ba04965a imm:fff
OZGURIMM case RELLBR at pc 0x7f48ba04965f imm:0
OZGURIMM Stack uop at pc 0x7f48ba04965f imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049757 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049757 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04966d imm:0
OZGURIMM Stack uop at pc 0x7f48ba04966d imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049765 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049765 imm:0
OZGURDCODE@PC at IP 0x7f48ba049672 disp:201997
OZGURIMM case RELLBR at pc 0x7f48ba04967c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04967c imm:0
OZGURDBGSLICE at IP 672 disp:201997
OZGURDCODE@PC at IP 0x7f48ba04976a disp:20189f
OZGURIMM case RELLBR at pc 0x7f48ba049774 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049774 imm:0
OZGURDBGSLICE at IP 76a disp:20189f
OZGURIMM0 if signed at pc 0x7f48ba049779 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba04977c imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049782 imm:0
OZGURDCODE@PC at IP 0x7f48ba049681 disp:201988
OZGURIMM case RELLBR at pc 0x7f48ba04968b imm:0
OZGURIMM Stack uop at pc 0x7f48ba04968b imm:0
OZGURDBGSLICE at IP 681 disp:201988
OZGURIMM0 if signed at pc 0x7f48ba049690 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049693 imm:0
OZGURDCODE@PC at IP 0x7f48ba0497cf disp:20183a
OZGURIMM case RELLBR at pc 0x7f48ba0497d9 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497d9 imm:0
OZGURDBGSLICE at IP 7cf disp:20183a
OZGURIMM case RELLBR at pc 0x7f48ba0497de imm:0
OZGURIMM0 if signed at pc 0x7f48ba049699 imm:8
OZGURIMM case RELLBR at pc 0x7f48ba04969c imm:0
OZGURDCODE@PC at IP 0x7f48ba0497fd disp:20180c
OZGURIMM case RELLBR at pc 0x7f48ba049807 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049807 imm:0
OZGURDBGSLICE at IP 7fd disp:20180c
OZGURIMM case RELLBR at pc 0x7f48ba04980c imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496a2 imm:2
OZGURIMM case RELLBR at pc 0x7f48ba0496a5 imm:0
OZGURDCODE@PC at IP 0x7f48ba0497e3 disp:201826
OZGURIMM case RELLBR at pc 0x7f48ba0497f3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497f3 imm:0
OZGURDBGSLICE at IP 7e3 disp:201826
OZGURIMM case RELLBR at pc 0x7f48ba0497f8 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496ab imm:20
OZGURIMM case RELLBR at pc 0x7f48ba0496ae imm:0
OZGURDCODE@PC at IP 0x7f48ba04979e disp:20186b
OZGURIMM case RELLBR at pc 0x7f48ba0497ab imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497ab imm:0
OZGURDBGSLICE at IP 79e disp:20186b
OZGURIMM case RELLBR at pc 0x7f48ba0497b0 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496b4 imm:40
OZGURIMM case RELLBR at pc 0x7f48ba0496b7 imm:0
OZGURDCODE@PC at IP 0x7f48ba049787 disp:201882
OZGURIMM case RELLBR at pc 0x7f48ba049794 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049794 imm:0
OZGURDBGSLICE at IP 787 disp:201882
OZGURIMM case RELLBR at pc 0x7f48ba049799 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496bd imm:ffffffffffffff80
OZGURIMM case RELLBR at pc 0x7f48ba0496c0 imm:0
OZGURDCODE@PC at IP 0x7f48ba0497b5 disp:201854
OZGURIMM0 if not signed at pc 0x7f48ba0497c2 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0497c5 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497c5 imm:0
OZGURDBGSLICE at IP 7b5 disp:201854
OZGURIMM case RELLBR at pc 0x7f48ba0497ca imm:0
OZGURIMM0 if not signed at pc 0x7f48ba0496c6 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0496c9 imm:0
OZGURDCODE@PC at IP 0x7f48ba0496cb disp:20193e
OZGURIMM case RELLBR at pc 0x7f48ba0496db imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496db imm:0
OZGURDBGSLICE at IP 6cb disp:20193e
OZGURIMM case RELLBR at pc 0x7f48ba0496e3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496e3 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496eb imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496eb imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496f3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496f3 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496fb imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496fb imm:0
OZGURIMM0 if signed at pc 0x7f48ba049700 imm:8
OZGURIMM Stack uop at pc 0x7f48ba049706 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049707 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049708 imm:0
OZGURIMM Stack uop at pc 0x7f48ba04970a imm:0
OZGURIMM Stack uop at pc 0x7f48ba04970c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04970e imm:0
OZGURIMM Stack uop at pc 0x7f48ba049710 imm:0
 This is Rslice 0x556e1d4992c0
build_loops_for_interval routine: main'
OZGURIMM Stack uop at pc 0x7f48ba049610 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049612 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049614 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049616 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049618 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049619 imm:0
OZGURIMM0 if signed at pc 0x7f48ba04961a imm:8
OZGURIMM0 if signed at pc 0x7f48ba04961e imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049621 imm:0
OZGURDCODE@PC at IP 0x7f48ba049711 disp:8
OZGURIMM0 if not signed at pc 0x7f48ba049715 imm:10
OZGURIMM case RELLBR at pc 0x7f48ba04971c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04971c imm:0
OZGURDCODE@PC at IP 0x7f48ba049721 disp:2018e8
OZGURDECODE@PC at IP 0x7f48ba04972b scale:4
OZGURDCODE@PC at IP 0x7f48ba04972b disp:0
OZGURIMM case RELLBR at pc 0x7f48ba049736 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049736 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049741 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049741 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04974c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04974c imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049757 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049757 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049765 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049765 imm:0
OZGURDCODE@PC at IP 0x7f48ba04976a disp:20189f
OZGURIMM case RELLBR at pc 0x7f48ba049774 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049774 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049779 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba04977c imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049782 imm:0
OZGURDCODE@PC at IP 0x7f48ba049627 disp:2019e2
OZGURDECODE@PC at IP 0x7f48ba04962e scale:4
OZGURDCODE@PC at IP 0x7f48ba04962e disp:0
OZGURIMM case RELLBR at pc 0x7f48ba049639 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049639 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049644 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049644 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04964f imm:0
OZGURIMM Stack uop at pc 0x7f48ba04964f imm:0
OZGURIMM0 if not signed at pc 0x7f48ba04965a imm:fff
OZGURIMM case RELLBR at pc 0x7f48ba04965f imm:0
OZGURIMM Stack uop at pc 0x7f48ba04965f imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04966d imm:0
OZGURIMM Stack uop at pc 0x7f48ba04966d imm:0
OZGURDCODE@PC at IP 0x7f48ba049672 disp:201997
OZGURIMM case RELLBR at pc 0x7f48ba04967c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04967c imm:0
OZGURDCODE@PC at IP 0x7f48ba049681 disp:201988
OZGURIMM case RELLBR at pc 0x7f48ba04968b imm:0
OZGURIMM Stack uop at pc 0x7f48ba04968b imm:0
OZGURIMM0 if signed at pc 0x7f48ba049690 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049693 imm:0
OZGURDCODE@PC at IP 0x7f48ba0497cf disp:20183a
OZGURIMM case RELLBR at pc 0x7f48ba0497d9 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497d9 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0497de imm:0
OZGURIMM0 if signed at pc 0x7f48ba049699 imm:8
OZGURIMM case RELLBR at pc 0x7f48ba04969c imm:0
OZGURDCODE@PC at IP 0x7f48ba0497fd disp:20180c
OZGURIMM case RELLBR at pc 0x7f48ba049807 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049807 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04980c imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496a2 imm:2
OZGURIMM case RELLBR at pc 0x7f48ba0496a5 imm:0
OZGURDCODE@PC at IP 0x7f48ba0497e3 disp:201826
OZGURIMM case RELLBR at pc 0x7f48ba0497f3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497f3 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0497f8 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496ab imm:20
OZGURIMM case RELLBR at pc 0x7f48ba0496ae imm:0
OZGURDCODE@PC at IP 0x7f48ba04979e disp:20186b
OZGURIMM case RELLBR at pc 0x7f48ba0497ab imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497ab imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0497b0 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496b4 imm:40
OZGURIMM case RELLBR at pc 0x7f48ba0496b7 imm:0
OZGURDCODE@PC at IP 0x7f48ba049787 disp:201882
OZGURIMM case RELLBR at pc 0x7f48ba049794 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049794 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049799 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496bd imm:ffffffffffffff80
OZGURIMM case RELLBR at pc 0x7f48ba0496c0 imm:0
OZGURDCODE@PC at IP 0x7f48ba0497b5 disp:201854
OZGURIMM0 if not signed at pc 0x7f48ba0497c2 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0497c5 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497c5 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0497ca imm:0
OZGURIMM0 if not signed at pc 0x7f48ba0496c6 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0496c9 imm:0
OZGURDCODE@PC at IP 0x7f48ba0496cb disp:20193e
OZGURIMM case RELLBR at pc 0x7f48ba0496db imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496db imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496e3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496e3 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496eb imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496eb imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496f3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496f3 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496fb imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496fb imm:0
OZGURIMM0 if signed at pc 0x7f48ba049700 imm:8
OZGURIMM Stack uop at pc 0x7f48ba049706 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049707 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049708 imm:0
OZGURIMM Stack uop at pc 0x7f48ba04970a imm:0
OZGURIMM Stack uop at pc 0x7f48ba04970c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04970e imm:0
OZGURIMM Stack uop at pc 0x7f48ba049710 imm:0
[INFO]Routine::constructLoops(): 'main'
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'main'
In SchedDG constructor for routine main, pathId 0x610/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'main'
OZGURIMM Stack uop at pc 0x7f48ba049610 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049612 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049614 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049616 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049618 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049619 imm:0
OZGURIMM0 if signed at pc 0x7f48ba04961a imm:8
OZGURIMM0 if signed at pc 0x7f48ba04961e imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049621 imm:0
OZGURDCODE@PC at IP 0x7f48ba049711 disp:8
OZGURIMM0 if not signed at pc 0x7f48ba049715 imm:10
OZGURIMM case RELLBR at pc 0x7f48ba04971c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04971c imm:0
OZGURDCODE@PC at IP 0x7f48ba049721 disp:2018e8
OZGURDECODE@PC at IP 0x7f48ba04972b scale:4
OZGURDCODE@PC at IP 0x7f48ba04972b disp:0
OZGURIMM case RELLBR at pc 0x7f48ba049736 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049736 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049741 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049741 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04974c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04974c imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049757 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049757 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049765 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049765 imm:0
OZGURDCODE@PC at IP 0x7f48ba04976a disp:20189f
OZGURIMM case RELLBR at pc 0x7f48ba049774 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049774 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049779 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba04977c imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049782 imm:0
OZGURDCODE@PC at IP 0x7f48ba049627 disp:2019e2
OZGURDECODE@PC at IP 0x7f48ba04962e scale:4
OZGURDCODE@PC at IP 0x7f48ba04962e disp:0
OZGURIMM case RELLBR at pc 0x7f48ba049639 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049639 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049644 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049644 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04964f imm:0
OZGURIMM Stack uop at pc 0x7f48ba04964f imm:0
OZGURIMM0 if not signed at pc 0x7f48ba04965a imm:fff
OZGURIMM case RELLBR at pc 0x7f48ba04965f imm:0
OZGURIMM Stack uop at pc 0x7f48ba04965f imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04966d imm:0
OZGURIMM Stack uop at pc 0x7f48ba04966d imm:0
OZGURDCODE@PC at IP 0x7f48ba049672 disp:201997
OZGURIMM case RELLBR at pc 0x7f48ba04967c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04967c imm:0
OZGURDCODE@PC at IP 0x7f48ba049681 disp:201988
OZGURIMM case RELLBR at pc 0x7f48ba04968b imm:0
OZGURIMM Stack uop at pc 0x7f48ba04968b imm:0
OZGURIMM0 if signed at pc 0x7f48ba049690 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049693 imm:0
OZGURDCODE@PC at IP 0x7f48ba0497cf disp:20183a
OZGURIMM case RELLBR at pc 0x7f48ba0497d9 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497d9 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0497de imm:0
OZGURIMM0 if signed at pc 0x7f48ba049699 imm:8
OZGURIMM case RELLBR at pc 0x7f48ba04969c imm:0
OZGURDCODE@PC at IP 0x7f48ba0497fd disp:20180c
OZGURIMM case RELLBR at pc 0x7f48ba049807 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049807 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba04980c imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496a2 imm:2
OZGURIMM case RELLBR at pc 0x7f48ba0496a5 imm:0
OZGURDCODE@PC at IP 0x7f48ba0497e3 disp:201826
OZGURIMM case RELLBR at pc 0x7f48ba0497f3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497f3 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0497f8 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496ab imm:20
OZGURIMM case RELLBR at pc 0x7f48ba0496ae imm:0
OZGURDCODE@PC at IP 0x7f48ba04979e disp:20186b
OZGURIMM case RELLBR at pc 0x7f48ba0497ab imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497ab imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0497b0 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496b4 imm:40
OZGURIMM case RELLBR at pc 0x7f48ba0496b7 imm:0
OZGURDCODE@PC at IP 0x7f48ba049787 disp:201882
OZGURIMM case RELLBR at pc 0x7f48ba049794 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049794 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049799 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0496bd imm:ffffffffffffff80
OZGURIMM case RELLBR at pc 0x7f48ba0496c0 imm:0
OZGURDCODE@PC at IP 0x7f48ba0497b5 disp:201854
OZGURIMM0 if not signed at pc 0x7f48ba0497c2 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0497c5 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0497c5 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0497ca imm:0
OZGURIMM0 if not signed at pc 0x7f48ba0496c6 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0496c9 imm:0
OZGURDCODE@PC at IP 0x7f48ba0496cb disp:20193e
OZGURIMM case RELLBR at pc 0x7f48ba0496db imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496db imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496e3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496e3 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496eb imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496eb imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496f3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496f3 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0496fb imm:0
OZGURIMM Stack uop at pc 0x7f48ba0496fb imm:0
OZGURIMM0 if signed at pc 0x7f48ba049700 imm:8
OZGURIMM Stack uop at pc 0x7f48ba049706 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049707 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049708 imm:0
OZGURIMM Stack uop at pc 0x7f48ba04970a imm:0
OZGURIMM Stack uop at pc 0x7f48ba04970c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04970e imm:0
OZGURIMM Stack uop at pc 0x7f48ba049710 imm:0
Sniper Routine: main StartAddr:610
OZGURDBGX3 #Blocks: 68
	Block[0] 's startAddres: 610 endAddress:  627
		instruction addres:610
		instruction addres:612
		instruction addres:614
		instruction addres:616
		instruction addres:618
		instruction addres:619
		instruction addres:61a
		instruction addres:61e
		instruction addres:621
610-0
612-0
614-0
616-0
618-0
619-0
61a-0
61e-0
621-0

	Block[1] 's startAddres: 711 endAddress:  721
		instruction addres:711
		instruction addres:715
		instruction addres:71a
		instruction addres:71c
711-0
715-0
71a-0
71c-0

	Block[2] 's startAddres: 721 endAddress:  721

	Block[3] 's startAddres: 721 endAddress:  73b
		instruction addres:721
		instruction addres:728
		instruction addres:72b
		instruction addres:733
		instruction addres:736
721-0
728-0
72b-0
733-0
736-0

	Block[4] 's startAddres: 73b endAddress:  73b

	Block[5] 's startAddres: 73b endAddress:  746
		instruction addres:73b
		instruction addres:73e
		instruction addres:741
73b-0
73e-0
741-0

	Block[6] 's startAddres: 746 endAddress:  746

	Block[7] 's startAddres: 746 endAddress:  751
		instruction addres:746
		instruction addres:749
		instruction addres:74c
746-0
749-0
74c-0

	Block[8] 's startAddres: 751 endAddress:  751

	Block[9] 's startAddres: 751 endAddress:  75c
		instruction addres:751
		instruction addres:754
		instruction addres:757
751-0
754-0
757-0

	Block[10] 's startAddres: 75c endAddress:  75c

	Block[11] 's startAddres: 75c endAddress:  76a
		instruction addres:75c
		instruction addres:75f
		instruction addres:762
		instruction addres:765
75c-0
75f-0
762-0
765-0

	Block[12] 's startAddres: 76a endAddress:  76a

	Block[13] 's startAddres: 76a endAddress:  779
		instruction addres:76a
		instruction addres:771
		instruction addres:774
76a-0
771-0
774-0

	Block[14] 's startAddres: 779 endAddress:  779

	Block[15] 's startAddres: 779 endAddress:  782
		instruction addres:779
		instruction addres:77c
779-0
77c-0

	Block[16] 's startAddres: 782 endAddress:  787
		instruction addres:782
782-0

	Block[17] 's startAddres: 627 endAddress:  63e
		instruction addres:627
		instruction addres:62e
		instruction addres:636
		instruction addres:639
627-0
62e-0
636-0
639-0

	Block[18] 's startAddres: 63e endAddress:  63e

	Block[19] 's startAddres: 63e endAddress:  649
		instruction addres:63e
		instruction addres:641
		instruction addres:644
63e-0
641-0
644-0

	Block[20] 's startAddres: 649 endAddress:  649

	Block[21] 's startAddres: 649 endAddress:  654
		instruction addres:649
		instruction addres:64c
		instruction addres:64f
649-0
64c-0
64f-0

	Block[22] 's startAddres: 654 endAddress:  654

	Block[23] 's startAddres: 654 endAddress:  664
		instruction addres:654
		instruction addres:657
		instruction addres:65a
		instruction addres:65f
654-0
657-0
65a-0
65f-0

	Block[24] 's startAddres: 664 endAddress:  664

	Block[25] 's startAddres: 664 endAddress:  672
		instruction addres:664
		instruction addres:667
		instruction addres:66a
		instruction addres:66d
664-0
667-0
66a-0
66d-0

	Block[26] 's startAddres: 672 endAddress:  672

	Block[27] 's startAddres: 672 endAddress:  681
		instruction addres:672
		instruction addres:679
		instruction addres:67c
672-0
679-0
67c-0

	Block[28] 's startAddres: 681 endAddress:  681

	Block[29] 's startAddres: 681 endAddress:  690
		instruction addres:681
		instruction addres:688
		instruction addres:68b
681-0
688-0
68b-0

	Block[30] 's startAddres: 690 endAddress:  690

	Block[31] 's startAddres: 690 endAddress:  699
		instruction addres:690
		instruction addres:693
690-0
693-0

	Block[32] 's startAddres: 7cf endAddress:  7de
		instruction addres:7cf
		instruction addres:7d6
		instruction addres:7d9
7cf-0
7d6-0
7d9-0

	Block[33] 's startAddres: 7de endAddress:  7de

	Block[34] 's startAddres: 7de endAddress:  7e3
		instruction addres:7de
7de-0

	Block[35] 's startAddres: 699 endAddress:  6a2
		instruction addres:699
		instruction addres:69c
699-0
69c-0

	Block[36] 's startAddres: 7fd endAddress:  80c
		instruction addres:7fd
		instruction addres:804
		instruction addres:807
7fd-0
804-0
807-0

	Block[37] 's startAddres: 80c endAddress:  80c

	Block[38] 's startAddres: 80c endAddress:  811
		instruction addres:80c
80c-0

	Block[39] 's startAddres: 6a2 endAddress:  6ab
		instruction addres:6a2
		instruction addres:6a5
6a2-0
6a5-0

	Block[40] 's startAddres: 7e3 endAddress:  7f8
		instruction addres:7e3
		instruction addres:7ea
		instruction addres:7ed
		instruction addres:7f0
		instruction addres:7f3
7e3-0
7ea-0
7ed-0
7f0-0
7f3-0

	Block[41] 's startAddres: 7f8 endAddress:  7f8

	Block[42] 's startAddres: 7f8 endAddress:  7fd
		instruction addres:7f8
7f8-0

	Block[43] 's startAddres: 6ab endAddress:  6b4
		instruction addres:6ab
		instruction addres:6ae
6ab-0
6ae-0

	Block[44] 's startAddres: 79e endAddress:  7b0
		instruction addres:79e
		instruction addres:7a5
		instruction addres:7a8
		instruction addres:7ab
79e-0
7a5-0
7a8-0
7ab-0

	Block[45] 's startAddres: 7b0 endAddress:  7b0

	Block[46] 's startAddres: 7b0 endAddress:  7b5
		instruction addres:7b0
7b0-0

	Block[47] 's startAddres: 6b4 endAddress:  6bd
		instruction addres:6b4
		instruction addres:6b7
6b4-0
6b7-0

	Block[48] 's startAddres: 787 endAddress:  799
		instruction addres:787
		instruction addres:78e
		instruction addres:791
		instruction addres:794
787-0
78e-0
791-0
794-0

	Block[49] 's startAddres: 799 endAddress:  799

	Block[50] 's startAddres: 799 endAddress:  79e
		instruction addres:799
799-0

	Block[51] 's startAddres: 6bd endAddress:  6c6
		instruction addres:6bd
		instruction addres:6c0
6bd-0
6c0-0

	Block[52] 's startAddres: 7b5 endAddress:  7ca
		instruction addres:7b5
		instruction addres:7bc
		instruction addres:7bf
		instruction addres:7c2
		instruction addres:7c5
7b5-0
7bc-0
7bf-0
7c2-0
7c5-0

	Block[53] 's startAddres: 7ca endAddress:  7ca

	Block[54] 's startAddres: 7ca endAddress:  7cf
		instruction addres:7ca
7ca-0

	Block[55] 's startAddres: 6c6 endAddress:  6cb
		instruction addres:6c6
		instruction addres:6c9
6c6-0
6c9-0

	Block[56] 's startAddres: 6cb endAddress:  6e0
		instruction addres:6cb
		instruction addres:6d2
		instruction addres:6d5
		instruction addres:6d8
		instruction addres:6db
6cb-0
6d2-0
6d5-0
6d8-0
6db-0

	Block[57] 's startAddres: 6e0 endAddress:  6e0

	Block[58] 's startAddres: 6e0 endAddress:  6e8
		instruction addres:6e0
		instruction addres:6e3
6e0-0
6e3-0

	Block[59] 's startAddres: 6e8 endAddress:  6e8

	Block[60] 's startAddres: 6e8 endAddress:  6f0
		instruction addres:6e8
		instruction addres:6eb
6e8-0
6eb-0

	Block[61] 's startAddres: 6f0 endAddress:  6f0

	Block[62] 's startAddres: 6f0 endAddress:  6f8
		instruction addres:6f0
		instruction addres:6f3
6f0-0
6f3-0

	Block[63] 's startAddres: 6f8 endAddress:  6f8

	Block[64] 's startAddres: 6f8 endAddress:  700
		instruction addres:6f8
		instruction addres:6fb
6f8-0
6fb-0

	Block[65] 's startAddres: 700 endAddress:  700

	Block[66] 's startAddres: 700 endAddress:  711
		instruction addres:700
		instruction addres:704
		instruction addres:706
		instruction addres:707
		instruction addres:708
		instruction addres:70a
		instruction addres:70c
		instruction addres:70e
		instruction addres:710
700-0
704-0
706-0
707-0
708-0
70a-0
70c-0
70e-0
710-0

	Block[67] 's startAddres: 0 endAddress:  0
Node Ox706 is Frame
Node Ox707 is Frame
Node Ox708 is Frame
Node Ox70a is Frame
Node Ox70c is Frame
Node Ox70e is Frame
Node Ox710 is Frame
626
	610-0
	612-0
	614-0
	616-0
	618-0
	619-0
	61a-0
	61e-0
	621-0
63d
	627-0
	62e-0
	636-0
	639-0
648
	63e-0
	641-0
	644-0
653
	649-0
	64c-0
	64f-0
663
	654-0
	657-0
	65a-0
	65f-0
671
	664-0
	667-0
	66a-0
	66d-0
680
	672-0
	679-0
	67c-0
68f
	681-0
	688-0
	68b-0
698
	690-0
	693-0
6a1
	699-0
	69c-0
6aa
	6a2-0
	6a5-0
6b3
	6ab-0
	6ae-0
6bc
	6b4-0
	6b7-0
6c5
	6bd-0
	6c0-0
6ca
	6c6-0
	6c9-0
6df
	6cb-0
	6d2-0
	6d5-0
	6d8-0
	6db-0
6e7
	6e0-0
	6e3-0
6ef
	6e8-0
	6eb-0
6f7
	6f0-0
	6f3-0
6ff
	6f8-0
	6fb-0
710
	700-0
	704-0
	706-1
	707-1
	708-1
	70a-1
	70c-1
	70e-1
	710-1
720
	711-0
	715-0
	71a-0
	71c-0
73a
	721-0
	728-0
	72b-0
	733-0
	736-0
745
	73b-0
	73e-0
	741-0
750
	746-0
	749-0
	74c-0
75b
	751-0
	754-0
	757-0
769
	75c-0
	75f-0
	762-0
	765-0
778
	76a-0
	771-0
	774-0
781
	779-0
	77c-0
786
	782-0
798
	787-0
	78e-0
	791-0
	794-0
79d
	799-0
7af
	79e-0
	7a5-0
	7a8-0
	7ab-0
7b4
	7b0-0
7c9
	7b5-0
	7bc-0
	7bf-0
	7c2-0
	7c5-0
7ce
	7ca-0
7dd
	7cf-0
	7d6-0
	7d9-0
7e2
	7de-0
7f7
	7e3-0
	7ea-0
	7ed-0
	7f0-0
	7f3-0
7fc
	7f8-0
80b
	7fd-0
	804-0
	807-0
810
	80c-0
ffffffffffffffff
Address	type	class
Node 7 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=614, type=20
614: Add r78[0:63] --> r78[0:63] 
 <-- (5)
 --> (8 [{ 5 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x614 try:0
Node 6 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=612, type=3
612: Store r88[0:63] a78[0:63] --> 
 <-- (5, 212)
 --> (17 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 212 [{ 337 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba049612 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x612 try:0
Node 5 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=612, type=20
612: Add r78[0:63] --> r78[0:63] 
 <-- (3)
 --> (6 [{ 3 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x612 try:0
Node 4 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=610, type=3
610: Store r89[0:63] a78[0:63] --> 
 <-- (3, 214)
 --> (17 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 214 [{ 340 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049610 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x610 try:0
Node 3 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=610, type=20
610: Add r78[0:63] --> r78[0:63] 
 <-- (218, 217, 1, 200)
 --> (4 [{ 1 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x610 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- (218)
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
 --> (3 [{ 367 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 16 [{ 368 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 369 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 370 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 371 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=614, type=3
614: Store r87[0:63] a78[0:63] --> 
 <-- (7, 210)
 --> (17 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 210 [{ 334 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -24 den: 1 HAHAHA Before num: -24 den: 1 After num: -24 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x18 +
consten Term of Formula is: -24
Decoded Instruction PC:7f48ba049614 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x614 try:0
Node 9 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=616, type=20
616: Add r78[0:63] --> r78[0:63] 
 <-- (7)
 --> (10 [{ 7 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x616 try:0
Node 10 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=616, type=3
616: Store r86[0:63] a78[0:63] --> 
 <-- (9, 208)
 --> (17 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 208 [{ 331 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -32 den: 1 HAHAHA Before num: -32 den: 1 After num: -32 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x20 +
consten Term of Formula is: -32
Decoded Instruction PC:7f48ba049616 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x616 try:0
Node 11 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=618, type=20
618: Add r78[0:63] --> r78[0:63] 
 <-- (9)
 --> (12 [{ 9 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x618 try:0
Node 12 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=618, type=3
618: Store r79[0:63] a78[0:63] --> 
 <-- (11, 206)
 --> (17 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 206 [{ 328 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -40 den: 1 HAHAHA Before num: -40 den: 1 After num: -40 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x28 +
consten Term of Formula is: -40
Decoded Instruction PC:7f48ba049618 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x618 try:0
Node 13 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=619, type=20
619: Add r78[0:63] --> r78[0:63] 
 <-- (11)
 --> (14 [{ 11 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 12 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x619 try:0
Node 14 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=619, type=3
619: Store r77[0:63] a78[0:63] --> 
 <-- (13, 204)
 --> (17 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 204 [{ 325 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -48 den: 1 HAHAHA Before num: -48 den: 1 After num: -48 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x30 +
consten Term of Formula is: -48
Decoded Instruction PC:7f48ba049619 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x619 try:0
Node 15 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=61a, type=23
61a: Sub r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (13)
 --> (17 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 21 [{ 21 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x61a try:0
Node 16 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=61e, type=19
61e: Cmp r81[0:31] --> r41[0:31] 
 <-- (218, 1, 200)
 --> (17 [{ 13 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x61e try:0
Node 17 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=621, type=8
621: CondBranch r41[0:63] --> 
 <-- (16, 6, 4, 8, 10, 12, 14, 15)
 --> (21 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 23 [{ 28 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x621 try:0
Node 18 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=711, type=2
711: Load a80[0:63] --> r81[0:63] 
 <-- (218, 1, 200)
 --> (23 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 8 den: 1 HAHAHA Before num: 8 den: 1 After num: 8 den: 1
ref->base:   Reg_RSI/0{MemOp}[0,63](0x610,0) + 0x8 +
consten Term of Formula is: 8
Decoded Instruction PC:7f48ba049711 Reloc:7f48ba049000 len:4 disp:8 scale:1
OZGURDBG::instrumenting node:0x711 try:0
711	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d544e90
Node 19 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=715, type=13
715: Copy --> r76[0:31] 
 <-- (218, 1, 200)
 --> (23 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x715 try:0
Node 20 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 20, pc=71a, type=28
71a: Xor r80[0:31] r80[0:31] --> r80[0:31] r41[0:31] 
 <-- (218, 1, 200)
 --> (23 [{ 26 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x71a try:0
Node 21 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 21, pc=71c, type=20
71c: Add r78[0:63] --> r78[0:63] 
 <-- (15, 17)
 --> (22 [{ 23 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x71c try:0
Node 22 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 22, pc=71c, type=3
71c: Store a78[0:63] --> 
 <-- (21)
 --> (23 [{ 27 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba04971c Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x71c try:0
Node 23 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=71c, type=9
71c: Jump --> 
 <-- (18, 19, 20, 22, 17, 218)
 --> (24 [{ 29 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 25 [{ 30 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 26 [{ 31 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 31 [{ 36 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x71c try:0
Node 24 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 24, pc=71c, type=20
71c: Add r78[0:63] --> r78[0:63] 
 <-- (23)
 --> (29 [{ 34 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x71c try:0
Node 25 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 25, pc=721, type=2
721: Load --> r89[0:63] 
 <-- (23)
 --> (27 [{ 32 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba049721 Reloc:7f48ba049000 len:7 disp:2018e8 scale:1
OZGURDBG::instrumenting node:0x721 try:0
721	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 26 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 26, pc=728, type=13
728: Copy r74[0:63] --> r77[0:63] 
 <-- (23)
 --> (31 [{ 37 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x728 try:0
Node 27 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 27, pc=72b, type=21
72b: LEA l89[0:63] --> r86[0:63] 
 <-- (25)
 --> (28 [{ 33 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x72b try:0
Node 28 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 28, pc=733, type=13
733: Copy r86[0:63] --> r81[0:63] 
 <-- (27)
 --> (31 [{ 38 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x733 try:0
Node 29 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 29, pc=736, type=20
736: Add r78[0:63] --> r78[0:63] 
 <-- (24)
 --> (30 [{ 35 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x736 try:0
Node 30 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 30, pc=736, type=3
736: Store a78[0:63] --> 
 <-- (29)
 --> (31 [{ 39 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049736 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x736 try:0
Node 31 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 31, pc=736, type=9
736: Jump --> 
 <-- (23, 26, 28, 30)
 --> (32 [{ 40 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 33 [{ 41 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 34 [{ 42 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 37 [{ 45 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x736 try:0
Node 32 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 32, pc=736, type=20
736: Add r78[0:63] --> r78[0:63] 
 <-- (31)
 --> (35 [{ 43 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x736 try:0
Node 33 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 33, pc=73b, type=13
73b: Copy r86[0:63] --> r81[0:63] 
 <-- (31)
 --> (37 [{ 46 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x73b try:0
Node 34 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 34, pc=73e, type=13
73e: Copy r74[0:63] --> r79[0:63] 
 <-- (31)
 --> (37 [{ 47 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x73e try:0
Node 35 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 35, pc=741, type=20
741: Add r78[0:63] --> r78[0:63] 
 <-- (32)
 --> (36 [{ 44 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x741 try:0
Node 36 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 36, pc=741, type=3
741: Store a78[0:63] --> 
 <-- (35)
 --> (37 [{ 48 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049741 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x741 try:0
Node 37 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 37, pc=741, type=9
741: Jump --> 
 <-- (31, 33, 34, 36)
 --> (38 [{ 49 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 39 [{ 50 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 40 [{ 51 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 43 [{ 54 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x741 try:0
Node 38 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 38, pc=741, type=20
741: Add r78[0:63] --> r78[0:63] 
 <-- (37)
 --> (41 [{ 52 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x741 try:0
Node 39 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 39, pc=746, type=13
746: Copy r86[0:63] --> r81[0:63] 
 <-- (37)
 --> (43 [{ 55 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x746 try:0
Node 40 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 40, pc=749, type=13
749: Copy r74[0:63] --> r88[0:63] 
 <-- (37)
 --> (43 [{ 56 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x749 try:0
Node 41 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 41, pc=74c, type=20
74c: Add r78[0:63] --> r78[0:63] 
 <-- (38)
 --> (42 [{ 53 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x74c try:0
Node 42 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 42, pc=74c, type=3
74c: Store a78[0:63] --> 
 <-- (41)
 --> (43 [{ 57 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba04974c Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x74c try:0
Node 43 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 43, pc=74c, type=9
74c: Jump --> 
 <-- (37, 39, 40, 42)
 --> (44 [{ 58 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 45 [{ 59 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 46 [{ 60 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 49 [{ 63 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x74c try:0
Node 44 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 44, pc=74c, type=20
74c: Add r78[0:63] --> r78[0:63] 
 <-- (43)
 --> (47 [{ 61 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x74c try:0
Node 45 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 45, pc=751, type=13
751: Copy r86[0:63] --> r81[0:63] 
 <-- (43)
 --> (49 [{ 64 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x751 try:0
Node 46 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 46, pc=754, type=13
754: Copy r74[0:63] --> r87[0:63] 
 <-- (43)
 --> (49 [{ 65 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x754 try:0
Node 47 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 47, pc=757, type=20
757: Add r78[0:63] --> r78[0:63] 
 <-- (44)
 --> (48 [{ 62 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x757 try:0
Node 48 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 48, pc=757, type=3
757: Store a78[0:63] --> 
 <-- (47)
 --> (49 [{ 66 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049757 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x757 try:0
Node 49 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 49, pc=757, type=9
757: Jump --> 
 <-- (43, 45, 46, 48)
 --> (50 [{ 67 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 51 [{ 68 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 52 [{ 69 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 53 [{ 70 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 56 [{ 73 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x757 try:0
Node 50 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 50, pc=757, type=20
757: Add r78[0:63] --> r78[0:63] 
 <-- (49)
 --> (54 [{ 71 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x757 try:0
Node 51 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 51, pc=75c, type=13
75c: Copy r89[0:63] --> r80[0:63] 
 <-- (49)
 --> (56 [{ 74 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x75c try:0
Node 52 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 52, pc=75f, type=13
75f: Copy r87[0:63] --> r81[0:63] 
 <-- (49)
 --> (56 [{ 75 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x75f try:0
Node 53 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 53, pc=762, type=13
762: Copy r74[0:63] --> r86[0:63] 
 <-- (49)
 --> (56 [{ 76 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x762 try:0
Node 54 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 54, pc=765, type=20
765: Add r78[0:63] --> r78[0:63] 
 <-- (50)
 --> (55 [{ 72 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x765 try:0
Node 55 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 55, pc=765, type=3
765: Store a78[0:63] --> 
 <-- (54)
 --> (56 [{ 77 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049765 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x765 try:0
Node 56 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 56, pc=765, type=9
765: Jump --> 
 <-- (49, 51, 52, 53, 55)
 --> (57 [{ 78 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 58 [{ 79 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 59 [{ 80 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 62 [{ 83 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x765 try:0
Node 57 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 57, pc=765, type=20
765: Add r78[0:63] --> r78[0:63] 
 <-- (56)
 --> (60 [{ 81 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x765 try:0
Node 58 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 58, pc=76a, type=2
76a: Load --> r80[0:63] 
 <-- (56)
 --> (62 [{ 84 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba04976a Reloc:7f48ba049000 len:7 disp:20189f scale:1
OZGURDBG::instrumenting node:0x76a try:0
76a	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 59 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 59, pc=771, type=13
771: Copy r86[0:63] --> r81[0:63] 
 <-- (56)
 --> (62 [{ 85 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x771 try:0
Node 60 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 60, pc=774, type=20
774: Add r78[0:63] --> r78[0:63] 
 <-- (57)
 --> (61 [{ 82 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x774 try:0
Node 61 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 61, pc=774, type=3
774: Store a78[0:63] --> 
 <-- (60)
 --> (62 [{ 86 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049774 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x774 try:0
Node 62 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 62, pc=774, type=9
774: Jump --> 
 <-- (56, 58, 59, 61)
 --> (63 [{ 87 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 64 [{ 88 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 66 [{ 91 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 67 [{ 92 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 70 [{ 97 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 72 [{ 99 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x774 try:0
Node 63 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 63, pc=774, type=20
774: Add r78[0:63] --> r78[0:63] 
 <-- (62)
 --> (65 [{ 90 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 70 [{ 95 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x774 try:0
Node 64 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 64, pc=779, type=29
779: LogicalOp r77[0:7] --> r41[0:31] 
 <-- (62)
 --> (65 [{ 89 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x779 try:0
Node 65 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 65, pc=77c, type=8
77c: CondBranch r41[0:63] --> 
 <-- (64, 63)
 --> (72 [{ 102 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x77c try:0
Node 66 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 66, pc=782, type=7
782: UncondBranch --> 
 <-- (62)
 --> (70 [{ 96 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 72 [{ 103 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x782 try:0
Node 67 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 67, pc=627, type=2
627: Load --> r89[0:63] 
 <-- (62)
 --> (68 [{ 93 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba049627 Reloc:7f48ba049000 len:7 disp:2019e2 scale:1
OZGURDBG::instrumenting node:0x627 try:0
627	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 68 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 68, pc=62e, type=21
62e: LEA l89[0:63] --> r77[0:63] 
 <-- (67)
 --> (69 [{ 94 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x62e try:0
Node 69 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 69, pc=636, type=13
636: Copy r77[0:63] --> r81[0:63] 
 <-- (68)
 --> (72 [{ 100 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x636 try:0
Node 70 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 70, pc=639, type=20
639: Add r78[0:63] --> r78[0:63] 
 <-- (63, 66, 62)
 --> (71 [{ 98 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x639 try:0
Node 71 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 71, pc=639, type=3
639: Store a78[0:63] --> 
 <-- (70)
 --> (72 [{ 101 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049639 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x639 try:0
Node 72 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 72, pc=639, type=9
639: Jump --> 
 <-- (62, 69, 71, 65, 66)
 --> (73 [{ 104 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 74 [{ 105 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 75 [{ 106 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 78 [{ 109 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x639 try:0
Node 73 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 73, pc=639, type=20
639: Add r78[0:63] --> r78[0:63] 
 <-- (72)
 --> (76 [{ 107 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x639 try:0
Node 74 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 74, pc=63e, type=13
63e: Copy r77[0:63] --> r81[0:63] 
 <-- (72)
 --> (78 [{ 110 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x63e try:0
Node 75 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 75, pc=641, type=13
641: Copy r74[0:63] --> r79[0:63] 
 <-- (72)
 --> (78 [{ 111 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x641 try:0
Node 76 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 76, pc=644, type=20
644: Add r78[0:63] --> r78[0:63] 
 <-- (73)
 --> (77 [{ 108 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x644 try:0
Node 77 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 77, pc=644, type=3
644: Store a78[0:63] --> 
 <-- (76)
 --> (78 [{ 112 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049644 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x644 try:0
Node 78 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 78, pc=644, type=9
644: Jump --> 
 <-- (72, 74, 75, 77)
 --> (79 [{ 113 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 80 [{ 114 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 81 [{ 115 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 84 [{ 118 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x644 try:0
Node 79 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 79, pc=644, type=20
644: Add r78[0:63] --> r78[0:63] 
 <-- (78)
 --> (82 [{ 116 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x644 try:0
Node 80 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 80, pc=649, type=13
649: Copy r77[0:63] --> r81[0:63] 
 <-- (78)
 --> (84 [{ 119 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x649 try:0
Node 81 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 81, pc=64c, type=13
64c: Copy r74[0:63] --> r88[0:63] 
 <-- (78)
 --> (84 [{ 120 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x64c try:0
Node 82 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 82, pc=64f, type=20
64f: Add r78[0:63] --> r78[0:63] 
 <-- (79)
 --> (83 [{ 117 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x64f try:0
Node 83 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 83, pc=64f, type=3
64f: Store a78[0:63] --> 
 <-- (82)
 --> (84 [{ 121 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba04964f Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x64f try:0
Node 84 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 84, pc=64f, type=9
64f: Jump --> 
 <-- (78, 80, 81, 83)
 --> (85 [{ 122 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 86 [{ 123 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 87 [{ 124 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 88 [{ 125 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 91 [{ 128 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x64f try:0
Node 85 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 85, pc=64f, type=20
64f: Add r78[0:63] --> r78[0:63] 
 <-- (84)
 --> (89 [{ 126 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x64f try:0
Node 86 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 86, pc=654, type=13
654: Copy r77[0:63] --> r81[0:63] 
 <-- (84)
 --> (91 [{ 129 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x654 try:0
Node 87 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 87, pc=657, type=13
657: Copy r74[0:63] --> r87[0:63] 
 <-- (84)
 --> (91 [{ 130 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x657 try:0
Node 88 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 88, pc=65a, type=13
65a: Copy --> r77[0:31] 
 <-- (84)
 --> (91 [{ 131 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x65a try:0
Node 89 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 89, pc=65f, type=20
65f: Add r78[0:63] --> r78[0:63] 
 <-- (85)
 --> (90 [{ 127 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x65f try:0
Node 90 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 90, pc=65f, type=3
65f: Store a78[0:63] --> 
 <-- (89)
 --> (91 [{ 132 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba04965f Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x65f try:0
Node 91 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 91, pc=65f, type=9
65f: Jump --> 
 <-- (84, 86, 87, 88, 90)
 --> (92 [{ 133 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 93 [{ 134 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 94 [{ 135 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 95 [{ 136 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 98 [{ 139 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x65f try:0
Node 92 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 92, pc=65f, type=20
65f: Add r78[0:63] --> r78[0:63] 
 <-- (91)
 --> (96 [{ 137 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x65f try:0
Node 93 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 93, pc=664, type=13
664: Copy r89[0:63] --> r80[0:63] 
 <-- (91)
 --> (98 [{ 140 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x664 try:0
Node 94 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 94, pc=667, type=13
667: Copy r87[0:63] --> r81[0:63] 
 <-- (91)
 --> (98 [{ 141 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x667 try:0
Node 95 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 95, pc=66a, type=13
66a: Copy r74[0:63] --> r86[0:63] 
 <-- (91)
 --> (98 [{ 142 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x66a try:0
Node 96 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 96, pc=66d, type=20
66d: Add r78[0:63] --> r78[0:63] 
 <-- (92)
 --> (97 [{ 138 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x66d try:0
Node 97 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 97, pc=66d, type=3
66d: Store a78[0:63] --> 
 <-- (96)
 --> (98 [{ 143 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba04966d Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x66d try:0
Node 98 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 98, pc=66d, type=9
66d: Jump --> 
 <-- (91, 93, 94, 95, 97)
 --> (99 [{ 144 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 100 [{ 145 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 146 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 104 [{ 149 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x66d try:0
Node 99 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 99, pc=66d, type=20
66d: Add r78[0:63] --> r78[0:63] 
 <-- (98)
 --> (102 [{ 147 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x66d try:0
Node 100 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 100, pc=672, type=2
672: Load --> r80[0:63] 
 <-- (98)
 --> (104 [{ 150 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba049672 Reloc:7f48ba049000 len:7 disp:201997 scale:1
OZGURDBG::instrumenting node:0x672 try:0
672	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 101 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 101, pc=679, type=13
679: Copy r86[0:63] --> r81[0:63] 
 <-- (98)
 --> (104 [{ 151 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x679 try:0
Node 102 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 102, pc=67c, type=20
67c: Add r78[0:63] --> r78[0:63] 
 <-- (99)
 --> (103 [{ 148 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x67c try:0
Node 103 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 103, pc=67c, type=3
67c: Store a78[0:63] --> 
 <-- (102)
 --> (104 [{ 152 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba04967c Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x67c try:0
Node 104 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 104, pc=67c, type=9
67c: Jump --> 
 <-- (98, 100, 101, 103)
 --> (105 [{ 153 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 106 [{ 154 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 107 [{ 155 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 110 [{ 158 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x67c try:0
Node 105 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 105, pc=67c, type=20
67c: Add r78[0:63] --> r78[0:63] 
 <-- (104)
 --> (108 [{ 156 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x67c try:0
Node 106 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 106, pc=681, type=2
681: Load --> r80[0:63] 
 <-- (104)
 --> (110 [{ 159 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba049681 Reloc:7f48ba049000 len:7 disp:201988 scale:1
OZGURDBG::instrumenting node:0x681 try:0
681	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 107 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 107, pc=688, type=13
688: Copy r79[0:63] --> r81[0:63] 
 <-- (104)
 --> (110 [{ 160 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x688 try:0
Node 108 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 108, pc=68b, type=20
68b: Add r78[0:63] --> r78[0:63] 
 <-- (105)
 --> (109 [{ 157 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x68b try:0
Node 109 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 109, pc=68b, type=3
68b: Store a78[0:63] --> 
 <-- (108)
 --> (110 [{ 161 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba04968b Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x68b try:0
Node 110 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 110, pc=68b, type=9
68b: Jump --> 
 <-- (104, 106, 107, 109)
 --> (111 [{ 162 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 112 [{ 163 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 114 [{ 166 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 115 [{ 167 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 116 [{ 170 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 118 [{ 172 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x68b try:0
Node 111 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 111, pc=68b, type=20
68b: Add r78[0:63] --> r78[0:63] 
 <-- (110)
 --> (113 [{ 165 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 116 [{ 168 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x68b try:0
Node 112 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 112, pc=690, type=29
690: LogicalOp r77[0:7] --> r41[0:31] 
 <-- (110)
 --> (113 [{ 164 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x690 try:0
Node 113 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 113, pc=693, type=8
693: CondBranch r41[0:63] --> 
 <-- (112, 111)
 --> (116 [{ 169 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 118 [{ 176 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x693 try:0
Node 114 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 114, pc=7cf, type=2
7cf: Load --> r80[0:63] 
 <-- (110)
 --> (118 [{ 173 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba0497cf Reloc:7f48ba049000 len:7 disp:20183a scale:1
OZGURDBG::instrumenting node:0x7cf try:0
7cf	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 115 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 115, pc=7d6, type=13
7d6: Copy r79[0:63] --> r81[0:63] 
 <-- (110)
 --> (118 [{ 174 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7d6 try:0
Node 116 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 116, pc=7d9, type=20
7d9: Add r78[0:63] --> r78[0:63] 
 <-- (111, 113, 110)
 --> (117 [{ 171 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7d9 try:0
Node 117 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 117, pc=7d9, type=3
7d9: Store a78[0:63] --> 
 <-- (116)
 --> (118 [{ 175 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba0497d9 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x7d9 try:0
Node 118 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 118, pc=7d9, type=9
7d9: Jump --> 
 <-- (110, 114, 115, 117, 113)
 --> (119 [{ 177 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 120 [{ 178 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 121 [{ 180 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 123 [{ 182 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 124 [{ 183 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 125 [{ 186 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 127 [{ 188 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7d9 try:0
Node 119 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 119, pc=7d9, type=20
7d9: Add r78[0:63] --> r78[0:63] 
 <-- (118)
 --> (120 [{ 179 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 125 [{ 184 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7d9 try:0
Node 120 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 120, pc=7de, type=7
7de: UncondBranch --> 
 <-- (118, 119)
 --> (127 [{ 192 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7de try:0
Node 121 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 121, pc=699, type=29
699: LogicalOp r77[0:7] --> r41[0:31] 
 <-- (118)
 --> (122 [{ 181 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x699 try:0
Node 122 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 122, pc=69c, type=8
69c: CondBranch r41[0:63] --> 
 <-- (121)
 --> (125 [{ 185 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 127 [{ 193 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x69c try:0
Node 123 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 123, pc=7fd, type=2
7fd: Load --> r80[0:63] 
 <-- (118)
 --> (127 [{ 189 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba0497fd Reloc:7f48ba049000 len:7 disp:20180c scale:1
OZGURDBG::instrumenting node:0x7fd try:0
7fd	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 124 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 124, pc=804, type=13
804: Copy r79[0:63] --> r81[0:63] 
 <-- (118)
 --> (127 [{ 190 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x804 try:0
Node 125 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 125, pc=807, type=20
807: Add r78[0:63] --> r78[0:63] 
 <-- (119, 122, 118)
 --> (126 [{ 187 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x807 try:0
Node 126 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 126, pc=807, type=3
807: Store a78[0:63] --> 
 <-- (125)
 --> (127 [{ 191 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049807 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x807 try:0
Node 127 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 127, pc=807, type=9
807: Jump --> 
 <-- (118, 123, 124, 126, 120, 122)
 --> (128 [{ 194 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 129 [{ 195 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 130 [{ 197 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 132 [{ 199 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 133 [{ 200 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 134 [{ 201 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 135 [{ 202 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 136 [{ 205 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 138 [{ 207 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x807 try:0
Node 128 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 128, pc=807, type=20
807: Add r78[0:63] --> r78[0:63] 
 <-- (127)
 --> (129 [{ 196 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 136 [{ 203 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x807 try:0
Node 129 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 129, pc=80c, type=7
80c: UncondBranch --> 
 <-- (127, 128)
 --> (138 [{ 213 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x80c try:0
Node 130 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 130, pc=6a2, type=29
6a2: LogicalOp r77[0:7] --> r41[0:31] 
 <-- (127)
 --> (131 [{ 198 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6a2 try:0
Node 131 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 131, pc=6a5, type=8
6a5: CondBranch r41[0:63] --> 
 <-- (130)
 --> (136 [{ 204 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 138 [{ 214 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6a5 try:0
Node 132 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 132, pc=7e3, type=2
7e3: Load --> r75[0:63] 
 <-- (127)
 --> (138 [{ 208 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba0497e3 Reloc:7f48ba049000 len:7 disp:201826 scale:1
OZGURDBG::instrumenting node:0x7e3 try:0
7e3	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 133 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 133, pc=7ea, type=13
7ea: Copy r86[0:63] --> r76[0:63] 
 <-- (127)
 --> (138 [{ 209 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7ea try:0
Node 134 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 134, pc=7ed, type=13
7ed: Copy r88[0:63] --> r80[0:63] 
 <-- (127)
 --> (138 [{ 210 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7ed try:0
Node 135 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 135, pc=7f0, type=13
7f0: Copy r79[0:63] --> r81[0:63] 
 <-- (127)
 --> (138 [{ 211 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7f0 try:0
Node 136 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 136, pc=7f3, type=20
7f3: Add r78[0:63] --> r78[0:63] 
 <-- (128, 131, 127)
 --> (137 [{ 206 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7f3 try:0
Node 137 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 137, pc=7f3, type=3
7f3: Store a78[0:63] --> 
 <-- (136)
 --> (138 [{ 212 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba0497f3 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x7f3 try:0
Node 138 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 138, pc=7f3, type=9
7f3: Jump --> 
 <-- (127, 132, 133, 134, 135, 137, 129, 131)
 --> (139 [{ 215 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 140 [{ 216 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 141 [{ 218 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 143 [{ 220 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 144 [{ 221 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 145 [{ 222 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 146 [{ 225 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 148 [{ 227 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7f3 try:0
Node 139 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 139, pc=7f3, type=20
7f3: Add r78[0:63] --> r78[0:63] 
 <-- (138)
 --> (140 [{ 217 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 146 [{ 223 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7f3 try:0
Node 140 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 140, pc=7f8, type=7
7f8: UncondBranch --> 
 <-- (138, 139)
 --> (148 [{ 232 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7f8 try:0
Node 141 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 141, pc=6ab, type=29
6ab: LogicalOp r77[0:7] --> r41[0:31] 
 <-- (138)
 --> (142 [{ 219 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6ab try:0
Node 142 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 142, pc=6ae, type=8
6ae: CondBranch r41[0:63] --> 
 <-- (141)
 --> (146 [{ 224 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 148 [{ 233 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6ae try:0
Node 143 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 143, pc=79e, type=2
79e: Load --> r76[0:63] 
 <-- (138)
 --> (148 [{ 228 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba04979e Reloc:7f48ba049000 len:7 disp:20186b scale:1
OZGURDBG::instrumenting node:0x79e try:0
79e	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 144 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 144, pc=7a5, type=13
7a5: Copy r87[0:63] --> r80[0:63] 
 <-- (138)
 --> (148 [{ 229 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7a5 try:0
Node 145 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 145, pc=7a8, type=13
7a8: Copy r79[0:63] --> r81[0:63] 
 <-- (138)
 --> (148 [{ 230 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7a8 try:0
Node 146 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 146, pc=7ab, type=20
7ab: Add r78[0:63] --> r78[0:63] 
 <-- (139, 142, 138)
 --> (147 [{ 226 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7ab try:0
Node 147 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 147, pc=7ab, type=3
7ab: Store a78[0:63] --> 
 <-- (146)
 --> (148 [{ 231 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba0497ab Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x7ab try:0
Node 148 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 148, pc=7ab, type=9
7ab: Jump --> 
 <-- (138, 143, 144, 145, 147, 140, 142)
 --> (149 [{ 234 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 150 [{ 235 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 151 [{ 237 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 153 [{ 239 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 154 [{ 240 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 155 [{ 241 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 156 [{ 244 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 158 [{ 246 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7ab try:0
Node 149 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 149, pc=7ab, type=20
7ab: Add r78[0:63] --> r78[0:63] 
 <-- (148)
 --> (150 [{ 236 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 156 [{ 242 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7ab try:0
Node 150 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 150, pc=7b0, type=7
7b0: UncondBranch --> 
 <-- (148, 149)
 --> (158 [{ 251 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7b0 try:0
Node 151 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 151, pc=6b4, type=29
6b4: LogicalOp r77[0:7] --> r41[0:31] 
 <-- (148)
 --> (152 [{ 238 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6b4 try:0
Node 152 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 152, pc=6b7, type=8
6b7: CondBranch r41[0:63] --> 
 <-- (151)
 --> (156 [{ 243 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 158 [{ 252 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6b7 try:0
Node 153 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 153, pc=787, type=2
787: Load --> r76[0:63] 
 <-- (148)
 --> (158 [{ 247 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba049787 Reloc:7f48ba049000 len:7 disp:201882 scale:1
OZGURDBG::instrumenting node:0x787 try:0
787	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 154 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 154, pc=78e, type=13
78e: Copy r86[0:63] --> r80[0:63] 
 <-- (148)
 --> (158 [{ 248 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x78e try:0
Node 155 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 155, pc=791, type=13
791: Copy r79[0:63] --> r81[0:63] 
 <-- (148)
 --> (158 [{ 249 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x791 try:0
Node 156 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 156, pc=794, type=20
794: Add r78[0:63] --> r78[0:63] 
 <-- (149, 152, 148)
 --> (157 [{ 245 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x794 try:0
Node 157 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 157, pc=794, type=3
794: Store a78[0:63] --> 
 <-- (156)
 --> (158 [{ 250 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049794 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x794 try:0
Node 158 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 158, pc=794, type=9
794: Jump --> 
 <-- (148, 153, 154, 155, 157, 150, 152)
 --> (159 [{ 253 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 160 [{ 254 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 161 [{ 256 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 163 [{ 258 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 164 [{ 259 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 165 [{ 260 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 167 [{ 264 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 169 [{ 266 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x794 try:0
Node 159 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 159, pc=794, type=20
794: Add r78[0:63] --> r78[0:63] 
 <-- (158)
 --> (160 [{ 255 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 167 [{ 262 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x794 try:0
Node 160 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 160, pc=799, type=7
799: UncondBranch --> 
 <-- (158, 159)
 --> (169 [{ 271 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x799 try:0
Node 161 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 161, pc=6bd, type=29
6bd: LogicalOp r77[0:7] --> r41[0:31] 
 <-- (158)
 --> (162 [{ 257 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6bd try:0
Node 162 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 162, pc=6c0, type=8
6c0: CondBranch r41[0:63] --> 
 <-- (161)
 --> (167 [{ 263 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 169 [{ 272 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6c0 try:0
Node 163 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 163, pc=7b5, type=2
7b5: Load --> r76[0:63] 
 <-- (158)
 --> (166 [{ 261 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba0497b5 Reloc:7f48ba049000 len:7 disp:201854 scale:1
OZGURDBG::instrumenting node:0x7b5 try:0
7b5	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 164 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 164, pc=7bc, type=13
7bc: Copy r86[0:63] --> r80[0:63] 
 <-- (158)
 --> (169 [{ 267 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7bc try:0
Node 165 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 165, pc=7bf, type=13
7bf: Copy r79[0:63] --> r81[0:63] 
 <-- (158)
 --> (169 [{ 268 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7bf try:0
Node 166 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 166, pc=7c2, type=30
7c2: Shift r76[0:63] --> r76[0:63] r41[0:63] 
 <-- (163)
 --> (169 [{ 269 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7c2 try:0
Node 167 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 167, pc=7c5, type=20
7c5: Add r78[0:63] --> r78[0:63] 
 <-- (159, 162, 158)
 --> (168 [{ 265 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7c5 try:0
Node 168 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 168, pc=7c5, type=3
7c5: Store a78[0:63] --> 
 <-- (167)
 --> (169 [{ 270 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba0497c5 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x7c5 try:0
Node 169 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 169, pc=7c5, type=9
7c5: Jump --> 
 <-- (158, 164, 165, 166, 168, 160, 162)
 --> (170 [{ 273 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 171 [{ 274 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 172 [{ 276 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 174 [{ 278 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 175 [{ 279 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 176 [{ 280 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 177 [{ 281 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 178 [{ 284 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 180 [{ 286 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7c5 try:0
Node 170 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 170, pc=7c5, type=20
7c5: Add r78[0:63] --> r78[0:63] 
 <-- (169)
 --> (171 [{ 275 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 178 [{ 282 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7c5 try:0
Node 171 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 171, pc=7ca, type=7
7ca: UncondBranch --> 
 <-- (169, 170)
 --> (180 [{ 292 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x7ca try:0
Node 172 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 172, pc=6c6, type=29
6c6: LogicalOp r77[0:7] --> r77[0:7] r41[0:31] 
 <-- (169)
 --> (173 [{ 277 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6c6 try:0
Node 173 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 173, pc=6c9, type=8
6c9: CondBranch r41[0:63] --> 
 <-- (172)
 --> (178 [{ 283 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 180 [{ 293 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6c9 try:0
Node 174 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 174, pc=6cb, type=2
6cb: Load --> r75[0:63] 
 <-- (169)
 --> (180 [{ 287 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba0496cb Reloc:7f48ba049000 len:7 disp:20193e scale:1
OZGURDBG::instrumenting node:0x6cb try:0
6cb	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 175 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 175, pc=6d2, type=13
6d2: Copy r86[0:63] --> r76[0:63] 
 <-- (169)
 --> (180 [{ 288 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6d2 try:0
Node 176 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 176, pc=6d5, type=13
6d5: Copy r88[0:63] --> r80[0:63] 
 <-- (169)
 --> (180 [{ 289 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6d5 try:0
Node 177 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 177, pc=6d8, type=13
6d8: Copy r79[0:63] --> r81[0:63] 
 <-- (169)
 --> (180 [{ 290 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6d8 try:0
Node 178 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 178, pc=6db, type=20
6db: Add r78[0:63] --> r78[0:63] 
 <-- (170, 173, 169)
 --> (179 [{ 285 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6db try:0
Node 179 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 179, pc=6db, type=3
6db: Store a78[0:63] --> 
 <-- (178)
 --> (180 [{ 291 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba0496db Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x6db try:0
Node 180 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 180, pc=6db, type=9
6db: Jump --> 
 <-- (169, 174, 175, 176, 177, 179, 171, 173)
 --> (181 [{ 294 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 182 [{ 295 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 185 [{ 298 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6db try:0
Node 181 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 181, pc=6db, type=20
6db: Add r78[0:63] --> r78[0:63] 
 <-- (180)
 --> (183 [{ 296 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6db try:0
Node 182 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 182, pc=6e0, type=13
6e0: Copy r79[0:63] --> r81[0:63] 
 <-- (180)
 --> (185 [{ 299 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6e0 try:0
Node 183 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 183, pc=6e3, type=20
6e3: Add r78[0:63] --> r78[0:63] 
 <-- (181)
 --> (184 [{ 297 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6e3 try:0
Node 184 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 184, pc=6e3, type=3
6e3: Store a78[0:63] --> 
 <-- (183)
 --> (185 [{ 300 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba0496e3 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x6e3 try:0
Node 185 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 185, pc=6e3, type=9
6e3: Jump --> 
 <-- (180, 182, 184)
 --> (186 [{ 301 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 187 [{ 302 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 190 [{ 305 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6e3 try:0
Node 186 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 186, pc=6e3, type=20
6e3: Add r78[0:63] --> r78[0:63] 
 <-- (185)
 --> (188 [{ 303 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6e3 try:0
Node 187 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 187, pc=6e8, type=13
6e8: Copy r88[0:63] --> r81[0:63] 
 <-- (185)
 --> (190 [{ 306 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6e8 try:0
Node 188 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 188, pc=6eb, type=20
6eb: Add r78[0:63] --> r78[0:63] 
 <-- (186)
 --> (189 [{ 304 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6eb try:0
Node 189 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 189, pc=6eb, type=3
6eb: Store a78[0:63] --> 
 <-- (188)
 --> (190 [{ 307 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba0496eb Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x6eb try:0
Node 190 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 190, pc=6eb, type=9
6eb: Jump --> 
 <-- (185, 187, 189)
 --> (191 [{ 308 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 192 [{ 309 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 195 [{ 312 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6eb try:0
Node 191 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 191, pc=6eb, type=20
6eb: Add r78[0:63] --> r78[0:63] 
 <-- (190)
 --> (193 [{ 310 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6eb try:0
Node 192 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 192, pc=6f0, type=13
6f0: Copy r87[0:63] --> r81[0:63] 
 <-- (190)
 --> (195 [{ 313 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6f0 try:0
Node 193 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 193, pc=6f3, type=20
6f3: Add r78[0:63] --> r78[0:63] 
 <-- (191)
 --> (194 [{ 311 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6f3 try:0
Node 194 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 194, pc=6f3, type=3
6f3: Store a78[0:63] --> 
 <-- (193)
 --> (195 [{ 314 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba0496f3 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x6f3 try:0
Node 195 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 195, pc=6f3, type=9
6f3: Jump --> 
 <-- (190, 192, 194)
 --> (196 [{ 315 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 197 [{ 316 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 200 [{ 319 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6f3 try:0
Node 196 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 196, pc=6f3, type=20
6f3: Add r78[0:63] --> r78[0:63] 
 <-- (195)
 --> (198 [{ 317 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6f3 try:0
Node 197 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 197, pc=6f8, type=13
6f8: Copy r86[0:63] --> r81[0:63] 
 <-- (195)
 --> (200 [{ 320 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6f8 try:0
Node 198 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 198, pc=6fb, type=20
6fb: Add r78[0:63] --> r78[0:63] 
 <-- (196)
 --> (199 [{ 318 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6fb try:0
Node 199 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 199, pc=6fb, type=3
6fb: Store a78[0:63] --> 
 <-- (198)
 --> (200 [{ 321 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba0496fb Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x6fb try:0
Node 200 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 200, pc=6fb, type=9
6fb: Jump --> 
 <-- (195, 197, 199)
 --> (201 [{ 322 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 203 [{ 324 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 218 [{ 345 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 374 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 375 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 18 [{ 376 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 19 [{ 377 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 20 [{ 378 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x6fb try:0
Node 201 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 201, pc=6fb, type=20
6fb: Add r78[0:63] --> r78[0:63] 
 <-- (200)
 --> (202 [{ 323 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x6fb try:0
Node 202 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 202, pc=700, type=20
700: Add r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (201)
 --> (204 [{ 326 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 205 [{ 327 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x700 try:0
Node 203 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 203, pc=704, type=28
704: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (200)
 --> (218 [{ 346 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x704 try:0
Node 204 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 204, pc=706, type=2
706: Load a78[0:63] --> r77[0:63] 
 <-- (14, 202)
 --> (218 [{ 347 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 366 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -48 den: 1 HAHAHA Before num: -48 den: 1 After num: -48 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x30 +
consten Term of Formula is: -48
Decoded Instruction PC:7f48ba049706 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x706 try:0
Node 205 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 205, pc=706, type=20
706: Add r78[0:63] --> r78[0:63] 
 <-- (202)
 --> (206 [{ 329 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 207 [{ 330 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x706 try:0
Node 206 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 206, pc=707, type=2
707: Load a78[0:63] --> r79[0:63] 
 <-- (12, 205)
 --> (218 [{ 348 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 365 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -40 den: 1 HAHAHA Before num: -40 den: 1 After num: -40 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x28 +
consten Term of Formula is: -40
Decoded Instruction PC:7f48ba049707 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x707 try:0
Node 207 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 207, pc=707, type=20
707: Add r78[0:63] --> r78[0:63] 
 <-- (205)
 --> (208 [{ 332 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 209 [{ 333 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x707 try:0
Node 208 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 208, pc=708, type=2
708: Load a78[0:63] --> r86[0:63] 
 <-- (10, 207)
 --> (218 [{ 349 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 364 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -32 den: 1 HAHAHA Before num: -32 den: 1 After num: -32 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x20 +
consten Term of Formula is: -32
Decoded Instruction PC:7f48ba049708 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x708 try:0
Node 209 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 209, pc=708, type=20
708: Add r78[0:63] --> r78[0:63] 
 <-- (207)
 --> (210 [{ 335 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 211 [{ 336 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x708 try:0
Node 210 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 210, pc=70a, type=2
70a: Load a78[0:63] --> r87[0:63] 
 <-- (8, 209)
 --> (218 [{ 350 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 8 [{ 363 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -24 den: 1 HAHAHA Before num: -24 den: 1 After num: -24 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x18 +
consten Term of Formula is: -24
Decoded Instruction PC:7f48ba04970a Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x70a try:0
Node 211 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 211, pc=70a, type=20
70a: Add r78[0:63] --> r78[0:63] 
 <-- (209)
 --> (212 [{ 338 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 213 [{ 339 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x70a try:0
Node 212 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 212, pc=70c, type=2
70c: Load a78[0:63] --> r88[0:63] 
 <-- (6, 211)
 --> (218 [{ 351 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 362 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba04970c Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x70c try:0
Node 213 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 213, pc=70c, type=20
70c: Add r78[0:63] --> r78[0:63] 
 <-- (211)
 --> (214 [{ 341 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 215 [{ 342 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x70c try:0
Node 214 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 214, pc=70e, type=2
70e: Load a78[0:63] --> r89[0:63] 
 <-- (4, 213)
 --> (218 [{ 352 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 4 [{ 361 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba04970e Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x70e try:0
Node 215 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 215, pc=70e, type=20
70e: Add r78[0:63] --> r78[0:63] 
 <-- (213)
 --> (216 [{ 343 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 217 [{ 344 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x70e try:0
Node 216 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 216, pc=710, type=2
710: Load a78[0:63] --> 
 <-- (215)
 --> (218 [{ 353 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x610,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049710 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x710 try:0
Node 217 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 217, pc=710, type=20
710: Add r78[0:63] --> r78[0:63] 
 <-- (215)
 --> (218 [{ 354 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 360 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x710 try:0
Node 218 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 218, pc=710, type=10
710: Return --> 
 <-- (200, 203, 204, 206, 208, 210, 212, 214, 216, 217)
 --> (3 [{ 355 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 356 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 18 [{ 357 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 19 [{ 358 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 20 [{ 359 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 2 [{ 372 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 23 [{ 373 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x710 try:0
626
	610-0
	612-0
	614-0
	616-0
	618-0
	619-0
	61a-0
	61e-0
	621-0
63d
	627-0
	62e-0
	636-0
	639-0
648
	63e-0
	641-0
	644-0
653
	649-0
	64c-0
	64f-0
663
	654-0
	657-0
	65a-0
	65f-0
671
	664-0
	667-0
	66a-0
	66d-0
680
	672-0
	679-0
	67c-0
68f
	681-0
	688-0
	68b-0
698
	690-0
	693-0
6a1
	699-0
	69c-0
6aa
	6a2-0
	6a5-0
6b3
	6ab-0
	6ae-0
6bc
	6b4-0
	6b7-0
6c5
	6bd-0
	6c0-0
6ca
	6c6-0
	6c9-0
6df
	6cb-0
	6d2-0
	6d5-0
	6d8-0
	6db-0
6e7
	6e0-0
	6e3-0
6ef
	6e8-0
	6eb-0
6f7
	6f0-0
	6f3-0
6ff
	6f8-0
	6fb-0
710
	700-0
	704-0
	706-1
	707-1
	708-1
	70a-1
	70c-1
	70e-1
	710-1
720
	711-0
	715-0
	71a-0
	71c-0
73a
	721-0
	728-0
	72b-0
	733-0
	736-0
745
	73b-0
	73e-0
	741-0
750
	746-0
	749-0
	74c-0
75b
	751-0
	754-0
	757-0
769
	75c-0
	75f-0
	762-0
	765-0
778
	76a-0
	771-0
	774-0
781
	779-0
	77c-0
786
	782-0
798
	787-0
	78e-0
	791-0
	794-0
79d
	799-0
7af
	79e-0
	7a5-0
	7a8-0
	7ab-0
7b4
	7b0-0
7c9
	7b5-0
	7bc-0
	7bf-0
	7c2-0
	7c5-0
7ce
	7ca-0
7dd
	7cf-0
	7d6-0
	7d9-0
7e2
	7de-0
7f7
	7e3-0
	7ea-0
	7ed-0
	7f0-0
	7f3-0
7fc
	7f8-0
80b
	7fd-0
	804-0
	807-0
810
	80c-0
ffffffffffffffff
626-0
626-0
63d-0
63d-0
648-0
648-0
653-0
653-0
663-0
663-0
671-0
671-0
680-0
680-0
68f-0
68f-0
698-0
698-0
6a1-0
6a1-0
6aa-0
6aa-0
6b3-0
6b3-0
6bc-0
6bc-0
6c5-0
6c5-0
6ca-0
6ca-0
6df-0
6df-0
6e7-0
6e7-0
6ef-0
6ef-0
6f7-0
6f7-0
6ff-0
6ff-0
710-7
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load at706
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d549da0
710-0
720-0
720-0
73a-0
73a-0
745-0
745-0
750-0
750-0
75b-0
75b-0
769-0
769-0
778-0
778-0
781-0
781-0
786-0
786-0
798-0
798-0
79d-0
79d-0
7af-0
7af-0
7b4-0
7b4-0
7c9-0
7c9-0
7ce-0
7ce-0
7dd-0
7dd-0
7e2-0
7e2-0
7f7-0
7f7-0
7fc-0
7fc-0
80b-0
80b-0
810-0
810-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:20	frame:7	strided:13	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: main
Name of the routine is: init_random
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: init_random start: 0x930 offset: 0x930 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'init_random 0x7f48ba049000'
OZGURDBG discover_CFG: 0x930 0x930 0x96a
OZGURIMM case RELLBR at pc 0x7f48ba049933 imm:0
OZGURDBGSLICE at IP 7f48ba049933 imm_values:33
OZGURDBG discover_CFG: 0x7f48ba049968 0x930 0x96a
OZGURDBG discover_CFG: 0x968 0x930 0x96a
OZGURIMM Stack uop at pc 0x7f48ba049968 imm:0
OZGURDBG discover_CFG: 0x935 0x930 0x96a
OZGURIMM case RELLBR at pc 0x7f48ba049948 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049948 imm:0
OZGURDBGSLICE at IP 7f48ba049948 imm_values:fffffffffffffc93
OZGURDBG discover_CFG: 0x7f48ba0495e0 0x930 0x96a
OZGURDBG discover_CFG: 0x5e0 0x930 0x96a
OZGURDBG discover_CFG: 0x94d 0x930 0x96a
OZGURIMM case RELLBR at pc 0x7f48ba04995c imm:0
OZGURDBGSLICE at IP 7f48ba04995c imm_values:ffffffffffffffea
OZGURDBG discover_CFG: 0x7f48ba049948 0x930 0x96a
OZGURDBG discover_CFG: 0x948 0x930 0x96a
OZGURDBG discover_CFG: 0x95e 0x930 0x96a
OZGURIMM Stack uop at pc 0x7f48ba049962 imm:0
main_analysis841
[INFO]Routine::main_analysis(): 'init_random'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049933 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049968 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049935 imm:0
OZGURDECODE@PC at IP 0x7f48ba049937 scale:4
OZGURIMM Stack uop at pc 0x7f48ba04993b imm:0
OZGURIMM Stack uop at pc 0x7f48ba04993f imm:0
OZGURDECODE@PC at IP 0x7f48ba049943 scale:1
OZGURDCODE@PC at IP 0x7f48ba049943 disp:0
OZGURIMM case RELLBR at pc 0x7f48ba049948 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049948 imm:0
OZGURIMM0 if signed at pc 0x7f48ba04994f imm:4
OZGURDCODE@PC at IP 0x7f48ba049956 disp:fffffffffffffffc
OZGURIMM case RELLBR at pc 0x7f48ba04995c imm:0
OZGURDBGSLICE at IP 956 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba04995e imm:0
OZGURIMM Stack uop at pc 0x7f48ba04995f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049960 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049962 imm:0
 This is Rslice 0x556e1d4b19c0

  ** StrideSlice::Slice, block [0x948,0x94d], from_uop=1, on reg Name RSP {type MemOp(2), stack=0, [0,63]}, start_pc=0x948, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0x948,0x94d], from_uop=0, on reg Name RSP {type RegOp(1), stack=0, [0,63]}, start_pc=0x948, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0x948,0x94d], from_uop=3, on reg Name RSP {type RegOp(1), stack=0, [0,63]}, start_pc=0x948, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2
OZGURDBGSLICE at IP 956 disp:fffffffffffffffc

  ** StrideSlice::Slice, block [0x94d,0x95e], from_uop=3, on reg Name RBX {type MemOp(2), stack=0, [0,63]}, start_pc=0x956, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0x94d,0x95e], from_uop=1, on reg Name RBX {type RegOp(1), stack=0, [0,63]}, start_pc=0x94f, start_be=0, start_rank=3
OZGURERROR:: sii->is_strideF != 1 it is:2
build_loops_for_interval routine: init_random'
build_loops_for_interval routine: init_random'
OZGURIMM case RELLBR at pc 0x7f48ba049948 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049948 imm:0
OZGURIMM0 if signed at pc 0x7f48ba04994f imm:4
OZGURDCODE@PC at IP 0x7f48ba049956 disp:fffffffffffffffc
OZGURIMM case RELLBR at pc 0x7f48ba04995c imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049933 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049968 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049935 imm:0
OZGURDECODE@PC at IP 0x7f48ba049937 scale:4
OZGURIMM Stack uop at pc 0x7f48ba04993b imm:0
OZGURIMM Stack uop at pc 0x7f48ba04993f imm:0
OZGURDECODE@PC at IP 0x7f48ba049943 scale:1
OZGURDCODE@PC at IP 0x7f48ba049943 disp:0
OZGURIMM Stack uop at pc 0x7f48ba04995e imm:0
OZGURIMM Stack uop at pc 0x7f48ba04995f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049960 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049962 imm:0
[INFO]Routine::constructLoops(): 'init_random'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'init_random'
In SchedDG constructor for routine init_random, pathId 0x930/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'init_random'
OZGURIMM case RELLBR at pc 0x7f48ba049933 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049968 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049935 imm:0
OZGURDECODE@PC at IP 0x7f48ba049937 scale:4
OZGURIMM Stack uop at pc 0x7f48ba04993b imm:0
OZGURIMM Stack uop at pc 0x7f48ba04993f imm:0
OZGURDECODE@PC at IP 0x7f48ba049943 scale:1
OZGURDCODE@PC at IP 0x7f48ba049943 disp:0
OZGURIMM case RELLBR at pc 0x7f48ba049948 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049948 imm:0
OZGURIMM0 if signed at pc 0x7f48ba04994f imm:4
OZGURDCODE@PC at IP 0x7f48ba049956 disp:fffffffffffffffc
OZGURIMM case RELLBR at pc 0x7f48ba04995c imm:0
OZGURIMM Stack uop at pc 0x7f48ba04995e imm:0
OZGURIMM Stack uop at pc 0x7f48ba04995f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049960 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049962 imm:0
Sniper Routine: init_random StartAddr:930
OZGURDBGX3 #Blocks: 8
	Block[0] 's startAddres: 930 endAddress:  935
		instruction addres:930
		instruction addres:933
930-0
933-0

	Block[1] 's startAddres: 968 endAddress:  96a
		instruction addres:968
968-0

	Block[2] 's startAddres: 935 endAddress:  948
		instruction addres:935
		instruction addres:937
		instruction addres:93b
		instruction addres:93c
		instruction addres:93f
		instruction addres:940
		instruction addres:943
935-0
937-0
93b-0
93c-0
93f-0
940-0
943-0

	Block[3] 's startAddres: 948 endAddress:  94d
		instruction addres:948
948-0

	Block[4] 's startAddres: 94d endAddress:  94d

	Block[5] 's startAddres: 94d endAddress:  95e
		instruction addres:94d
		instruction addres:94f
		instruction addres:953
		instruction addres:956
		instruction addres:959
		instruction addres:95c
94d-0
94f-0
953-0
956-0
959-0
95c-0

	Block[6] 's startAddres: 95e endAddress:  963
		instruction addres:95e
		instruction addres:95f
		instruction addres:960
		instruction addres:962
95e-0
95f-0
960-0
962-0

	Block[7] 's startAddres: 0 endAddress:  0
Node Ox968 is Frame
Node Ox95f is Frame
Node Ox95e is Frame
Node Ox960 is Frame
Node Ox962 is Frame
934
	930-0
	933-0
947
	935-0
	937-0
	93b-0
	93c-0
	93f-0
	940-0
	943-0
94c
	948-0
95d
	94d-0
	94f-0
	953-0
	956-0
	959-0
	95c-0
962
	95e-1
	95f-1
	960-1
	962-1
969
	968-1
ffffffffffffffff
Address	type	class
Node 7 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=968, type=10
968: Return --> 
 <-- (6, 5)
 --> (8 [{ 5 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x968 try:0
Node 6 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=968, type=20
968: Add r78[0:63] --> r78[0:63] 
 <-- (36, 35, 1, 20)
 --> (7 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 8 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x968 try:0
Node 5 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=968, type=2
968: Load a78[0:63] --> 
 <-- (36, 35, 1, 20)
 --> (7 [{ 3 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0x930,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049968 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x968 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=933, type=8
933: CondBranch r41[0:63] --> 
 <-- (3)
 --> (20 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x933 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=930, type=29
930: LogicalOp r80[0:63] r80[0:63] --> r41[0:63] 
 <-- (36, 1, 20)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x930 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- (36, 27)
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
 --> (6 [{ 66 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 67 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 68 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 16 [{ 69 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 17 [{ 70 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 71 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 74 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x0 try:0
Node 22 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 22, pc=94d, type=28
94d: Xor r76[0:31] r76[0:31] --> r76[0:31] r41[0:31] 
 <-- (20)
 --> (24 [{ 26 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x94d try:0
Node 23 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 23, pc=94f, type=20
94f: Add r77[0:63] --> r77[0:63] r41[0:63] 
 <-- (20)
 --> (25 [{ 28 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 26 [{ 29 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x94f try:0
Node 21 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 21, pc=948, type=20
948: Add r78[0:63] --> r78[0:63] 
 <-- (20)
 --> (27 [{ 31 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 28 [{ 34 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 29 [{ 37 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x948 try:0
Node 30 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 30, pc=95f, type=2
95f: Load a78[0:63] --> r79[0:63] 
 <-- (12, 29)
 --> (36 [{ 49 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 64 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x930,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba04995f Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x95f try:0
Node 31 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 31, pc=95f, type=20
95f: Add r78[0:63] --> r78[0:63] 
 <-- (29)
 --> (32 [{ 44 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 33 [{ 45 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x95f try:0
Node 20 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 20, pc=948, type=9
948: Jump --> 
 <-- (16, 17, 19, 10, 13, 9, 12, 15, 7, 4, 36, 27)
 --> (21 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 22 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 23 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 28 [{ 36 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 29 [{ 39 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 36 [{ 48 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 77 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 78 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 79 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 80 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 17 [{ 81 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 10 [{ 82 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 83 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x948 try:0
Node 16 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=940, type=13
940: Copy r81[0:63] --> r77[0:63] 
 <-- (36, 1, 20)
 --> (20 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x940 try:0
Node 17 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=943, type=31
943: NOP --> 
 <-- (36, 1, 20)
 --> (20 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x943 try:0
Node 18 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 18, pc=948, type=20
948: Add r78[0:63] --> r78[0:63] 
 <-- (14)
 --> (19 [{ 12 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x948 try:0
Node 19 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 19, pc=948, type=3
948: Store a78[0:63] --> 
 <-- (18)
 --> (20 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -32 den: 1 HAHAHA Before num: -32 den: 1 After num: -32 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x930,0) + -0x20 +
consten Term of Formula is: -32
Decoded Instruction PC:7f48ba049948 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0x948 try:0
Node 10 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=937, type=21
937: LEA l81[0:63] l80[0:63] --> r86[0:63] 
 <-- (36, 1, 20)
 --> (20 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x937 try:0
Node 28 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 28, pc=95e, type=2
95e: Load a78[0:63] --> r77[0:63] 
 <-- (15, 21, 27, 20)
 --> (36 [{ 50 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 65 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -24 den: 1 HAHAHA Before num: -24 den: 1 After num: -24 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x930,0) + -0x18 +
consten Term of Formula is: -24
Decoded Instruction PC:7f48ba04995e Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x95e try:0
Node 29 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 29, pc=95e, type=20
95e: Add r78[0:63] --> r78[0:63] 
 <-- (21, 27, 20)
 --> (30 [{ 41 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 31 [{ 42 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x95e try:0
Node 35 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 35, pc=962, type=20
962: Add r78[0:63] --> r78[0:63] 
 <-- (33)
 --> (36 [{ 51 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 61 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 62 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x962 try:0
Node 36 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 36, pc=962, type=10
962: Return --> 
 <-- (20, 30, 28, 35, 32, 34)
 --> (6 [{ 54 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 55 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 56 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 57 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 17 [{ 58 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 10 [{ 59 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 60 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 2 [{ 72 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 75 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x962 try:0
Node 26 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 26, pc=959, type=19
959: Cmp r77[0:63] r86[0:63] --> r41[0:63] 
 <-- (23)
 --> (27 [{ 30 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x959 try:0
Node 27 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 27, pc=95c, type=8
95c: CondBranch r41[0:63] --> 
 <-- (26, 21, 25)
 --> (28 [{ 35 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 29 [{ 38 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 2 [{ 73 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 76 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0x95c try:0
Node 32 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 32, pc=960, type=2
960: Load a78[0:63] --> r86[0:63] 
 <-- (9, 31)
 --> (36 [{ 52 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 63 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x930,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049960 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x960 try:0
Node 33 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 33, pc=960, type=20
960: Add r78[0:63] --> r78[0:63] 
 <-- (31)
 --> (34 [{ 46 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 35 [{ 47 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x960 try:0
Node 34 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 34, pc=962, type=2
962: Load a78[0:63] --> 
 <-- (33)
 --> (36 [{ 53 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x930,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049962 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x962 try:0
Node 13 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=93c, type=13
93c: Copy r80[0:63] --> r79[0:63] 
 <-- (36, 1, 20)
 --> (20 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x93c try:0
Node 24 of type Div, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 24, pc=953, type=25
953: Div r74[0:63] r76[0:63] r79[0:63] --> r74[0:63] r76[0:63] r41[0:63] 
 <-- (22)
 --> (25 [{ 27 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x953 try:0
Node 25 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 25, pc=956, type=3
956: Store r76[0:31] a77[0:63] --> 
 <-- (24, 23)
 --> (27 [{ 32 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0x930,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049956 Reloc:7f48ba049000 len:3 disp:fffffffffffffffc scale:1
OZGURDBG::instrumenting node:0x956 try:0
Node 9 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=935, type=3
935: Store r86[0:63] a78[0:63] --> 
 <-- (8, 32)
 --> (20 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 32 [{ 43 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x930,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049935 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x935 try:0
Node 11 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=93b, type=20
93b: Add r78[0:63] --> r78[0:63] 
 <-- (8)
 --> (12 [{ 8 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x93b try:0
Node 12 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=93b, type=3
93b: Store r79[0:63] a78[0:63] --> 
 <-- (11, 30)
 --> (20 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 30 [{ 40 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x930,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba04993b Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x93b try:0
Node 14 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=93f, type=20
93f: Add r78[0:63] --> r78[0:63] 
 <-- (11)
 --> (15 [{ 10 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x93f try:0
Node 15 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=93f, type=3
93f: Store r77[0:63] a78[0:63] --> 
 <-- (14, 28)
 --> (20 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 28 [{ 33 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -24 den: 1 HAHAHA Before num: -24 den: 1 After num: -24 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x930,0) + -0x18 +
consten Term of Formula is: -24
Decoded Instruction PC:7f48ba04993f Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x93f try:0
Node 8 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=935, type=20
935: Add r78[0:63] --> r78[0:63] 
 <-- (6, 7)
 --> (9 [{ 6 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x935 try:0
934
	930-0
	933-0
947
	935-0
	937-0
	93b-0
	93c-0
	93f-0
	940-0
	943-0
94c
	948-0
95d
	94d-0
	94f-0
	953-0
	956-0
	959-0
	95c-0
962
	95e-1
	95f-1
	960-1
	962-1
969
	968-1
ffffffffffffffff
934-0
934-0
947-0
947-0
94c-0
94c-0
95d-0
95d-0
962-4
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load at968
Node has 1 src regs
Node has 0 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d4e1760
962-4
969-0
969-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:5	frame:5	strided:0	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: init_random
Name of the routine is: init_shuffle
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: init_shuffle start: 0x970 offset: 0x970 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'init_shuffle 0x7f48ba049000'
OZGURDBG discover_CFG: 0x970 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049983 imm:0
OZGURDBGSLICE at IP 7f48ba049983 imm_values:118
OZGURDBG discover_CFG: 0x7f48ba049aa1 0x970 0xb07
OZGURDBG discover_CFG: 0xaa1 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049ab0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ab0 imm:0
OZGURDBGSLICE at IP 7f48ba049ab0 imm_values:fffffffffffffb2b
OZGURDBG discover_CFG: 0x7f48ba0495e0 0x970 0xb07
OZGURDBG discover_CFG: 0x5e0 0x970 0xb07
OZGURDBG discover_CFG: 0xab5 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049aec imm:0
OZGURDBGSLICE at IP 7f48ba049aec imm_values:ffffffffffffffc2
OZGURDBG discover_CFG: 0x7f48ba049ab0 0x970 0xb07
OZGURDBG discover_CFG: 0xab0 0x970 0xb07
OZGURDBG discover_CFG: 0xaee 0x970 0xb07
OZGURIMM Stack uop at pc 0x7f48ba049afa imm:0
OZGURDBG discover_CFG: 0x989 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba0499aa imm:0
OZGURDBGSLICE at IP 7f48ba0499aa imm_values:150
OZGURDBG discover_CFG: 0x7f48ba049b00 0x970 0xb07
OZGURDBG discover_CFG: 0xb00 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049b02 imm:0
OZGURDBGSLICE at IP 7f48ba049b02 imm_values:ffffffffffffff56
OZGURDBG discover_CFG: 0x7f48ba049a5d 0x970 0xb07
OZGURDBG discover_CFG: 0xa5d 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049a67 imm:0
OZGURDBGSLICE at IP 7f48ba049a67 imm_values:33
OZGURDBG discover_CFG: 0x7f48ba049a9c 0x970 0xb07
OZGURDBG discover_CFG: 0xa9c 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049a9f imm:0
OZGURDBGSLICE at IP 7f48ba049a9f imm_values:4d
OZGURDBG discover_CFG: 0x7f48ba049aee 0x970 0xb07
OZGURDBG discover_CFG: 0xaee 0x970 0xb07
OZGURDBG discover_CFG: 0xaa1 0x970 0xb07
OZGURDBG discover_CFG: 0xa69 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049a73 imm:0
OZGURDBGSLICE at IP 7f48ba049a73 imm_values:27
OZGURDBG discover_CFG: 0x7f48ba049a9c 0x970 0xb07
OZGURDBG discover_CFG: 0xa9c 0x970 0xb07
OZGURDBG discover_CFG: 0xa75 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049a7f imm:0
OZGURDBGSLICE at IP 7f48ba049a7f imm_values:1b
OZGURDBG discover_CFG: 0x7f48ba049a9c 0x970 0xb07
OZGURDBG discover_CFG: 0xa9c 0x970 0xb07
OZGURDBG discover_CFG: 0xa81 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049a8b imm:0
OZGURDBGSLICE at IP 7f48ba049a8b imm_values:f
OZGURDBG discover_CFG: 0x7f48ba049a9c 0x970 0xb07
OZGURDBG discover_CFG: 0xa9c 0x970 0xb07
OZGURDBG discover_CFG: 0xa8d 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049a97 imm:0
OZGURDBGSLICE at IP 7f48ba049a97 imm_values:3
OZGURDBG discover_CFG: 0x7f48ba049a9c 0x970 0xb07
OZGURDBG discover_CFG: 0xa9c 0x970 0xb07
OZGURDBG discover_CFG: 0xa99 0x970 0xb07
OZGURDBG discover_CFG: 0xa9c 0x970 0xb07
OZGURDBG discover_CFG: 0x9b0 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba0499b5 imm:0
OZGURDBGSLICE at IP 7f48ba0499b5 imm_values:2f
OZGURDBG discover_CFG: 0x7f48ba0499e6 0x970 0xb07
OZGURDBG discover_CFG: 0x9e6 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049a4b imm:0
OZGURDBGSLICE at IP 7f48ba049a4b imm_values:ffffffffffffffdb
OZGURDBG discover_CFG: 0x7f48ba049a28 0x970 0xb07
OZGURDBG discover_CFG: 0xa28 0x970 0xb07
OZGURDBG discover_CFG: 0xa4d 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba049a5b imm:0
OZGURDBGSLICE at IP 7f48ba049a5b imm_values:44
OZGURDBG discover_CFG: 0x7f48ba049aa1 0x970 0xb07
OZGURDBG discover_CFG: 0xaa1 0x970 0xb07
OZGURDBG discover_CFG: 0xa5d 0x970 0xb07
OZGURDBG discover_CFG: 0x9b7 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba0499c6 imm:0
OZGURDBGSLICE at IP 7f48ba0499c6 imm_values:1e
OZGURDBG discover_CFG: 0x7f48ba0499e6 0x970 0xb07
OZGURDBG discover_CFG: 0x9e6 0x970 0xb07
OZGURDBG discover_CFG: 0x9c8 0x970 0xb07
OZGURIMM case RELLBR at pc 0x7f48ba0499d8 imm:0
OZGURDBGSLICE at IP 7f48ba0499d8 imm_values:c
OZGURDBG discover_CFG: 0x7f48ba0499e6 0x970 0xb07
OZGURDBG discover_CFG: 0x9e6 0x970 0xb07
OZGURDBG discover_CFG: 0x9da 0x970 0xb07
OZGURDBG discover_CFG: 0x9e6 0x970 0xb07
main_analysis841
[INFO]Routine::main_analysis(): 'init_shuffle'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM Stack uop at pc 0x7f48ba049970 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049972 imm:0
OZGURDCODE@PC at IP 0x7f48ba049974 disp:ffffffffffffffff
OZGURIMM Stack uop at pc 0x7f48ba049978 imm:0
OZGURIMM Stack uop at pc 0x7f48ba04997a imm:0
OZGURIMM Stack uop at pc 0x7f48ba04997b imm:0
OZGURIMM0 if signed at pc 0x7f48ba04997c imm:10
OZGURIMM case RELLBR at pc 0x7f48ba049983 imm:0
OZGURIMM0 if not signed at pc 0x7f48ba04998c imm:5
OZGURIMM0 if not signed at pc 0x7f48ba049991 imm:2
OZGURIMM0 if signed at pc 0x7f48ba049998 imm:3
OZGURDCODE@PC at IP 0x7f48ba04999b disp:3
OZGURIMM0 if signed at pc 0x7f48ba04999f imm:5
OZGURIMM case RELLBR at pc 0x7f48ba0499aa imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049b02 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0499b5 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0499b7 imm:1
OZGURIMM0 if signed at pc 0x7f48ba0499bb imm:0
OZGURIMM0 if not signed at pc 0x7f48ba0499c1 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0499c6 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0499c8 imm:3
OZGURDCODE@PC at IP 0x7f48ba0499cc disp:4
OZGURIMM0 if signed at pc 0x7f48ba0499cc imm:1
OZGURIMM0 if not signed at pc 0x7f48ba0499d3 imm:2
OZGURIMM case RELLBR at pc 0x7f48ba0499d8 imm:0
OZGURDBGSLICE at IP 9cc disp:4
OZGURDCODE@PC at IP 0x7f48ba0499da disp:8
OZGURIMM0 if signed at pc 0x7f48ba0499da imm:2
OZGURIMM0 if not signed at pc 0x7f48ba0499e1 imm:3
OZGURDBGSLICE at IP 9da disp:8
OZGURDCODE@PC at IP 0x7f48ba0499e6 disp:1
OZGURDCODE@PC at IP 0x7f48ba0499ea disp:8
OZGURDCODE@PC at IP 0x7f48ba0499f5 disp:8
OZGURDCODE@PC at IP 0x7f48ba0499fb disp:8
OZGURDECODE@PC at IP 0x7f48ba049a03 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a07 disp:8
OZGURDCODE@PC at IP 0x7f48ba049a0c disp:54c
OZGURIMM0 if not signed at pc 0x7f48ba049a14 imm:2
OZGURDCODE@PC at IP 0x7f48ba049a1a disp:54e
OZGURDECODE@PC at IP 0x7f48ba049a22 scale:1
OZGURDCODE@PC at IP 0x7f48ba049a22 disp:0
OZGURDBGSLICE at IP 9ea disp:8
OZGURDBGSLICE at IP 9f5 disp:8
OZGURDBGSLICE at IP 9fb disp:8
OZGURDBGSLICE at IP a07 disp:8
OZGURDBGSLICE at IP a0c disp:54c
OZGURDBGSLICE at IP a1a disp:54e
OZGURIMM0 if signed at pc 0x7f48ba049a34 imm:1
OZGURIMM0 if signed at pc 0x7f48ba049a38 imm:10
OZGURIMM0 if not signed at pc 0x7f48ba049a40 imm:88
OZGURDCODE@PC at IP 0x7f48ba049a44 disp:fffffffffffffff0
OZGURIMM case RELLBR at pc 0x7f48ba049a4b imm:0
OZGURDBGSLICE at IP a44 disp:fffffffffffffff0
OZGURDBGSLICE at IP a03 scale:4
OZGURDBGSLICE at IP a03 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049a50 imm:fffffffffffffffc
OZGURDECODE@PC at IP 0x7f48ba049a57 scale:1
OZGURIMM case RELLBR at pc 0x7f48ba049a5b imm:0
OZGURDCODE@PC at IP 0x7f48ba049a5d disp:1
OZGURDECODE@PC at IP 0x7f48ba049a61 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049a67 imm:0
OZGURDBGSLICE at IP a61 scale:4
OZGURDBGSLICE at IP a57 scale:1
OZGURDBGSLICE at IP a57 scale:1
OZGURDECODE@PC at IP 0x7f48ba049a69 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a6c disp:2
OZGURIMM case RELLBR at pc 0x7f48ba049a73 imm:0
OZGURDBGSLICE at IP a69 scale:4
OZGURDBGSLICE at IP a5d scale:1
OZGURDBGSLICE at IP a5d disp:1
OZGURDBGSLICE at IP a5d disp:1
OZGURDECODE@PC at IP 0x7f48ba049a75 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a78 disp:3
OZGURIMM case RELLBR at pc 0x7f48ba049a7f imm:0
OZGURDBGSLICE at IP a75 scale:4
OZGURDBGSLICE at IP a6c scale:1
OZGURDBGSLICE at IP a6c disp:2
OZGURDBGSLICE at IP a6c disp:2
OZGURDECODE@PC at IP 0x7f48ba049a81 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a84 disp:4
OZGURIMM case RELLBR at pc 0x7f48ba049a8b imm:0
OZGURDBGSLICE at IP a81 scale:4
OZGURDBGSLICE at IP a78 scale:1
OZGURDBGSLICE at IP a78 disp:3
OZGURDBGSLICE at IP a78 disp:3
OZGURIMM0 if signed at pc 0x7f48ba049a8d imm:5
OZGURDECODE@PC at IP 0x7f48ba049a91 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049a97 imm:0
OZGURDBGSLICE at IP a91 scale:4
OZGURDBGSLICE at IP a84 scale:1
OZGURDBGSLICE at IP a84 disp:4
OZGURDBGSLICE at IP a84 disp:4
OZGURDECODE@PC at IP 0x7f48ba049a99 scale:4
OZGURDBGSLICE at IP a99 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049a9f imm:0
OZGURIMM0 if not signed at pc 0x7f48ba049aa9 imm:7fffffff
OZGURIMM case RELLBR at pc 0x7f48ba049ab0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ab0 imm:0
OZGURDCODE@PC at IP 0x7f48ba049ac8 disp:1
OZGURDECODE@PC at IP 0x7f48ba049acf scale:4
OZGURDECODE@PC at IP 0x7f48ba049ad9 scale:4
OZGURDECODE@PC at IP 0x7f48ba049ae1 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049ae5 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049aec imm:0
OZGURDBGSLICE at IP acf scale:4
OZGURDBGSLICE at IP ac8 scale:1
OZGURDBGSLICE at IP ac8 disp:1
OZGURDBGSLICE at IP ac8 disp:1
OZGURDBGSLICE at IP ad9 scale:4
OZGURDBGSLICE at IP ad9 scale:4
OZGURDBGSLICE at IP ae1 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049aee imm:10
OZGURIMM Stack uop at pc 0x7f48ba049af2 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af4 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af6 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af8 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049afa imm:0
 This is Rslice 0x556e1d4d3db0
OZGURDBGSLICE at IP a44 disp:fffffffffffffff0

  ** StrideSlice::Slice, block [0xa28,0xa4d], from_uop=7, on reg Name RDX {type MemOp(2), stack=0, [0,63]}, start_pc=0xa44, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xa28,0xa4d], from_uop=4, on reg Name RDX {type RegOp(1), stack=0, [0,63]}, start_pc=0xa38, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xab0,0xab5], from_uop=1, on reg Name RSP {type MemOp(2), stack=0, [0,63]}, start_pc=0xab0, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xab0,0xab5], from_uop=0, on reg Name RSP {type RegOp(1), stack=0, [0,63]}, start_pc=0xab0, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xab0,0xab5], from_uop=3, on reg Name RSP {type RegOp(1), stack=0, [0,63]}, start_pc=0xab0, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2
OZGURDBGSLICE at IP acf scale:4

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=9, on reg Name RBX {type MemOp(2), stack=0, [0,63]}, start_pc=0xacf, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=16, on reg Name RBX {type RegOp(1), stack=0, [0,63]}, start_pc=0xae5, start_be=1, start_rank=3
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=9, on reg Name R14 {type MemOp(2), stack=0, [0,63]}, start_pc=0xacf, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=13, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xadd, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=12, on reg Name R14 {type LEAOp(3), stack=0, [0,63]}, start_pc=0xad9, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=12, on reg Name RAX {type LEAOp(3), stack=0, [0,63]}, start_pc=0xad9, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=11, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xad6, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=10, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xad3, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=8, on reg Name RCX {type RegOp(1), stack=0, [0,63]}, start_pc=0xacc, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=1, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xab8, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=10, on reg Name RDX {type RegOp(1), stack=0, [0,63]}, start_pc=0xad3, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=10, on reg Name RSI {type RegOp(1), stack=0, [0,63]}, start_pc=0xad3, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=7, on reg Name RAX {type LEAOp(3), stack=0, [0,63]}, start_pc=0xac8, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=5, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xac3, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=4, on reg Name R12 {type RegOp(1), stack=0, [0,63]}, start_pc=0xac0, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=5, on reg Name RDX {type RegOp(1), stack=0, [0,63]}, start_pc=0xac3, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=5, on reg Name RSI {type RegOp(1), stack=0, [0,63]}, start_pc=0xac3, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=3, on reg Name RSI {type RegOp(1), stack=0, [0,63]}, start_pc=0xabd, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=0, on reg Name RBP {type RegOp(1), stack=0, [0,63]}, start_pc=0xab5, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=3, on reg Name RBX {type RegOp(1), stack=0, [0,63]}, start_pc=0xabd, start_be=0, start_rank=3
OZGURDBGSLICE at IP ac8 disp:1

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=11, on reg Name RBX {type RegOp(1), stack=0, [0,63]}, start_pc=0xad6, start_be=0, start_rank=3
OZGURDBGSLICE at IP ad9 scale:4
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=14, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xadf, start_be=0, start_rank=3
OZGURERROR:: sii->is_strideF != 1 it is:2
OZGURDBGSLICE at IP ae1 scale:4

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=15, on reg Name RBX {type MemOp(2), stack=0, [0,63]}, start_pc=0xae1, start_be=0, start_rank=3
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xab5,0xaee], from_uop=15, on reg Name R14 {type MemOp(2), stack=0, [0,63]}, start_pc=0xae1, start_be=0, start_rank=3
build_loops_for_interval routine: init_shuffle'
build_loops_for_interval routine: init_shuffle'
OZGURIMM0 if signed at pc 0x7f48ba049a34 imm:1
OZGURIMM0 if signed at pc 0x7f48ba049a38 imm:10
OZGURIMM0 if not signed at pc 0x7f48ba049a40 imm:88
OZGURDCODE@PC at IP 0x7f48ba049a44 disp:fffffffffffffff0
OZGURIMM case RELLBR at pc 0x7f48ba049a4b imm:0
build_loops_for_interval routine: init_shuffle'
OZGURIMM case RELLBR at pc 0x7f48ba049ab0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ab0 imm:0
OZGURDCODE@PC at IP 0x7f48ba049ac8 disp:1
OZGURDECODE@PC at IP 0x7f48ba049acf scale:4
OZGURDECODE@PC at IP 0x7f48ba049ad9 scale:4
OZGURDECODE@PC at IP 0x7f48ba049ae1 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049ae5 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049aec imm:0
OZGURIMM Stack uop at pc 0x7f48ba049970 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049972 imm:0
OZGURDCODE@PC at IP 0x7f48ba049974 disp:ffffffffffffffff
OZGURIMM Stack uop at pc 0x7f48ba049978 imm:0
OZGURIMM Stack uop at pc 0x7f48ba04997a imm:0
OZGURIMM Stack uop at pc 0x7f48ba04997b imm:0
OZGURIMM0 if signed at pc 0x7f48ba04997c imm:10
OZGURIMM case RELLBR at pc 0x7f48ba049983 imm:0
OZGURIMM0 if not signed at pc 0x7f48ba04998c imm:5
OZGURIMM0 if not signed at pc 0x7f48ba049991 imm:2
OZGURIMM0 if signed at pc 0x7f48ba049998 imm:3
OZGURDCODE@PC at IP 0x7f48ba04999b disp:3
OZGURIMM0 if signed at pc 0x7f48ba04999f imm:5
OZGURIMM case RELLBR at pc 0x7f48ba0499aa imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049b02 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0499b5 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0499b7 imm:1
OZGURIMM0 if signed at pc 0x7f48ba0499bb imm:0
OZGURIMM0 if not signed at pc 0x7f48ba0499c1 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0499c6 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0499c8 imm:3
OZGURDCODE@PC at IP 0x7f48ba0499cc disp:4
OZGURIMM0 if signed at pc 0x7f48ba0499cc imm:1
OZGURIMM0 if not signed at pc 0x7f48ba0499d3 imm:2
OZGURIMM case RELLBR at pc 0x7f48ba0499d8 imm:0
OZGURDCODE@PC at IP 0x7f48ba0499da disp:8
OZGURIMM0 if signed at pc 0x7f48ba0499da imm:2
OZGURIMM0 if not signed at pc 0x7f48ba0499e1 imm:3
OZGURDCODE@PC at IP 0x7f48ba0499e6 disp:1
OZGURDCODE@PC at IP 0x7f48ba0499ea disp:8
OZGURDCODE@PC at IP 0x7f48ba0499f5 disp:8
OZGURDCODE@PC at IP 0x7f48ba0499fb disp:8
OZGURDECODE@PC at IP 0x7f48ba049a03 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a07 disp:8
OZGURDCODE@PC at IP 0x7f48ba049a0c disp:54c
OZGURIMM0 if not signed at pc 0x7f48ba049a14 imm:2
OZGURDCODE@PC at IP 0x7f48ba049a1a disp:54e
OZGURDECODE@PC at IP 0x7f48ba049a22 scale:1
OZGURDCODE@PC at IP 0x7f48ba049a22 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049a50 imm:fffffffffffffffc
OZGURDECODE@PC at IP 0x7f48ba049a57 scale:1
OZGURIMM case RELLBR at pc 0x7f48ba049a5b imm:0
OZGURDCODE@PC at IP 0x7f48ba049a5d disp:1
OZGURDECODE@PC at IP 0x7f48ba049a61 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049a67 imm:0
OZGURDECODE@PC at IP 0x7f48ba049a69 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a6c disp:2
OZGURIMM case RELLBR at pc 0x7f48ba049a73 imm:0
OZGURDECODE@PC at IP 0x7f48ba049a75 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a78 disp:3
OZGURIMM case RELLBR at pc 0x7f48ba049a7f imm:0
OZGURDECODE@PC at IP 0x7f48ba049a81 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a84 disp:4
OZGURIMM case RELLBR at pc 0x7f48ba049a8b imm:0
OZGURIMM0 if signed at pc 0x7f48ba049a8d imm:5
OZGURDECODE@PC at IP 0x7f48ba049a91 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049a97 imm:0
OZGURDECODE@PC at IP 0x7f48ba049a99 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049a9f imm:0
OZGURIMM0 if not signed at pc 0x7f48ba049aa9 imm:7fffffff
OZGURIMM0 if signed at pc 0x7f48ba049aee imm:10
OZGURIMM Stack uop at pc 0x7f48ba049af2 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af4 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af6 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af8 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049afa imm:0
[INFO]Routine::constructLoops(): 'init_shuffle'
simpleAddBlock
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'init_shuffle'
In SchedDG constructor for routine init_shuffle, pathId 0x970/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'init_shuffle'
OZGURIMM Stack uop at pc 0x7f48ba049970 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049972 imm:0
OZGURDCODE@PC at IP 0x7f48ba049974 disp:ffffffffffffffff
OZGURIMM Stack uop at pc 0x7f48ba049978 imm:0
OZGURIMM Stack uop at pc 0x7f48ba04997a imm:0
OZGURIMM Stack uop at pc 0x7f48ba04997b imm:0
OZGURIMM0 if signed at pc 0x7f48ba04997c imm:10
OZGURIMM case RELLBR at pc 0x7f48ba049983 imm:0
OZGURIMM0 if not signed at pc 0x7f48ba04998c imm:5
OZGURIMM0 if not signed at pc 0x7f48ba049991 imm:2
OZGURIMM0 if signed at pc 0x7f48ba049998 imm:3
OZGURDCODE@PC at IP 0x7f48ba04999b disp:3
OZGURIMM0 if signed at pc 0x7f48ba04999f imm:5
OZGURIMM case RELLBR at pc 0x7f48ba0499aa imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049b02 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba0499b5 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0499b7 imm:1
OZGURIMM0 if signed at pc 0x7f48ba0499bb imm:0
OZGURIMM0 if not signed at pc 0x7f48ba0499c1 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba0499c6 imm:0
OZGURIMM0 if signed at pc 0x7f48ba0499c8 imm:3
OZGURDCODE@PC at IP 0x7f48ba0499cc disp:4
OZGURIMM0 if signed at pc 0x7f48ba0499cc imm:1
OZGURIMM0 if not signed at pc 0x7f48ba0499d3 imm:2
OZGURIMM case RELLBR at pc 0x7f48ba0499d8 imm:0
OZGURDCODE@PC at IP 0x7f48ba0499da disp:8
OZGURIMM0 if signed at pc 0x7f48ba0499da imm:2
OZGURIMM0 if not signed at pc 0x7f48ba0499e1 imm:3
OZGURDCODE@PC at IP 0x7f48ba0499e6 disp:1
OZGURDCODE@PC at IP 0x7f48ba0499ea disp:8
OZGURDCODE@PC at IP 0x7f48ba0499f5 disp:8
OZGURDCODE@PC at IP 0x7f48ba0499fb disp:8
OZGURDECODE@PC at IP 0x7f48ba049a03 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a07 disp:8
OZGURDCODE@PC at IP 0x7f48ba049a0c disp:54c
OZGURIMM0 if not signed at pc 0x7f48ba049a14 imm:2
OZGURDCODE@PC at IP 0x7f48ba049a1a disp:54e
OZGURDECODE@PC at IP 0x7f48ba049a22 scale:1
OZGURDCODE@PC at IP 0x7f48ba049a22 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049a34 imm:1
OZGURIMM0 if signed at pc 0x7f48ba049a38 imm:10
OZGURIMM0 if not signed at pc 0x7f48ba049a40 imm:88
OZGURDCODE@PC at IP 0x7f48ba049a44 disp:fffffffffffffff0
OZGURIMM case RELLBR at pc 0x7f48ba049a4b imm:0
OZGURIMM0 if signed at pc 0x7f48ba049a50 imm:fffffffffffffffc
OZGURDECODE@PC at IP 0x7f48ba049a57 scale:1
OZGURIMM case RELLBR at pc 0x7f48ba049a5b imm:0
OZGURDCODE@PC at IP 0x7f48ba049a5d disp:1
OZGURDECODE@PC at IP 0x7f48ba049a61 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049a67 imm:0
OZGURDECODE@PC at IP 0x7f48ba049a69 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a6c disp:2
OZGURIMM case RELLBR at pc 0x7f48ba049a73 imm:0
OZGURDECODE@PC at IP 0x7f48ba049a75 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a78 disp:3
OZGURIMM case RELLBR at pc 0x7f48ba049a7f imm:0
OZGURDECODE@PC at IP 0x7f48ba049a81 scale:4
OZGURDCODE@PC at IP 0x7f48ba049a84 disp:4
OZGURIMM case RELLBR at pc 0x7f48ba049a8b imm:0
OZGURIMM0 if signed at pc 0x7f48ba049a8d imm:5
OZGURDECODE@PC at IP 0x7f48ba049a91 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049a97 imm:0
OZGURDECODE@PC at IP 0x7f48ba049a99 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049a9f imm:0
OZGURIMM0 if not signed at pc 0x7f48ba049aa9 imm:7fffffff
OZGURIMM case RELLBR at pc 0x7f48ba049ab0 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ab0 imm:0
OZGURDCODE@PC at IP 0x7f48ba049ac8 disp:1
OZGURDECODE@PC at IP 0x7f48ba049acf scale:4
OZGURDECODE@PC at IP 0x7f48ba049ad9 scale:4
OZGURDECODE@PC at IP 0x7f48ba049ae1 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049ae5 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049aec imm:0
OZGURIMM0 if signed at pc 0x7f48ba049aee imm:10
OZGURIMM Stack uop at pc 0x7f48ba049af2 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af3 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af4 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af6 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049af8 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049afa imm:0
Sniper Routine: init_shuffle StartAddr:970
OZGURDBGX3 #Blocks: 23
	Block[0] 's startAddres: 970 endAddress:  989
		instruction addres:970
		instruction addres:972
		instruction addres:974
		instruction addres:978
		instruction addres:97a
		instruction addres:97b
		instruction addres:97c
		instruction addres:980
		instruction addres:983
970-0
972-0
974-0
978-0
97a-0
97b-0
97c-0
980-0
983-0

	Block[1] 's startAddres: 989 endAddress:  9b0
		instruction addres:989
		instruction addres:98c
		instruction addres:991
		instruction addres:995
		instruction addres:998
		instruction addres:99b
		instruction addres:99f
		instruction addres:9a3
		instruction addres:9a7
		instruction addres:9aa
989-0
98c-0
991-0
995-0
998-0
99b-0
99f-0
9a3-0
9a7-0
9aa-0

	Block[2] 's startAddres: b00 endAddress:  b07
		instruction addres:b00
		instruction addres:b02
b00-0
b02-0

	Block[3] 's startAddres: 9b0 endAddress:  9b7
		instruction addres:9b0
		instruction addres:9b2
		instruction addres:9b5
9b0-0
9b2-0
9b5-0

	Block[4] 's startAddres: 9b7 endAddress:  9c8
		instruction addres:9b7
		instruction addres:9bb
		instruction addres:9c1
		instruction addres:9c6
9b7-0
9bb-0
9c1-0
9c6-0

	Block[5] 's startAddres: 9c8 endAddress:  9da
		instruction addres:9c8
		instruction addres:9cc
		instruction addres:9d3
		instruction addres:9d8
9c8-0
9cc-0
9d3-0
9d8-0

	Block[6] 's startAddres: 9da endAddress:  9e6
		instruction addres:9da
		instruction addres:9e1
9da-0
9e1-0

	Block[7] 's startAddres: 9e6 endAddress:  a28
		instruction addres:9e6
		instruction addres:9ea
		instruction addres:9ef
		instruction addres:9f2
		instruction addres:9f5
		instruction addres:9fb
		instruction addres:a00
		instruction addres:a03
		instruction addres:a07
		instruction addres:a0c
		instruction addres:a14
		instruction addres:a18
		instruction addres:a1a
		instruction addres:a22
9e6-0
9ea-0
9ef-0
9f2-0
9f5-0
9fb-0
a00-0
a03-0
a07-0
a0c-0
a14-0
a18-0
a1a-0
a22-0

	Block[8] 's startAddres: a28 endAddress:  a4d
		instruction addres:a28
		instruction addres:a2c
		instruction addres:a30
		instruction addres:a34
		instruction addres:a38
		instruction addres:a3c
		instruction addres:a40
		instruction addres:a44
		instruction addres:a48
		instruction addres:a4b
a28-0
a2c-0
a30-0
a34-0
a38-0
a3c-0
a40-0
a44-0
a48-0
a4b-0

	Block[9] 's startAddres: a4d endAddress:  a5d
		instruction addres:a4d
		instruction addres:a50
		instruction addres:a54
		instruction addres:a57
		instruction addres:a5b
a4d-0
a50-0
a54-0
a57-0
a5b-0

	Block[10] 's startAddres: a5d endAddress:  a69
		instruction addres:a5d
		instruction addres:a61
		instruction addres:a64
		instruction addres:a67
a5d-0
a61-0
a64-0
a67-0

	Block[11] 's startAddres: a69 endAddress:  a75
		instruction addres:a69
		instruction addres:a6c
		instruction addres:a70
		instruction addres:a73
a69-0
a6c-0
a70-0
a73-0

	Block[12] 's startAddres: a75 endAddress:  a81
		instruction addres:a75
		instruction addres:a78
		instruction addres:a7c
		instruction addres:a7f
a75-0
a78-0
a7c-0
a7f-0

	Block[13] 's startAddres: a81 endAddress:  a8d
		instruction addres:a81
		instruction addres:a84
		instruction addres:a88
		instruction addres:a8b
a81-0
a84-0
a88-0
a8b-0

	Block[14] 's startAddres: a8d endAddress:  a99
		instruction addres:a8d
		instruction addres:a91
		instruction addres:a94
		instruction addres:a97
a8d-0
a91-0
a94-0
a97-0

	Block[15] 's startAddres: a99 endAddress:  a9c
		instruction addres:a99
a99-0

	Block[16] 's startAddres: a9c endAddress:  aa1
		instruction addres:a9c
		instruction addres:a9f
a9c-0
a9f-0

	Block[17] 's startAddres: aa1 endAddress:  ab0
		instruction addres:aa1
		instruction addres:aa4
		instruction addres:aa7
		instruction addres:aa9
		instruction addres:aaf
aa1-0
aa4-0
aa7-0
aa9-0
aaf-0

	Block[18] 's startAddres: ab0 endAddress:  ab5
		instruction addres:ab0
ab0-0

	Block[19] 's startAddres: ab5 endAddress:  ab5

	Block[20] 's startAddres: ab5 endAddress:  aee
		instruction addres:ab5
		instruction addres:ab8
		instruction addres:abb
		instruction addres:abd
		instruction addres:ac0
		instruction addres:ac3
		instruction addres:ac6
		instruction addres:ac8
		instruction addres:acc
		instruction addres:acf
		instruction addres:ad3
		instruction addres:ad6
		instruction addres:ad9
		instruction addres:add
		instruction addres:adf
		instruction addres:ae1
		instruction addres:ae5
		instruction addres:ae9
		instruction addres:aec
ab5-0
ab8-0
abb-0
abd-0
ac0-0
ac3-0
ac6-0
ac8-0
acc-0
acf-0
ad3-0
ad6-0
ad9-0
add-0
adf-0
ae1-0
ae5-0
ae9-0
aec-0

	Block[21] 's startAddres: aee endAddress:  afb
		instruction addres:aee
		instruction addres:af2
		instruction addres:af3
		instruction addres:af4
		instruction addres:af6
		instruction addres:af8
		instruction addres:afa
aee-0
af2-0
af3-0
af4-0
af6-0
af8-0
afa-0

	Block[22] 's startAddres: 0 endAddress:  0
Node Ox9f5 is Frame
Node Oxa07 is Frame
Node Oxaf2 is Frame
Node Oxaf3 is Frame
Node Oxaf4 is Frame
Node Oxaf6 is Frame
Node Oxaf8 is Frame
Node Oxafa is Frame
988
	970-0
	972-0
	974-0
	978-0
	97a-0
	97b-0
	97c-0
	980-0
	983-0
9af
	989-0
	98c-0
	991-0
	995-0
	998-0
	99b-0
	99f-0
	9a3-0
	9a7-0
	9aa-0
9b6
	9b0-0
	9b2-0
	9b5-0
9c7
	9b7-0
	9bb-0
	9c1-0
	9c6-0
9d9
	9c8-0
	9cc-0
	9d3-0
	9d8-0
9e5
	9da-0
	9e1-0
a27
	9e6-0
	9ea-0
	9ef-0
	9f2-0
	9f5-1
	9fb-0
	a00-0
	a03-0
	a07-1
	a0c-0
	a14-0
	a18-0
	a1a-0
	a22-0
a4c
	a28-0
	a2c-0
	a30-0
	a34-0
	a38-0
	a3c-0
	a40-0
	a44-0
	a48-0
	a4b-0
a5c
	a4d-0
	a50-0
	a54-0
	a57-0
	a5b-0
a68
	a5d-0
	a61-0
	a64-0
	a67-0
a74
	a69-0
	a6c-0
	a70-0
	a73-0
a80
	a75-0
	a78-0
	a7c-0
	a7f-0
a8c
	a81-0
	a84-0
	a88-0
	a8b-0
a98
	a8d-0
	a91-0
	a94-0
	a97-0
a9b
	a99-0
aa0
	a9c-0
	a9f-0
aaf
	aa1-0
	aa4-0
	aa7-0
	aa9-0
	aaf-0
ab4
	ab0-0
aed
	ab5-0
	ab8-0
	abb-0
	abd-0
	ac0-0
	ac3-0
	ac6-0
	ac8-0
	acc-0
	acf-0
	ad3-0
	ad6-0
	ad9-0
	add-0
	adf-0
	ae1-0
	ae5-0
	ae9-0
	aec-0
afa
	aee-0
	af2-1
	af3-1
	af4-1
	af6-1
	af8-1
	afa-1
b06
	b00-0
	b02-0
ffffffffffffffff
Address	type	class
Node 7 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=974, type=21
974: LEA l80[0:63] --> r87[0:63] 
 <-- (135, 110, 1, 101)
 --> (16 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 25 [{ 26 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 92 [{ 139 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x974 try:0
Node 6 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=972, type=3
972: Store r87[0:63] a78[0:63] --> 
 <-- (5, 129)
 --> (16 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 129 [{ 209 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba049972 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x972 try:0
Node 5 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=972, type=20
972: Add r78[0:63] --> r78[0:63] 
 <-- (3)
 --> (6 [{ 3 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 8 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x972 try:0
Node 4 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=970, type=3
970: Store r88[0:63] a78[0:63] --> 
 <-- (3, 131)
 --> (16 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 131 [{ 212 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049970 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x970 try:0
Node 3 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=970, type=20
970: Add r78[0:63] --> r78[0:63] 
 <-- (135, 134, 1, 101)
 --> (4 [{ 1 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x970 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- (121, 135)
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
 --> (7 [{ 261 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 262 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 263 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 17 [{ 264 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 265 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 51 [{ 266 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 54 [{ 267 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 55 [{ 268 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 94 [{ 269 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 95 [{ 270 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 96 [{ 271 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 97 [{ 272 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 98 [{ 273 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 33 [{ 276 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 34 [{ 277 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 37 [{ 278 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 38 [{ 279 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 40 [{ 280 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 41 [{ 281 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 44 [{ 282 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=978, type=20
978: Add r78[0:63] --> r78[0:63] 
 <-- (5)
 --> (9 [{ 5 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x978 try:0
Node 9 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=978, type=3
978: Store r86[0:63] a78[0:63] --> 
 <-- (8, 127)
 --> (16 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 127 [{ 206 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -24 den: 1 HAHAHA Before num: -24 den: 1 After num: -24 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x18 +
consten Term of Formula is: -24
Decoded Instruction PC:7f48ba049978 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0x978 try:0
Node 10 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=97a, type=20
97a: Add r78[0:63] --> r78[0:63] 
 <-- (8)
 --> (11 [{ 7 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x97a try:0
Node 11 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=97a, type=3
97a: Store r79[0:63] a78[0:63] --> 
 <-- (10, 125)
 --> (16 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 125 [{ 203 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -32 den: 1 HAHAHA Before num: -32 den: 1 After num: -32 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x20 +
consten Term of Formula is: -32
Decoded Instruction PC:7f48ba04997a Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x97a try:0
Node 12 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=97b, type=20
97b: Add r78[0:63] --> r78[0:63] 
 <-- (10)
 --> (13 [{ 9 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x97b try:0
Node 13 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=97b, type=3
97b: Store r77[0:63] a78[0:63] --> 
 <-- (12, 123)
 --> (16 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 123 [{ 200 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -40 den: 1 HAHAHA Before num: -40 den: 1 After num: -40 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x28 +
consten Term of Formula is: -40
Decoded Instruction PC:7f48ba04997b Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0x97b try:0
Node 14 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=97c, type=23
97c: Sub r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (12)
 --> (16 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 43 [{ 50 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 46 [{ 54 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 47 [{ 56 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 50 [{ 61 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 99 [{ 143 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x97c try:0
Node 15 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=980, type=29
980: LogicalOp r80[0:63] r80[0:63] --> r41[0:63] 
 <-- (135, 110, 1, 101)
 --> (16 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x980 try:0
Node 16 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=983, type=8
983: CondBranch r41[0:63] --> 
 <-- (15, 7, 6, 4, 9, 11, 13, 14)
 --> (101 [{ 152 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x983 try:0
Node 17 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=989, type=13
989: Copy r81[0:63] --> r74[0:63] 
 <-- (135, 1, 101)
 --> (19 [{ 19 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x989 try:0
Node 18 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=98c, type=13
98c: Copy --> r75[0:31] 
 <-- (135, 1, 101)
 --> (24 [{ 24 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 29 [{ 32 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x98c try:0
Node 19 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=991, type=30
991: Shift r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (17)
 --> (20 [{ 20 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x991 try:0
Node 46 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 46, pc=9f5, type=2
9f5: Load a78[0:63] --> r216[0:127] 
 <-- (43, 14)
 --> (56 [{ 65 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 57 [{ 67 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 58 [{ 69 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -48 den: 1 HAHAHA Before num: -48 den: 1 After num: -48 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x30 +
consten Term of Formula is: -48
Decoded Instruction PC:7f48ba0499f5 Reloc:7f48ba049000 len:6 disp:8 scale:1
OZGURDBG::instrumenting node:0x9f5 try:0
Node 47 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 47, pc=9fb, type=3
9fb: Store r76[0:63] a78[0:63] --> 
 <-- (42, 14)
 --> (50 [{ 60 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -48 den: 1 HAHAHA Before num: -48 den: 1 After num: -48 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x30 +
consten Term of Formula is: -48
Decoded Instruction PC:7f48ba0499fb Reloc:7f48ba049000 len:5 disp:8 scale:1
OZGURDBG::instrumenting node:0x9fb try:0
Node 48 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 48, pc=a00, type=13
a00: Copy r83[0:63] --> r82[0:63] 
 <-- (45)
 --> (52 [{ 62 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa00 try:0
Node 49 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 49, pc=a03, type=21
a03: LEA l81[0:63] l74[0:63] --> r76[0:63] 
 <-- (27, 39)
 --> (60 [{ 73 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa03 try:0
Node 50 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 50, pc=a07, type=2
a07: Load a78[0:63] --> r216[64:127] 
 <-- (47, 14)
 --> (56 [{ 66 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 57 [{ 68 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 58 [{ 70 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -48 den: 1 HAHAHA Before num: -48 den: 1 After num: -48 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x30 +
consten Term of Formula is: -48
Decoded Instruction PC:7f48ba049a07 Reloc:7f48ba049000 len:5 disp:8 scale:1
OZGURDBG::instrumenting node:0xa07 try:0
Node 51 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 51, pc=a0c, type=2
a0c: Load --> r219[0:127] 
 <-- (135, 1, 101)
 --> (58 [{ 71 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 3936 den: 1 HAHAHA Before num: 3936 den: 1 After num: 3936 den: 1
ref->base:  0xf60 +
consten Term of Formula is: 3936
Decoded Instruction PC:7f48ba049a0c Reloc:7f48ba049000 len:8 disp:54c scale:1
OZGURDBG::instrumenting node:0xa0c try:0
a0c	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 52 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 52, pc=a14, type=30
a14: Shift r82[0:63] --> r82[0:63] r41[0:63] 
 <-- (48)
 --> (64 [{ 81 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa14 try:0
Node 53 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 53, pc=a18, type=28
a18: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (27, 39)
 --> (59 [{ 72 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa18 try:0
Node 54 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 54, pc=a1a, type=2
a1a: Load --> r218[0:127] 
 <-- (135, 1, 101)
 --> (61 [{ 75 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 3952 den: 1 HAHAHA Before num: 3952 den: 1 After num: 3952 den: 1
ref->base:  0xf70 +
consten Term of Formula is: 3952
Decoded Instruction PC:7f48ba049a1a Reloc:7f48ba049000 len:8 disp:54e scale:1
OZGURDBG::instrumenting node:0xa1a try:0
a1a	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 55 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 55, pc=a22, type=31
a22: NOP --> 
 <-- (135, 1, 101)
 --> (65 [{ 83 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa22 try:0
Node 56 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 56, pc=a28, type=13
a28: Copy r216[0:127] --> r217[0:127] 
 <-- (46, 50)
 --> (61 [{ 74 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa28 try:0
Node 57 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 57, pc=a2c, type=13
a2c: Copy r216[0:127] --> r220[0:127] 
 <-- (46, 50)
 --> (62 [{ 76 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa2c try:0
Node 58 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 58, pc=a30, type=20
a30: Add r216[0:127] r219[0:127] --> r216[0:127] 
 <-- (46, 50, 51)
 --> (65 [{ 84 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa30 try:0
Node 59 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 59, pc=a34, type=20
a34: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (53)
 --> (64 [{ 80 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa34 try:0
Node 60 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 60, pc=a38, type=20
a38: Add r76[0:63] --> r76[0:63] r41[0:63] 
 <-- (49)
 --> (63 [{ 79 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa38 try:0
Node 61 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 61, pc=a3c, type=20
a3c: Add r217[0:127] r218[0:127] --> r217[0:127] 
 <-- (56, 54)
 --> (62 [{ 77 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa3c try:0
Node 62 of type Shuffle, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 62, pc=a40, type=16
a40: Shuffle r220[0:127] r217[0:127] --> r220[0:127] 
 <-- (57, 61)
 --> (63 [{ 78 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa40 try:0
Node 63 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 63, pc=a44, type=3
a44: Store r220[0:127] a76[0:63] --> 
 <-- (62, 60)
 --> (65 [{ 85 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA Before num: 4 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{LEAOp}[0,63](0x970,0) + 0x4 Reg_RAX/0{RegOp}[0,31](0x998,4) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049a44 Reloc:7f48ba049000 len:4 disp:fffffffffffffff0 scale:1
OZGURDBG::instrumenting node:0xa44 try:0
Node 64 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 64, pc=a48, type=19
a48: Cmp r74[0:63] r82[0:63] --> r41[0:63] 
 <-- (59, 52)
 --> (65 [{ 82 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa48 try:0
Node 65 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 65, pc=a4b, type=8
a4b: CondBranch r41[0:63] --> 
 <-- (64, 55, 58, 63, 40)
 --> (66 [{ 88 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 153 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa4b try:0
Node 66 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 66, pc=a4d, type=13
a4d: Copy r83[0:63] --> r76[0:63] 
 <-- (45, 65)
 --> (67 [{ 89 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa4d try:0
Node 67 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 67, pc=a50, type=29
a50: LogicalOp r76[0:63] --> r76[0:63] r41[0:63] 
 <-- (66)
 --> (68 [{ 91 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 69 [{ 93 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa50 try:0
Node 68 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 68, pc=a54, type=19
a54: Cmp r83[0:63] r76[0:63] --> r41[0:63] 
 <-- (45, 67)
 --> (70 [{ 94 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa54 try:0
Node 69 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 69, pc=a57, type=21
a57: LEA l75[0:63] l76[0:63] --> r74[0:63] 
 <-- (41, 67)
 --> (70 [{ 95 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 71 [{ 96 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 72 [{ 98 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 72 [{ 99 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 76 [{ 107 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 80 [{ 115 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 84 [{ 123 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 87 [{ 128 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa57 try:0
Node 70 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 70, pc=a5b, type=8
a5b: CondBranch r41[0:63] --> 
 <-- (68, 69)
 --> (71 [{ 97 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 72 [{ 100 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 154 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa5b try:0
Node 71 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 71, pc=a5d, type=21
a5d: LEA l74[0:63] --> r76[0:63] 
 <-- (69, 70)
 --> (73 [{ 101 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 75 [{ 104 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 75 [{ 105 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa5d try:0
Node 72 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 72, pc=a61, type=3
a61: Store r74[0:31] a81[0:63] a74[0:63] --> 
 <-- (69, 69, 70)
 --> (74 [{ 103 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 12 den: 1 HAHAHA Before num: 12 den: 1 After num: 12 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0x970,0) + 0x4 Reg_RDX/0{RegOp}[0,63](0xa50,1) + 0xc +
consten Term of Formula is: 12
Decoded Instruction PC:7f48ba049a61 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xa61 try:0
Node 73 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 73, pc=a64, type=19
a64: Cmp r76[0:63] r80[0:63] --> r41[0:63] 
 <-- (71, 110)
 --> (74 [{ 102 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa64 try:0
Node 74 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 74, pc=a67, type=8
a67: CondBranch r41[0:63] --> 
 <-- (73, 72)
 --> (75 [{ 106 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 76 [{ 108 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 155 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa67 try:0
Node 75 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 75, pc=a69, type=3
a69: Store r76[0:31] a81[0:63] a76[0:63] --> 
 <-- (71, 71, 74)
 --> (78 [{ 111 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 16 den: 1 HAHAHA Before num: 16 den: 1 After num: 16 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0x970,0) + 0x4 Reg_RDX/0{RegOp}[0,63](0xa50,1) + 0x10 +
consten Term of Formula is: 16
Decoded Instruction PC:7f48ba049a69 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xa69 try:0
Node 76 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 76, pc=a6c, type=21
a6c: LEA l74[0:63] --> r76[0:63] 
 <-- (69, 74)
 --> (77 [{ 109 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 79 [{ 112 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 79 [{ 113 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa6c try:0
Node 77 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 77, pc=a70, type=19
a70: Cmp r80[0:63] r76[0:63] --> r41[0:63] 
 <-- (76, 110)
 --> (78 [{ 110 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa70 try:0
Node 78 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 78, pc=a73, type=8
a73: CondBranch r41[0:63] --> 
 <-- (77, 75)
 --> (79 [{ 114 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 80 [{ 116 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 156 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa73 try:0
Node 79 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 79, pc=a75, type=3
a75: Store r76[0:31] a81[0:63] a76[0:63] --> 
 <-- (76, 76, 78)
 --> (82 [{ 119 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 20 den: 1 HAHAHA Before num: 20 den: 1 After num: 20 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0x970,0) + 0x4 Reg_RDX/0{RegOp}[0,63](0xa50,1) + 0x14 +
consten Term of Formula is: 20
Decoded Instruction PC:7f48ba049a75 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xa75 try:0
Node 80 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 80, pc=a78, type=21
a78: LEA l74[0:63] --> r76[0:63] 
 <-- (69, 78)
 --> (81 [{ 117 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 83 [{ 120 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 83 [{ 121 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa78 try:0
Node 81 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 81, pc=a7c, type=19
a7c: Cmp r80[0:63] r76[0:63] --> r41[0:63] 
 <-- (80, 110)
 --> (82 [{ 118 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa7c try:0
Node 82 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 82, pc=a7f, type=8
a7f: CondBranch r41[0:63] --> 
 <-- (81, 79)
 --> (83 [{ 122 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 84 [{ 124 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 157 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa7f try:0
Node 83 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 83, pc=a81, type=3
a81: Store r76[0:31] a81[0:63] a76[0:63] --> 
 <-- (80, 80, 82)
 --> (86 [{ 127 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 24 den: 1 HAHAHA Before num: 24 den: 1 After num: 24 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0x970,0) + 0x4 Reg_RDX/0{RegOp}[0,63](0xa50,1) + 0x18 +
consten Term of Formula is: 24
Decoded Instruction PC:7f48ba049a81 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xa81 try:0
Node 84 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 84, pc=a84, type=21
a84: LEA l74[0:63] --> r76[0:63] 
 <-- (69, 82)
 --> (85 [{ 125 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 88 [{ 130 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 88 [{ 131 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa84 try:0
Node 85 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 85, pc=a88, type=19
a88: Cmp r80[0:63] r76[0:63] --> r41[0:63] 
 <-- (84, 110)
 --> (86 [{ 126 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa88 try:0
Node 86 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 86, pc=a8b, type=8
a8b: CondBranch r41[0:63] --> 
 <-- (85, 83)
 --> (87 [{ 129 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 88 [{ 132 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 158 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa8b try:0
Node 87 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 87, pc=a8d, type=20
a8d: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (69, 86)
 --> (89 [{ 133 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 91 [{ 136 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 91 [{ 137 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa8d try:0
Node 88 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 88, pc=a91, type=3
a91: Store r76[0:31] a81[0:63] a76[0:63] --> 
 <-- (84, 84, 86)
 --> (90 [{ 135 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 28 den: 1 HAHAHA Before num: 28 den: 1 After num: 28 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0x970,0) + 0x4 Reg_RDX/0{RegOp}[0,63](0xa50,1) + 0x1c +
consten Term of Formula is: 28
Decoded Instruction PC:7f48ba049a91 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xa91 try:0
Node 89 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 89, pc=a94, type=19
a94: Cmp r80[0:63] r74[0:63] --> r41[0:63] 
 <-- (87, 110)
 --> (90 [{ 134 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa94 try:0
Node 90 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 90, pc=a97, type=8
a97: CondBranch r41[0:63] --> 
 <-- (89, 88)
 --> (91 [{ 138 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 92 [{ 140 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 159 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa97 try:0
Node 91 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 91, pc=a99, type=3
a99: Store r74[0:31] a81[0:63] a74[0:63] --> 
 <-- (87, 87, 90)
 --> (93 [{ 142 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 32 den: 1 HAHAHA Before num: 32 den: 1 After num: 32 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0x970,0) + 0x4 Reg_RDX/0{RegOp}[0,63](0xa50,1) + 0x20 +
consten Term of Formula is: 32
Decoded Instruction PC:7f48ba049a99 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xa99 try:0
Node 92 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 92, pc=a9c, type=29
a9c: LogicalOp r87[0:63] r87[0:63] --> r41[0:63] 
 <-- (7, 90)
 --> (93 [{ 141 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa9c try:0
Node 93 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 93, pc=a9f, type=8
a9f: CondBranch r41[0:63] --> 
 <-- (92, 91)
 --> (99 [{ 144 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 160 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xa9f try:0
Node 94 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 94, pc=aa1, type=13
aa1: Copy r80[0:63] --> r79[0:63] 
 <-- (135, 110, 1, 101)
 --> (101 [{ 146 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaa1 try:0
Node 95 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 95, pc=aa4, type=13
aa4: Copy r81[0:63] --> r88[0:63] 
 <-- (135, 1, 101)
 --> (101 [{ 147 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaa4 try:0
Node 96 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 96, pc=aa7, type=28
aa7: Xor r77[0:31] r77[0:31] --> r77[0:31] r41[0:31] 
 <-- (135, 123, 1, 101)
 --> (101 [{ 148 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaa7 try:0
Node 97 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 97, pc=aa9, type=13
aa9: Copy --> r86[0:31] 
 <-- (135, 1, 101)
 --> (101 [{ 149 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaa9 try:0
Node 98 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 98, pc=aaf, type=31
aaf: NOP --> 
 <-- (135, 1, 101)
 --> (101 [{ 150 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaaf try:0
Node 99 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 99, pc=ab0, type=20
ab0: Add r78[0:63] --> r78[0:63] 
 <-- (14, 93)
 --> (100 [{ 145 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xab0 try:0
Node 100 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 100, pc=ab0, type=3
ab0: Store a78[0:63] --> 
 <-- (99)
 --> (101 [{ 151 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -64 den: 1 HAHAHA Before num: -64 den: 1 After num: -64 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x40 +
consten Term of Formula is: -64
Decoded Instruction PC:7f48ba049ab0 Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0xab0 try:0
Node 101 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 101, pc=ab0, type=9
ab0: Jump --> 
 <-- (94, 95, 96, 97, 98, 100, 16, 65, 70, 74, 78, 82, 86, 90, 93, 26, 28, 31, 35, 39, 121, 135)
 --> (102 [{ 166 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 103 [{ 167 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 104 [{ 168 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 105 [{ 169 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 107 [{ 171 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 112 [{ 178 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 119 [{ 191 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 122 [{ 199 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 135 [{ 217 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 285 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 286 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 287 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 17 [{ 288 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 18 [{ 289 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 51 [{ 290 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 54 [{ 291 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 55 [{ 292 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 94 [{ 293 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 95 [{ 294 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 96 [{ 295 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 97 [{ 296 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 98 [{ 297 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 33 [{ 298 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 34 [{ 299 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 37 [{ 300 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 38 [{ 301 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 40 [{ 302 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 41 [{ 303 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 44 [{ 304 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xab0 try:0
Node 102 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 102, pc=ab0, type=20
ab0: Add r78[0:63] --> r78[0:63] 
 <-- (101)
 --> (121 [{ 194 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 122 [{ 197 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xab0 try:0
Node 103 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 103, pc=ab5, type=13
ab5: Copy r79[0:63] --> r80[0:63] 
 <-- (101)
 --> (106 [{ 170 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xab5 try:0
Node 104 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 104, pc=ab8, type=13
ab8: Copy r74[0:63] --> r75[0:63] 
 <-- (101)
 --> (111 [{ 177 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xab8 try:0
Node 105 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 105, pc=abb, type=28
abb: Xor r76[0:31] r76[0:31] --> r76[0:31] r41[0:31] 
 <-- (101)
 --> (108 [{ 173 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xabb try:0
Node 106 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 106, pc=abd, type=23
abd: Sub r80[0:63] r77[0:63] --> r80[0:63] r41[0:63] 
 <-- (103)
 --> (108 [{ 174 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xabd try:0
Node 107 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 107, pc=ac0, type=13
ac0: Copy r86[0:63] --> r74[0:63] 
 <-- (101)
 --> (108 [{ 172 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xac0 try:0
Node 108 of type Div, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 108, pc=ac3, type=25
ac3: Div r74[0:63] r76[0:63] r80[0:63] --> r74[0:63] r76[0:63] r41[0:63] 
 <-- (107, 105, 106)
 --> (109 [{ 175 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 110 [{ 176 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xac3 try:0
Node 109 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 109, pc=ac6, type=28
ac6: Xor r76[0:31] r76[0:31] --> r76[0:31] r41[0:31] 
 <-- (108)
 --> (113 [{ 180 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xac6 try:0
Node 110 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 110, pc=ac8, type=21
ac8: LEA l74[0:63] --> r80[0:63] 
 <-- (108)
 --> (113 [{ 181 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 248 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 252 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 44 [{ 253 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 73 [{ 254 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 77 [{ 255 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 81 [{ 256 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 85 [{ 257 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 89 [{ 258 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 94 [{ 259 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xac8 try:0
Node 111 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 111, pc=acc, type=13
acc: Copy r75[0:63] --> r74[0:63] 
 <-- (104)
 --> (113 [{ 179 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xacc try:0
Node 112 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 112, pc=acf, type=2
acf: Load a88[0:63] a77[0:63] --> r75[0:31] 
 <-- (101)
 --> (117 [{ 187 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 118 [{ 189 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0x970,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049acf Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xacf try:0
acf	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name R14 {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 88
PTW r14  @ 0x556e1d51adc0
Print Src reg info
Name RBX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 77
PTW rbx  @ 0x556e1d51adc0
Node 113 of type Div, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 113, pc=ad3, type=25
ad3: Div r74[0:63] r76[0:63] r80[0:63] --> r74[0:63] r76[0:63] r41[0:63] 
 <-- (111, 109, 110)
 --> (114 [{ 182 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xad3 try:0
Node 114 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 114, pc=ad6, type=20
ad6: Add r74[0:63] r77[0:63] --> r74[0:63] r41[0:63] 
 <-- (113)
 --> (115 [{ 183 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xad6 try:0
Node 115 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 115, pc=ad9, type=21
ad9: LEA l88[0:63] l74[0:63] --> r74[0:63] 
 <-- (114)
 --> (116 [{ 184 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 117 [{ 188 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xad9 try:0
Node 116 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 116, pc=add, type=2
add: Load a74[0:63] --> r76[0:31] 
 <-- (115, 117)
 --> (117 [{ 185 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 118 [{ 190 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA Before num: 4 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0x970,0) + 0x4 Reg_RAX/0{RegOp}[0,63](0xad3,10) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049add Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xadd try:0
add	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d51bf10
Node 117 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 117, pc=adf, type=3
adf: Store r75[0:31] a74[0:63] --> 
 <-- (116, 112, 115)
 --> (116 [{ 186 TRUE_DEPENDENCY MEMORY_TYPE LOOP_CARRIED(dist=1) Level=1 }], 121 [{ 195 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA Before num: 4 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0x970,0) + 0x4 Reg_RAX/0{RegOp}[0,63](0xad3,10) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049adf Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xadf try:0
Node 118 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 118, pc=ae1, type=3
ae1: Store r76[0:31] a88[0:63] a77[0:63] --> 
 <-- (112, 116)
 --> (121 [{ 196 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0x970,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049ae1 Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xae1 try:0
Node 119 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 119, pc=ae5, type=20
ae5: Add r77[0:63] --> r77[0:63] r41[0:63] 
 <-- (101)
 --> (120 [{ 192 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xae5 try:0
Node 120 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 120, pc=ae9, type=19
ae9: Cmp r87[0:63] r77[0:63] --> r41[0:63] 
 <-- (119)
 --> (121 [{ 193 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xae9 try:0
Node 121 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 121, pc=aec, type=8
aec: CondBranch r41[0:63] --> 
 <-- (120, 102, 117, 118)
 --> (122 [{ 198 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 2 [{ 274 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 283 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xaec try:0
Node 122 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 122, pc=aee, type=20
aee: Add r78[0:63] --> r78[0:63] r41[0:63] 
 <-- (102, 121, 101)
 --> (123 [{ 201 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 124 [{ 202 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaee try:0
Node 123 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 123, pc=af2, type=2
af2: Load a78[0:63] --> r77[0:63] 
 <-- (13, 122)
 --> (135 [{ 218 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 251 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 96 [{ 260 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -40 den: 1 HAHAHA Before num: -40 den: 1 After num: -40 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x28 +
consten Term of Formula is: -40
Decoded Instruction PC:7f48ba049af2 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xaf2 try:0
Node 124 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 124, pc=af2, type=20
af2: Add r78[0:63] --> r78[0:63] 
 <-- (122)
 --> (125 [{ 204 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 126 [{ 205 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaf2 try:0
Node 125 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 125, pc=af3, type=2
af3: Load a78[0:63] --> r79[0:63] 
 <-- (11, 124)
 --> (135 [{ 219 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 250 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -32 den: 1 HAHAHA Before num: -32 den: 1 After num: -32 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x20 +
consten Term of Formula is: -32
Decoded Instruction PC:7f48ba049af3 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xaf3 try:0
Node 126 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 126, pc=af3, type=20
af3: Add r78[0:63] --> r78[0:63] 
 <-- (124)
 --> (127 [{ 207 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 128 [{ 208 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaf3 try:0
Node 127 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 127, pc=af4, type=2
af4: Load a78[0:63] --> r86[0:63] 
 <-- (9, 126)
 --> (135 [{ 220 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 249 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -24 den: 1 HAHAHA Before num: -24 den: 1 After num: -24 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x18 +
consten Term of Formula is: -24
Decoded Instruction PC:7f48ba049af4 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xaf4 try:0
Node 128 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 128, pc=af4, type=20
af4: Add r78[0:63] --> r78[0:63] 
 <-- (126)
 --> (129 [{ 210 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 130 [{ 211 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaf4 try:0
Node 129 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 129, pc=af6, type=2
af6: Load a78[0:63] --> r87[0:63] 
 <-- (6, 128)
 --> (135 [{ 221 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 247 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -16 den: 1 HAHAHA Before num: -16 den: 1 After num: -16 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x10 +
consten Term of Formula is: -16
Decoded Instruction PC:7f48ba049af6 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xaf6 try:0
Node 130 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 130, pc=af6, type=20
af6: Add r78[0:63] --> r78[0:63] 
 <-- (128)
 --> (131 [{ 213 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 132 [{ 214 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaf6 try:0
Node 131 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 131, pc=af8, type=2
af8: Load a78[0:63] --> r88[0:63] 
 <-- (4, 130)
 --> (135 [{ 222 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 4 [{ 246 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049af8 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xaf8 try:0
Node 132 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 132, pc=af8, type=20
af8: Add r78[0:63] --> r78[0:63] 
 <-- (130)
 --> (133 [{ 215 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 134 [{ 216 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xaf8 try:0
Node 133 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 133, pc=afa, type=2
afa: Load a78[0:63] --> 
 <-- (132)
 --> (135 [{ 223 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049afa Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xafa try:0
Node 134 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 134, pc=afa, type=20
afa: Add r78[0:63] --> r78[0:63] 
 <-- (132)
 --> (135 [{ 224 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 245 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xafa try:0
Node 135 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 135, pc=afa, type=10
afa: Return --> 
 <-- (101, 123, 125, 127, 129, 131, 133, 134)
 --> (7 [{ 225 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 226 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 227 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 17 [{ 228 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 18 [{ 229 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 51 [{ 230 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 54 [{ 231 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 55 [{ 232 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 94 [{ 233 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 95 [{ 234 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 96 [{ 235 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 97 [{ 236 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 98 [{ 237 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 33 [{ 238 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 34 [{ 239 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 37 [{ 240 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 38 [{ 241 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 40 [{ 242 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 41 [{ 243 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 44 [{ 244 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 2 [{ 275 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 284 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xafa try:0
Node 20 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 20, pc=995, type=23
995: Sub r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (19)
 --> (21 [{ 21 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x995 try:0
Node 21 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 21, pc=998, type=29
998: LogicalOp r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (20)
 --> (22 [{ 22 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 27 [{ 29 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x998 try:0
Node 22 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 22, pc=99b, type=21
99b: LEA l74[0:63] --> r76[0:63] 
 <-- (21)
 --> (23 [{ 23 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x99b try:0
Node 23 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=99f, type=19
99f: Cmp r76[0:63] --> r41[0:63] 
 <-- (22)
 --> (24 [{ 25 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x99f try:0
Node 24 of type MoveCC, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 24, pc=9a3, type=15
9a3: MoveCC r75[0:63] r41[0:63] --> r76[0:63] 
 <-- (18, 23)
 --> (25 [{ 27 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9a3 try:0
Node 25 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 25, pc=9a7, type=19
9a7: Cmp r87[0:63] r76[0:63] --> r41[0:63] 
 <-- (7, 24)
 --> (26 [{ 28 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9a7 try:0
Node 26 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 26, pc=9aa, type=8
9aa: CondBranch r41[0:63] --> 
 <-- (25)
 --> (27 [{ 30 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 161 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9aa try:0
Node 27 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 27, pc=b00, type=28
b00: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (21, 26)
 --> (28 [{ 31 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 30 [{ 34 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 32 [{ 38 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 36 [{ 43 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 45 [{ 52 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 49 [{ 58 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 53 [{ 63 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb00 try:0
Node 28 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 28, pc=b02, type=7
b02: UncondBranch --> 
 <-- (27)
 --> (29 [{ 33 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 30 [{ 35 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 162 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb02 try:0
Node 29 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 29, pc=9b0, type=28
9b0: Xor r75[0:31] r75[0:31] --> r75[0:31] r41[0:31] 
 <-- (18, 28)
 --> (31 [{ 37 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9b0 try:0
Node 30 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 30, pc=9b2, type=29
9b2: LogicalOp r74[0:63] r74[0:63] --> r41[0:63] 
 <-- (27, 28)
 --> (31 [{ 36 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9b2 try:0
Node 31 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 31, pc=9b5, type=8
9b5: CondBranch r41[0:63] --> 
 <-- (30, 29)
 --> (32 [{ 39 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 163 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9b5 try:0
Node 32 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 32, pc=9b7, type=19
9b7: Cmp r74[0:63] --> r41[0:63] 
 <-- (27, 31)
 --> (35 [{ 40 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9b7 try:0
Node 33 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 33, pc=9bb, type=3
9bb: Store a81[0:63] --> 
 <-- (135, 1, 101)
 --> (35 [{ 41 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0x970,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba0499bb Reloc:7f48ba049000 len:6 disp:0 scale:1
OZGURDBG::instrumenting node:0x9bb try:0
Node 34 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 34, pc=9c1, type=13
9c1: Copy --> r75[0:31] 
 <-- (135, 1, 101)
 --> (35 [{ 42 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9c1 try:0
Node 35 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 35, pc=9c6, type=8
9c6: CondBranch r41[0:63] --> 
 <-- (32, 33, 34)
 --> (36 [{ 44 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 164 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9c6 try:0
Node 36 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 36, pc=9c8, type=19
9c8: Cmp r74[0:63] --> r41[0:63] 
 <-- (27, 35)
 --> (39 [{ 45 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9c8 try:0
Node 37 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 37, pc=9cc, type=3
9cc: Store a81[0:63] --> 
 <-- (135, 1, 101)
 --> (39 [{ 46 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA Before num: 4 den: 1 After num: 4 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0x970,0) + 0x4 +
consten Term of Formula is: 4
Decoded Instruction PC:7f48ba0499cc Reloc:7f48ba049000 len:7 disp:4 scale:1
OZGURDBG::instrumenting node:0x9cc try:0
Node 38 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 38, pc=9d3, type=13
9d3: Copy --> r75[0:31] 
 <-- (135, 1, 101)
 --> (39 [{ 47 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9d3 try:0
Node 39 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 39, pc=9d8, type=8
9d8: CondBranch r41[0:63] --> 
 <-- (36, 37, 38)
 --> (49 [{ 59 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 53 [{ 64 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 101 [{ 165 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9d8 try:0
Node 40 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 40, pc=9da, type=3
9da: Store a81[0:63] --> 
 <-- (135, 1, 101)
 --> (65 [{ 86 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 8 den: 1 HAHAHA Before num: 8 den: 1 After num: 8 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0x970,0) + 0x8 +
consten Term of Formula is: 8
Decoded Instruction PC:7f48ba0499da Reloc:7f48ba049000 len:7 disp:8 scale:1
OZGURDBG::instrumenting node:0x9da try:0
Node 41 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 41, pc=9e1, type=13
9e1: Copy --> r75[0:31] 
 <-- (135, 1, 101)
 --> (42 [{ 48 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 43 [{ 49 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 69 [{ 92 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9e1 try:0
Node 42 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 42, pc=9e6, type=21
9e6: LEA l75[0:63] --> r76[0:63] 
 <-- (41)
 --> (47 [{ 55 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9e6 try:0
Node 43 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 43, pc=9ea, type=3
9ea: Store r75[0:63] a78[0:63] --> 
 <-- (41, 14)
 --> (46 [{ 53 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -48 den: 1 HAHAHA Before num: -48 den: 1 After num: -48 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0x970,0) + -0x30 +
consten Term of Formula is: -48
Decoded Instruction PC:7f48ba0499ea Reloc:7f48ba049000 len:5 disp:8 scale:1
OZGURDBG::instrumenting node:0x9ea try:0
Node 44 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 44, pc=9ef, type=13
9ef: Copy r80[0:63] --> r83[0:63] 
 <-- (135, 110, 1, 101)
 --> (45 [{ 51 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9ef try:0
Node 45 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 45, pc=9f2, type=23
9f2: Sub r83[0:63] r74[0:63] --> r83[0:63] r41[0:63] 
 <-- (44, 27)
 --> (48 [{ 57 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 66 [{ 87 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 68 [{ 90 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x9f2 try:0
988
	970-0
	972-0
	974-0
	978-0
	97a-0
	97b-0
	97c-0
	980-0
	983-0
9af
	989-0
	98c-0
	991-0
	995-0
	998-0
	99b-0
	99f-0
	9a3-0
	9a7-0
	9aa-0
9b6
	9b0-0
	9b2-0
	9b5-0
9c7
	9b7-0
	9bb-0
	9c1-0
	9c6-0
9d9
	9c8-0
	9cc-0
	9d3-0
	9d8-0
9e5
	9da-0
	9e1-0
a27
	9e6-0
	9ea-0
	9ef-0
	9f2-0
	9f5-1
	9fb-0
	a00-0
	a03-0
	a07-1
	a0c-0
	a14-0
	a18-0
	a1a-0
	a22-0
a4c
	a28-0
	a2c-0
	a30-0
	a34-0
	a38-0
	a3c-0
	a40-0
	a44-0
	a48-0
	a4b-0
a5c
	a4d-0
	a50-0
	a54-0
	a57-0
	a5b-0
a68
	a5d-0
	a61-0
	a64-0
	a67-0
a74
	a69-0
	a6c-0
	a70-0
	a73-0
a80
	a75-0
	a78-0
	a7c-0
	a7f-0
a8c
	a81-0
	a84-0
	a88-0
	a8b-0
a98
	a8d-0
	a91-0
	a94-0
	a97-0
a9b
	a99-0
aa0
	a9c-0
	a9f-0
aaf
	aa1-0
	aa4-0
	aa7-0
	aa9-0
	aaf-0
ab4
	ab0-0
aed
	ab5-0
	ab8-0
	abb-0
	abd-0
	ac0-0
	ac3-0
	ac6-0
	ac8-0
	acc-0
	acf-0
	ad3-0
	ad6-0
	ad9-0
	add-0
	adf-0
	ae1-0
	ae5-0
	ae9-0
	aec-0
afa
	aee-0
	af2-1
	af3-1
	af4-1
	af6-1
	af8-1
	afa-1
b06
	b00-0
	b02-0
ffffffffffffffff
988-0
988-0
9af-0
9af-0
9b6-0
9b6-0
9c7-0
9c7-0
9d9-0
9d9-0
9e5-0
9e5-0
a27-0
a27-0
a4c-0
a4c-0
a5c-0
a5c-0
a68-0
a68-0
a74-0
a74-0
a80-0
a80-0
a8c-0
a8c-0
a98-0
a98-0
a9b-0
a9b-0
aa0-0
aa0-0
aaf-0
aaf-0
ab4-0
ab4-0
aed-0
aed-0
afa-6
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load ataf2
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d51c230
afa-0
b06-0
b06-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:12	frame:8	strided:3	indirect:1
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: init_shuffle
Name of the routine is: ubench_1D_Str8_x1
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Str8_x1 start: 0xb10 offset: 0xb10 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Str8_x1 0x7f48ba049000'
OZGURDBG discover_CFG: 0xb10 0xb10 0xb42
OZGURIMM case RELLBR at pc 0x7f48ba049b13 imm:0
OZGURDBGSLICE at IP 7f48ba049b13 imm_values:28
OZGURDBG discover_CFG: 0x7f48ba049b3d 0xb10 0xb42
OZGURDBG discover_CFG: 0xb3d 0xb10 0xb42
OZGURIMM Stack uop at pc 0x7f48ba049b41 imm:0
OZGURDBG discover_CFG: 0xb15 0xb10 0xb42
OZGURIMM case RELLBR at pc 0x7f48ba049b3b imm:0
OZGURDBGSLICE at IP 7f48ba049b3b imm_values:fffffffffffffff3
OZGURDBG discover_CFG: 0x7f48ba049b30 0xb10 0xb42
OZGURDBG discover_CFG: 0xb30 0xb10 0xb42
OZGURDBG discover_CFG: 0xb3d 0xb10 0xb42
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Str8_x1'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049b13 imm:0
OZGURDCODE@PC at IP 0x7f48ba049b15 disp:ffffffffffffffff
OZGURIMM0 if not signed at pc 0x7f48ba049b1c imm:3
OZGURIMM0 if not signed at pc 0x7f48ba049b20 imm:5
OZGURDECODE@PC at IP 0x7f48ba049b24 scale:1
OZGURDCODE@PC at IP 0x7f48ba049b24 disp:20
OZGURDCODE@PC at IP 0x7f48ba049b29 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049b32 imm:20
OZGURIMM case RELLBR at pc 0x7f48ba049b3b imm:0
OZGURDECODE@PC at IP 0x7f48ba049b3d scale:4
OZGURDCODE@PC at IP 0x7f48ba049b3d disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049b41 imm:0
OZGURDBGSLICE at IP b3d scale:4
OZGURDBGSLICE at IP b3d disp:fffffffffffffffc
 This is Rslice 0x556e1d4b8b00

  ** StrideSlice::Slice, block [0xb30,0xb3d], from_uop=0, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xb30, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xb30,0xb3d], from_uop=1, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xb32, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xb30,0xb3d], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xb39, start_be=0, start_rank=1
build_loops_for_interval routine: ubench_1D_Str8_x1'
build_loops_for_interval routine: ubench_1D_Str8_x1'
OZGURIMM0 if signed at pc 0x7f48ba049b32 imm:20
OZGURIMM case RELLBR at pc 0x7f48ba049b3b imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049b13 imm:0
OZGURDCODE@PC at IP 0x7f48ba049b15 disp:ffffffffffffffff
OZGURIMM0 if not signed at pc 0x7f48ba049b1c imm:3
OZGURIMM0 if not signed at pc 0x7f48ba049b20 imm:5
OZGURDECODE@PC at IP 0x7f48ba049b24 scale:1
OZGURDCODE@PC at IP 0x7f48ba049b24 disp:20
OZGURDCODE@PC at IP 0x7f48ba049b29 disp:0
OZGURDECODE@PC at IP 0x7f48ba049b3d scale:4
OZGURDCODE@PC at IP 0x7f48ba049b3d disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049b41 imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Str8_x1'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Str8_x1'
In SchedDG constructor for routine ubench_1D_Str8_x1, pathId 0xb10/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Str8_x1'
OZGURIMM case RELLBR at pc 0x7f48ba049b13 imm:0
OZGURDCODE@PC at IP 0x7f48ba049b15 disp:ffffffffffffffff
OZGURIMM0 if not signed at pc 0x7f48ba049b1c imm:3
OZGURIMM0 if not signed at pc 0x7f48ba049b20 imm:5
OZGURDECODE@PC at IP 0x7f48ba049b24 scale:1
OZGURDCODE@PC at IP 0x7f48ba049b24 disp:20
OZGURDCODE@PC at IP 0x7f48ba049b29 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049b32 imm:20
OZGURIMM case RELLBR at pc 0x7f48ba049b3b imm:0
OZGURDECODE@PC at IP 0x7f48ba049b3d scale:4
OZGURDCODE@PC at IP 0x7f48ba049b3d disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049b41 imm:0
Sniper Routine: ubench_1D_Str8_x1 StartAddr:b10
OZGURDBGX3 #Blocks: 5
	Block[0] 's startAddres: b10 endAddress:  b15
		instruction addres:b10
		instruction addres:b13
b10-0
b13-0

	Block[1] 's startAddres: b15 endAddress:  b30
		instruction addres:b15
		instruction addres:b19
		instruction addres:b1c
		instruction addres:b20
		instruction addres:b24
		instruction addres:b29
b15-0
b19-0
b1c-0
b20-0
b24-0
b29-0

	Block[2] 's startAddres: b30 endAddress:  b3d
		instruction addres:b30
		instruction addres:b32
		instruction addres:b36
		instruction addres:b39
		instruction addres:b3b
b30-0
b32-0
b36-0
b39-0
b3b-0

	Block[3] 's startAddres: b3d endAddress:  b42
		instruction addres:b3d
		instruction addres:b41
b3d-0
b41-0

	Block[4] 's startAddres: 0 endAddress:  0
Node Oxb41 is Frame
b14
	b10-0
	b13-0
b2f
	b15-0
	b19-0
	b1c-0
	b20-0
	b24-0
	b29-0
b3c
	b30-0
	b32-0
	b36-0
	b39-0
	b3b-0
b41
	b3d-0
	b41-1
ffffffffffffffff
Address	type	class
Node 9 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=b24, type=21
b24: LEA l81[0:63] l76[0:63] --> r75[0:63] 
 <-- (8)
 --> (13 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb24 try:0
Node 7 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=b1c, type=30
b1c: Shift r76[0:63] --> r76[0:63] r41[0:63] 
 <-- (5)
 --> (8 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb1c try:0
Node 6 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=b19, type=13
b19: Copy r81[0:63] --> r74[0:63] 
 <-- (19)
 --> (11 [{ 5 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb19 try:0
Node 5 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=b15, type=21
b15: LEA l80[0:63] --> r76[0:63] 
 <-- (19)
 --> (7 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb15 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=b13, type=8
b13: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xb13 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=b10, type=29
b10: LogicalOp r80[0:63] r80[0:63] --> r41[0:63] 
 <-- (19)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb10 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 13 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 13, pc=b36, type=19
b36: Cmp r74[0:63] r75[0:63] --> r41[0:63] 
 <-- (12, 9)
 --> (15 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb36 try:0
Node 8 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=b20, type=30
b20: Shift r76[0:63] --> r76[0:63] r41[0:63] 
 <-- (7)
 --> (9 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb20 try:0
Node 11 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 11, pc=b30, type=2
b30: Load a74[0:63] --> r76[0:31] 
 <-- (6)
 --> (14 [{ 9 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0xb10,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049b30 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xb30 try:0
b30	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d51cb20
Node 15 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 15, pc=b3b, type=8
b3b: CondBranch r41[0:63] --> 
 <-- (13, 10, 14)
OZGURDBG::instrumenting node:0xb3b try:0
Node 17 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=b41, type=2
b41: Load a78[0:63] --> 
 <-- (19, 18)
 --> (19 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xb10,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049b41 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xb41 try:0
Node 19 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=b41, type=10
b41: Return --> 
 <-- (17, 16, 18)
 --> (6 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 17 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 10 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 18 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xb41 try:0
Node 16 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=b3d, type=2
b3d: Load a81[0:63] a80[0:63] --> r74[0:31] 
 <-- (19)
 --> (19 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA index:3 num: -4 den: 1 HAHAHA Before num: -4 den: 1 After num: -4 den: 1
ref->base:  0x4 Reg_RSI/0{MemOp}[0,63](0xb10,0) +  Reg_RDI/0{MemOp}[0,63](0xb10,0) + -0x4 +
consten Term of Formula is: -4
Decoded Instruction PC:7f48ba049b3d Reloc:7f48ba049000 len:4 disp:fffffffffffffffc scale:4
OZGURDBG::instrumenting node:0xb3d try:0
b3d	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4be780
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d4be780
Node 10 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=b29, type=31
b29: NOP --> 
 <-- (19)
 --> (15 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb29 try:0
Node 18 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=b41, type=20
b41: Add r78[0:63] --> r78[0:63] 
 <-- (19, 18)
 --> (19 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 17 [{ 24 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 18 [{ 25 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xb41 try:0
Node 12 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=b32, type=20
b32: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (6)
 --> (13 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb32 try:0
Node 14 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 14, pc=b39, type=3
b39: Store r76[0:31] a81[0:63] --> 
 <-- (11, 11)
 --> (15 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xb10,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049b39 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xb39 try:0
b14
	b10-0
	b13-0
b2f
	b15-0
	b19-0
	b1c-0
	b20-0
	b24-0
	b29-0
b3c
	b30-0
	b32-0
	b36-0
	b39-0
	b3b-0
b41
	b3d-0
	b41-1
ffffffffffffffff
b14-0
b14-0
b2f-0
b2f-0
b3c-0
b3c-0
b41-0
b41-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:3	frame:1	strided:2	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Str8_x1
Name of the routine is: ubench_1D_Str8_x2
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Str8_x2 start: 0xb50 offset: 0xb50 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Str8_x2 0x7f48ba049000'
OZGURDBG discover_CFG: 0xb50 0xb50 0xb92
OZGURIMM case RELLBR at pc 0x7f48ba049b53 imm:0
OZGURDBGSLICE at IP 7f48ba049b53 imm_values:38
OZGURDBG discover_CFG: 0x7f48ba049b8d 0xb50 0xb92
OZGURDBG discover_CFG: 0xb8d 0xb50 0xb92
OZGURIMM Stack uop at pc 0x7f48ba049b91 imm:0
OZGURDBG discover_CFG: 0xb55 0xb50 0xb92
OZGURIMM case RELLBR at pc 0x7f48ba049b7b imm:0
OZGURDBGSLICE at IP 7f48ba049b7b imm_values:fffffffffffffff3
OZGURDBG discover_CFG: 0x7f48ba049b70 0xb50 0xb92
OZGURDBG discover_CFG: 0xb70 0xb50 0xb92
OZGURDBG discover_CFG: 0xb7d 0xb50 0xb92
OZGURIMM case RELLBR at pc 0x7f48ba049b8b imm:0
OZGURDBGSLICE at IP 7f48ba049b8b imm_values:fffffffffffffff3
OZGURDBG discover_CFG: 0x7f48ba049b80 0xb50 0xb92
OZGURDBG discover_CFG: 0xb80 0xb50 0xb92
OZGURDBG discover_CFG: 0xb8d 0xb50 0xb92
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Str8_x2'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049b53 imm:0
OZGURDCODE@PC at IP 0x7f48ba049b55 disp:ffffffffffffffff
OZGURIMM0 if not signed at pc 0x7f48ba049b5c imm:3
OZGURIMM0 if not signed at pc 0x7f48ba049b60 imm:5
OZGURDECODE@PC at IP 0x7f48ba049b64 scale:1
OZGURDCODE@PC at IP 0x7f48ba049b64 disp:20
OZGURDCODE@PC at IP 0x7f48ba049b6c disp:0
OZGURIMM0 if signed at pc 0x7f48ba049b72 imm:20
OZGURIMM case RELLBR at pc 0x7f48ba049b7b imm:0
OZGURIMM0 if signed at pc 0x7f48ba049b82 imm:20
OZGURIMM case RELLBR at pc 0x7f48ba049b8b imm:0
OZGURDECODE@PC at IP 0x7f48ba049b8d scale:4
OZGURDCODE@PC at IP 0x7f48ba049b8d disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049b91 imm:0
OZGURDBGSLICE at IP b8d scale:4
OZGURDBGSLICE at IP b8d disp:fffffffffffffffc
 This is Rslice 0x556e1d4b8620

  ** StrideSlice::Slice, block [0xb70,0xb7d], from_uop=0, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xb70, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xb70,0xb7d], from_uop=1, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xb72, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xb70,0xb7d], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xb79, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xb80,0xb8d], from_uop=0, on reg Name RDX {type MemOp(2), stack=0, [0,63]}, start_pc=0xb80, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xb80,0xb8d], from_uop=1, on reg Name RDX {type RegOp(1), stack=0, [0,63]}, start_pc=0xb82, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xb80,0xb8d], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xb89, start_be=0, start_rank=1
build_loops_for_interval routine: ubench_1D_Str8_x2'
build_loops_for_interval routine: ubench_1D_Str8_x2'
OZGURIMM0 if signed at pc 0x7f48ba049b72 imm:20
OZGURIMM case RELLBR at pc 0x7f48ba049b7b imm:0
build_loops_for_interval routine: ubench_1D_Str8_x2'
OZGURIMM0 if signed at pc 0x7f48ba049b82 imm:20
OZGURIMM case RELLBR at pc 0x7f48ba049b8b imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049b53 imm:0
OZGURDCODE@PC at IP 0x7f48ba049b55 disp:ffffffffffffffff
OZGURIMM0 if not signed at pc 0x7f48ba049b5c imm:3
OZGURIMM0 if not signed at pc 0x7f48ba049b60 imm:5
OZGURDECODE@PC at IP 0x7f48ba049b64 scale:1
OZGURDCODE@PC at IP 0x7f48ba049b64 disp:20
OZGURDCODE@PC at IP 0x7f48ba049b6c disp:0
OZGURDECODE@PC at IP 0x7f48ba049b8d scale:4
OZGURDCODE@PC at IP 0x7f48ba049b8d disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049b91 imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Str8_x2'
simpleAddBlock
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Str8_x2'
In SchedDG constructor for routine ubench_1D_Str8_x2, pathId 0xb50/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Str8_x2'
OZGURIMM case RELLBR at pc 0x7f48ba049b53 imm:0
OZGURDCODE@PC at IP 0x7f48ba049b55 disp:ffffffffffffffff
OZGURIMM0 if not signed at pc 0x7f48ba049b5c imm:3
OZGURIMM0 if not signed at pc 0x7f48ba049b60 imm:5
OZGURDECODE@PC at IP 0x7f48ba049b64 scale:1
OZGURDCODE@PC at IP 0x7f48ba049b64 disp:20
OZGURDCODE@PC at IP 0x7f48ba049b6c disp:0
OZGURIMM0 if signed at pc 0x7f48ba049b72 imm:20
OZGURIMM case RELLBR at pc 0x7f48ba049b7b imm:0
OZGURIMM0 if signed at pc 0x7f48ba049b82 imm:20
OZGURIMM case RELLBR at pc 0x7f48ba049b8b imm:0
OZGURDECODE@PC at IP 0x7f48ba049b8d scale:4
OZGURDCODE@PC at IP 0x7f48ba049b8d disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049b91 imm:0
Sniper Routine: ubench_1D_Str8_x2 StartAddr:b50
OZGURDBGX3 #Blocks: 7
	Block[0] 's startAddres: b50 endAddress:  b55
		instruction addres:b50
		instruction addres:b53
b50-0
b53-0

	Block[1] 's startAddres: b55 endAddress:  b70
		instruction addres:b55
		instruction addres:b59
		instruction addres:b5c
		instruction addres:b60
		instruction addres:b64
		instruction addres:b69
		instruction addres:b6c
b55-0
b59-0
b5c-0
b60-0
b64-0
b69-0
b6c-0

	Block[2] 's startAddres: b70 endAddress:  b7d
		instruction addres:b70
		instruction addres:b72
		instruction addres:b76
		instruction addres:b79
		instruction addres:b7b
b70-0
b72-0
b76-0
b79-0
b7b-0

	Block[3] 's startAddres: b7d endAddress:  b80
		instruction addres:b7d
b7d-0

	Block[4] 's startAddres: b80 endAddress:  b8d
		instruction addres:b80
		instruction addres:b82
		instruction addres:b86
		instruction addres:b89
		instruction addres:b8b
b80-0
b82-0
b86-0
b89-0
b8b-0

	Block[5] 's startAddres: b8d endAddress:  b92
		instruction addres:b8d
		instruction addres:b91
b8d-0
b91-0

	Block[6] 's startAddres: 0 endAddress:  0
Node Oxb91 is Frame
b54
	b50-0
	b53-0
b6f
	b55-0
	b59-0
	b5c-0
	b60-0
	b64-0
	b69-0
	b6c-0
b7c
	b70-0
	b72-0
	b76-0
	b79-0
	b7b-0
b7f
	b7d-0
b8c
	b80-0
	b82-0
	b86-0
	b89-0
	b8b-0
b91
	b8d-0
	b91-1
ffffffffffffffff
Address	type	class
Node 7 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=b5c, type=30
b5c: Shift r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (5)
 --> (8 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb5c try:0
Node 6 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=b59, type=13
b59: Copy r81[0:63] --> r76[0:63] 
 <-- (26)
 --> (16 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 16 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 18 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb59 try:0
Node 5 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=b55, type=21
b55: LEA l80[0:63] --> r74[0:63] 
 <-- (26)
 --> (7 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb55 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=b53, type=8
b53: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xb53 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=b50, type=29
b50: LogicalOp r80[0:63] r80[0:63] --> r41[0:63] 
 <-- (26)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb50 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=b60, type=30
b60: Shift r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (7)
 --> (9 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb60 try:0
Node 17 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=b7d, type=31
b7d: NOP --> 
 <-- (26)
 --> (22 [{ 26 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb7d try:0
Node 18 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 18, pc=b80, type=2
b80: Load a76[0:63] --> r75[0:31] 
 <-- (15, 6, 16)
 --> (21 [{ 22 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 21 [{ 24 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0xb50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049b80 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xb80 try:0
b80	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 76
PTW rdx  @ 0x556e1d4c4950
Node 21 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 21, pc=b89, type=3
b89: Store r75[0:31] a81[0:63] --> 
 <-- (18, 12, 18)
 --> (22 [{ 27 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xb50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049b89 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xb89 try:0
Node 11 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=b6c, type=31
b6c: NOP --> 
 <-- (26)
 --> (16 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb6c try:0
Node 22 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 22, pc=b8b, type=8
b8b: CondBranch r41[0:63] --> 
 <-- (20, 17, 21)
OZGURDBG::instrumenting node:0xb8b try:0
Node 25 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 25, pc=b91, type=20
b91: Add r78[0:63] --> r78[0:63] 
 <-- (26, 25)
 --> (26 [{ 28 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 24 [{ 40 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 25 [{ 41 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xb91 try:0
Node 26 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 26, pc=b91, type=10
b91: Return --> 
 <-- (25, 23, 24)
 --> (6 [{ 31 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 32 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 33 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 17 [{ 34 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 11 [{ 35 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 25 [{ 36 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 23 [{ 37 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 24 [{ 38 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 10 [{ 39 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xb91 try:0
Node 14 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 14, pc=b76, type=19
b76: Cmp r74[0:63] r82[0:63] --> r41[0:63] 
 <-- (13, 9)
 --> (16 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb76 try:0
Node 15 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 15, pc=b79, type=3
b79: Store r75[0:31] a81[0:63] --> 
 <-- (12, 12)
 --> (16 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 15 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xb50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049b79 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xb79 try:0
Node 20 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 20, pc=b86, type=19
b86: Cmp r76[0:63] r74[0:63] --> r41[0:63] 
 <-- (19, 13)
 --> (22 [{ 25 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb86 try:0
Node 23 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=b8d, type=2
b8d: Load a81[0:63] a80[0:63] --> r74[0:31] 
 <-- (26)
 --> (26 [{ 29 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA index:3 num: -4 den: 1 HAHAHA Before num: -4 den: 1 After num: -4 den: 1
ref->base:  0x4 Reg_RSI/0{MemOp}[0,63](0xb50,0) +  Reg_RDI/0{MemOp}[0,63](0xb50,0) + -0x4 +
consten Term of Formula is: -4
Decoded Instruction PC:7f48ba049b8d Reloc:7f48ba049000 len:4 disp:fffffffffffffffc scale:4
OZGURDBG::instrumenting node:0xb8d try:0
b8d	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d50c150
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d50c150
Node 24 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 24, pc=b91, type=2
b91: Load a78[0:63] --> 
 <-- (26, 25)
 --> (26 [{ 30 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xb50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049b91 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xb91 try:0
Node 19 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 19, pc=b82, type=20
b82: Add r76[0:63] --> r76[0:63] r41[0:63] 
 <-- (6, 16)
 --> (20 [{ 20 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb82 try:0
Node 10 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=b69, type=13
b69: Copy r81[0:63] --> r74[0:63] 
 <-- (26)
 --> (12 [{ 5 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 13 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb69 try:0
Node 9 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=b64, type=21
b64: LEA l81[0:63] l74[0:63] --> r82[0:63] 
 <-- (8)
 --> (14 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb64 try:0
Node 16 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 16, pc=b7b, type=8
b7b: CondBranch r41[0:63] --> 
 <-- (14, 6, 11, 15)
 --> (18 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb7b try:0
Node 12 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=b70, type=2
b70: Load a74[0:63] --> r75[0:31] 
 <-- (10)
 --> (15 [{ 9 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 21 [{ 23 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0xb50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049b70 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xb70 try:0
b70	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d50cc50
Node 13 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 13, pc=b72, type=20
b72: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (10)
 --> (14 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 21 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xb72 try:0
b54
	b50-0
	b53-0
b6f
	b55-0
	b59-0
	b5c-0
	b60-0
	b64-0
	b69-0
	b6c-0
b7c
	b70-0
	b72-0
	b76-0
	b79-0
	b7b-0
b7f
	b7d-0
b8c
	b80-0
	b82-0
	b86-0
	b89-0
	b8b-0
b91
	b8d-0
	b91-1
ffffffffffffffff
b54-0
b54-0
b6f-0
b6f-0
b7c-0
b7c-0
b7f-0
b7f-0
b8c-0
b8c-0
b91-0
b91-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:4	frame:1	strided:3	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Str8_x2
Name of the routine is: ubench_1D_Str1_x1_func
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Str1_x1_func start: 0xba0 offset: 0xba0 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Str1_x1_func 0x7f48ba049000'
OZGURDBG discover_CFG: 0xba0 0xba0 0xbc2
OZGURIMM case RELLBR at pc 0x7f48ba049ba3 imm:0
OZGURDBGSLICE at IP 7f48ba049ba3 imm_values:18
OZGURDBG discover_CFG: 0x7f48ba049bbd 0xba0 0xbc2
OZGURDBG discover_CFG: 0xbbd 0xba0 0xbc2
OZGURIMM Stack uop at pc 0x7f48ba049bc1 imm:0
OZGURDBG discover_CFG: 0xba5 0xba0 0xbc2
OZGURIMM case RELLBR at pc 0x7f48ba049bbb imm:0
OZGURDBGSLICE at IP 7f48ba049bbb imm_values:fffffffffffffff3
OZGURDBG discover_CFG: 0x7f48ba049bb0 0xba0 0xbc2
OZGURDBG discover_CFG: 0xbb0 0xba0 0xbc2
OZGURDBG discover_CFG: 0xbbd 0xba0 0xbc2
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Str1_x1_func'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049ba3 imm:0
OZGURDECODE@PC at IP 0x7f48ba049ba5 scale:4
OZGURDCODE@PC at IP 0x7f48ba049bac disp:0
OZGURIMM0 if signed at pc 0x7f48ba049bb2 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049bbb imm:0
OZGURDECODE@PC at IP 0x7f48ba049bbd scale:4
OZGURDCODE@PC at IP 0x7f48ba049bbd disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049bc1 imm:0
OZGURDBGSLICE at IP bbd scale:4
OZGURDBGSLICE at IP bbd disp:fffffffffffffffc
 This is Rslice 0x556e1d4b8150

  ** StrideSlice::Slice, block [0xbb0,0xbbd], from_uop=0, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xbb0, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xbb0,0xbbd], from_uop=1, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xbb2, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xbb0,0xbbd], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xbb9, start_be=0, start_rank=1
build_loops_for_interval routine: ubench_1D_Str1_x1_func'
build_loops_for_interval routine: ubench_1D_Str1_x1_func'
OZGURIMM0 if signed at pc 0x7f48ba049bb2 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049bbb imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049ba3 imm:0
OZGURDECODE@PC at IP 0x7f48ba049ba5 scale:4
OZGURDCODE@PC at IP 0x7f48ba049bac disp:0
OZGURDECODE@PC at IP 0x7f48ba049bbd scale:4
OZGURDCODE@PC at IP 0x7f48ba049bbd disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049bc1 imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Str1_x1_func'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Str1_x1_func'
In SchedDG constructor for routine ubench_1D_Str1_x1_func, pathId 0xba0/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Str1_x1_func'
OZGURIMM case RELLBR at pc 0x7f48ba049ba3 imm:0
OZGURDECODE@PC at IP 0x7f48ba049ba5 scale:4
OZGURDCODE@PC at IP 0x7f48ba049bac disp:0
OZGURIMM0 if signed at pc 0x7f48ba049bb2 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049bbb imm:0
OZGURDECODE@PC at IP 0x7f48ba049bbd scale:4
OZGURDCODE@PC at IP 0x7f48ba049bbd disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049bc1 imm:0
Sniper Routine: ubench_1D_Str1_x1_func StartAddr:ba0
OZGURDBGX3 #Blocks: 5
	Block[0] 's startAddres: ba0 endAddress:  ba5
		instruction addres:ba0
		instruction addres:ba3
ba0-0
ba3-0

	Block[1] 's startAddres: ba5 endAddress:  bb0
		instruction addres:ba5
		instruction addres:ba9
		instruction addres:bac
ba5-0
ba9-0
bac-0

	Block[2] 's startAddres: bb0 endAddress:  bbd
		instruction addres:bb0
		instruction addres:bb2
		instruction addres:bb6
		instruction addres:bb9
		instruction addres:bbb
bb0-0
bb2-0
bb6-0
bb9-0
bbb-0

	Block[3] 's startAddres: bbd endAddress:  bc2
		instruction addres:bbd
		instruction addres:bc1
bbd-0
bc1-0

	Block[4] 's startAddres: 0 endAddress:  0
Node Oxbc1 is Frame
ba4
	ba0-0
	ba3-0
baf
	ba5-0
	ba9-0
	bac-0
bbc
	bb0-0
	bb2-0
	bb6-0
	bb9-0
	bbb-0
bc1
	bbd-0
	bc1-1
ffffffffffffffff
Address	type	class
Node 7 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=bac, type=31
bac: NOP --> 
 <-- (16)
 --> (12 [{ 9 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xbac try:0
Node 6 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=ba9, type=13
ba9: Copy r81[0:63] --> r74[0:63] 
 <-- (16)
 --> (8 [{ 2 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xba9 try:0
Node 5 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=ba5, type=21
ba5: LEA l81[0:63] l80[0:63] --> r75[0:63] 
 <-- (16)
 --> (10 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xba5 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=ba3, type=8
ba3: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xba3 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=ba0, type=29
ba0: LogicalOp r80[0:63] r80[0:63] --> r41[0:63] 
 <-- (16)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xba0 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 8, pc=bb0, type=2
bb0: Load a74[0:63] --> r76[0:31] 
 <-- (6)
 --> (11 [{ 6 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0xba0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049bb0 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xbb0 try:0
bb0	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d50aeb0
Node 16 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=bc1, type=10
bc1: Return --> 
 <-- (15, 14, 13)
 --> (7 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 14 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xbc1 try:0
Node 12 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=bbb, type=8
bbb: CondBranch r41[0:63] --> 
 <-- (10, 7, 11)
OZGURDBG::instrumenting node:0xbbb try:0
Node 15 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=bc1, type=20
bc1: Add r78[0:63] --> r78[0:63] 
 <-- (16, 15)
 --> (16 [{ 11 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 21 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 22 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xbc1 try:0
Node 14 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=bc1, type=2
bc1: Load a78[0:63] --> 
 <-- (16, 15)
 --> (16 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xba0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049bc1 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xbc1 try:0
Node 13 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=bbd, type=2
bbd: Load a81[0:63] a80[0:63] --> r74[0:31] 
 <-- (16)
 --> (16 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA index:3 num: -4 den: 1 HAHAHA Before num: -4 den: 1 After num: -4 den: 1
ref->base:  0x4 Reg_RSI/0{MemOp}[0,63](0xba0,0) +  Reg_RDI/0{MemOp}[0,63](0xba0,0) + -0x4 +
consten Term of Formula is: -4
Decoded Instruction PC:7f48ba049bbd Reloc:7f48ba049000 len:4 disp:fffffffffffffffc scale:4
OZGURDBG::instrumenting node:0xbbd try:0
bbd	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d549470
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d549470
Node 9 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 9, pc=bb2, type=20
bb2: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (6)
 --> (10 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xbb2 try:0
Node 10 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 10, pc=bb6, type=19
bb6: Cmp r75[0:63] r74[0:63] --> r41[0:63] 
 <-- (5, 9)
 --> (12 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xbb6 try:0
Node 11 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 11, pc=bb9, type=3
bb9: Store r76[0:31] a81[0:63] --> 
 <-- (8, 8)
 --> (12 [{ 10 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xba0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049bb9 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xbb9 try:0
ba4
	ba0-0
	ba3-0
baf
	ba5-0
	ba9-0
	bac-0
bbc
	bb0-0
	bb2-0
	bb6-0
	bb9-0
	bbb-0
bc1
	bbd-0
	bc1-1
ffffffffffffffff
ba4-0
ba4-0
baf-0
baf-0
bbc-0
bbc-0
bc1-0
bc1-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:3	frame:1	strided:2	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Str1_x1_func
Name of the routine is: ubench_1D_Str1_x1
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Str1_x1 start: 0xbd0 offset: 0xbd0 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Str1_x1 0x7f48ba049000'
OZGURDBG discover_CFG: 0xbd0 0xbd0 0xbf2
OZGURIMM case RELLBR at pc 0x7f48ba049bd3 imm:0
OZGURDBGSLICE at IP 7f48ba049bd3 imm_values:18
OZGURDBG discover_CFG: 0x7f48ba049bed 0xbd0 0xbf2
OZGURDBG discover_CFG: 0xbed 0xbd0 0xbf2
OZGURIMM Stack uop at pc 0x7f48ba049bf1 imm:0
OZGURDBG discover_CFG: 0xbd5 0xbd0 0xbf2
OZGURIMM case RELLBR at pc 0x7f48ba049beb imm:0
OZGURDBGSLICE at IP 7f48ba049beb imm_values:fffffffffffffff3
OZGURDBG discover_CFG: 0x7f48ba049be0 0xbd0 0xbf2
OZGURDBG discover_CFG: 0xbe0 0xbd0 0xbf2
OZGURDBG discover_CFG: 0xbed 0xbd0 0xbf2
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Str1_x1'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049bd3 imm:0
OZGURDECODE@PC at IP 0x7f48ba049bd5 scale:4
OZGURDCODE@PC at IP 0x7f48ba049bdc disp:0
OZGURIMM0 if signed at pc 0x7f48ba049be2 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049beb imm:0
OZGURDECODE@PC at IP 0x7f48ba049bed scale:4
OZGURDCODE@PC at IP 0x7f48ba049bed disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049bf1 imm:0
OZGURDBGSLICE at IP bed scale:4
OZGURDBGSLICE at IP bed disp:fffffffffffffffc
 This is Rslice 0x556e1d4b8b00

  ** StrideSlice::Slice, block [0xbe0,0xbed], from_uop=0, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xbe0, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xbe0,0xbed], from_uop=1, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xbe2, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xbe0,0xbed], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xbe9, start_be=0, start_rank=1
build_loops_for_interval routine: ubench_1D_Str1_x1'
build_loops_for_interval routine: ubench_1D_Str1_x1'
OZGURIMM0 if signed at pc 0x7f48ba049be2 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049beb imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049bd3 imm:0
OZGURDECODE@PC at IP 0x7f48ba049bd5 scale:4
OZGURDCODE@PC at IP 0x7f48ba049bdc disp:0
OZGURDECODE@PC at IP 0x7f48ba049bed scale:4
OZGURDCODE@PC at IP 0x7f48ba049bed disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049bf1 imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Str1_x1'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Str1_x1'
In SchedDG constructor for routine ubench_1D_Str1_x1, pathId 0xbd0/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Str1_x1'
OZGURIMM case RELLBR at pc 0x7f48ba049bd3 imm:0
OZGURDECODE@PC at IP 0x7f48ba049bd5 scale:4
OZGURDCODE@PC at IP 0x7f48ba049bdc disp:0
OZGURIMM0 if signed at pc 0x7f48ba049be2 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049beb imm:0
OZGURDECODE@PC at IP 0x7f48ba049bed scale:4
OZGURDCODE@PC at IP 0x7f48ba049bed disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049bf1 imm:0
Sniper Routine: ubench_1D_Str1_x1 StartAddr:bd0
OZGURDBGX3 #Blocks: 5
	Block[0] 's startAddres: bd0 endAddress:  bd5
		instruction addres:bd0
		instruction addres:bd3
bd0-0
bd3-0

	Block[1] 's startAddres: bd5 endAddress:  be0
		instruction addres:bd5
		instruction addres:bd9
		instruction addres:bdc
bd5-0
bd9-0
bdc-0

	Block[2] 's startAddres: be0 endAddress:  bed
		instruction addres:be0
		instruction addres:be2
		instruction addres:be6
		instruction addres:be9
		instruction addres:beb
be0-0
be2-0
be6-0
be9-0
beb-0

	Block[3] 's startAddres: bed endAddress:  bf2
		instruction addres:bed
		instruction addres:bf1
bed-0
bf1-0

	Block[4] 's startAddres: 0 endAddress:  0
Node Oxbf1 is Frame
bd4
	bd0-0
	bd3-0
bdf
	bd5-0
	bd9-0
	bdc-0
bec
	be0-0
	be2-0
	be6-0
	be9-0
	beb-0
bf1
	bed-0
	bf1-1
ffffffffffffffff
Address	type	class
Node 7 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=bdc, type=31
bdc: NOP --> 
 <-- (16)
 --> (12 [{ 9 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xbdc try:0
Node 6 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=bd9, type=13
bd9: Copy r81[0:63] --> r74[0:63] 
 <-- (16)
 --> (8 [{ 2 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xbd9 try:0
Node 5 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=bd5, type=21
bd5: LEA l81[0:63] l80[0:63] --> r75[0:63] 
 <-- (16)
 --> (10 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xbd5 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=bd3, type=8
bd3: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xbd3 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=bd0, type=29
bd0: LogicalOp r80[0:63] r80[0:63] --> r41[0:63] 
 <-- (16)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xbd0 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 8, pc=be0, type=2
be0: Load a74[0:63] --> r76[0:31] 
 <-- (6)
 --> (11 [{ 6 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{RegOp}[0,63](0xbd0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049be0 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xbe0 try:0
be0	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d4d1240
Node 13 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=bed, type=2
bed: Load a81[0:63] a80[0:63] --> r74[0:31] 
 <-- (16)
 --> (16 [{ 11 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA index:3 num: -4 den: 1 HAHAHA Before num: -4 den: 1 After num: -4 den: 1
ref->base:  0x4 Reg_RSI/0{MemOp}[0,63](0xbd0,0) +  Reg_RDI/0{MemOp}[0,63](0xbd0,0) + -0x4 +
consten Term of Formula is: -4
Decoded Instruction PC:7f48ba049bed Reloc:7f48ba049000 len:4 disp:fffffffffffffffc scale:4
OZGURDBG::instrumenting node:0xbed try:0
bed	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4cf5a0
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d4cf5a0
Node 15 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=bf1, type=20
bf1: Add r78[0:63] --> r78[0:63] 
 <-- (16, 15)
 --> (16 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 21 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 22 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xbf1 try:0
Node 12 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=beb, type=8
beb: CondBranch r41[0:63] --> 
 <-- (10, 7, 11)
OZGURDBG::instrumenting node:0xbeb try:0
Node 16 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=bf1, type=10
bf1: Return --> 
 <-- (13, 15, 14)
 --> (7 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 14 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xbf1 try:0
Node 14 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=bf1, type=2
bf1: Load a78[0:63] --> 
 <-- (16, 15)
 --> (16 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xbd0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049bf1 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xbf1 try:0
Node 10 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 10, pc=be6, type=19
be6: Cmp r75[0:63] r74[0:63] --> r41[0:63] 
 <-- (5, 9)
 --> (12 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xbe6 try:0
Node 9 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 9, pc=be2, type=20
be2: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (6)
 --> (10 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xbe2 try:0
Node 11 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 11, pc=be9, type=3
be9: Store r76[0:31] a81[0:63] --> 
 <-- (8, 8)
 --> (12 [{ 10 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xbd0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049be9 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xbe9 try:0
bd4
	bd0-0
	bd3-0
bdf
	bd5-0
	bd9-0
	bdc-0
bec
	be0-0
	be2-0
	be6-0
	be9-0
	beb-0
bf1
	bed-0
	bf1-1
ffffffffffffffff
bd4-0
bd4-0
bdf-0
bdf-0
bec-0
bec-0
bf1-0
bf1-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:3	frame:1	strided:2	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Str1_x1
Name of the routine is: ubench_1D_Str1_x2
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Str1_x2 start: 0xc00 offset: 0xc00 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Str1_x2 0x7f48ba049000'
OZGURDBG discover_CFG: 0xc00 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049c03 imm:0
OZGURDBGSLICE at IP 7f48ba049c03 imm_values:d7
OZGURDBG discover_CFG: 0x7f48ba049ce0 0xc00 0xcf4
OZGURDBG discover_CFG: 0xce0 0xc00 0xcf4
OZGURIMM Stack uop at pc 0x7f48ba049ce2 imm:0
OZGURDBG discover_CFG: 0xc09 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049c2e imm:0
OZGURDBGSLICE at IP 7f48ba049c2e imm_values:bc
OZGURDBG discover_CFG: 0x7f48ba049cf0 0xc00 0xcf4
OZGURDBG discover_CFG: 0xcf0 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049cf2 imm:0
OZGURDBGSLICE at IP 7f48ba049cf2 imm_values:ffffffffffffffa6
OZGURDBG discover_CFG: 0x7f48ba049c9a 0xc00 0xcf4
OZGURDBG discover_CFG: 0xc9a 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049ca4 imm:0
OZGURDBGSLICE at IP 7f48ba049ca4 imm_values:3c
OZGURDBG discover_CFG: 0x7f48ba049ce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xca6 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049cb0 imm:0
OZGURDBGSLICE at IP 7f48ba049cb0 imm_values:30
OZGURDBG discover_CFG: 0x7f48ba049ce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xcb2 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049cbc imm:0
OZGURDBGSLICE at IP 7f48ba049cbc imm_values:24
OZGURDBG discover_CFG: 0x7f48ba049ce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xcbe 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049cc8 imm:0
OZGURDBGSLICE at IP 7f48ba049cc8 imm_values:18
OZGURDBG discover_CFG: 0x7f48ba049ce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xcca 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049cd4 imm:0
OZGURDBGSLICE at IP 7f48ba049cd4 imm_values:c
OZGURDBG discover_CFG: 0x7f48ba049ce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xce2 0xc00 0xcf4
OZGURDBG discover_CFG: 0xcd6 0xc00 0xcf4
OZGURIMM Stack uop at pc 0x7f48ba049cd9 imm:0
OZGURDBG discover_CFG: 0xc34 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049c39 imm:0
OZGURDBGSLICE at IP 7f48ba049c39 imm_values:19
OZGURDBG discover_CFG: 0x7f48ba049c54 0xc00 0xcf4
OZGURDBG discover_CFG: 0xc54 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049c7f imm:0
OZGURDBGSLICE at IP 7f48ba049c7f imm_values:ffffffffffffffef
OZGURDBG discover_CFG: 0x7f48ba049c70 0xc00 0xcf4
OZGURDBG discover_CFG: 0xc70 0xc00 0xcf4
OZGURDBG discover_CFG: 0xc81 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049c98 imm:0
OZGURDBGSLICE at IP 7f48ba049c98 imm_values:4e
OZGURDBG discover_CFG: 0x7f48ba049ce8 0xc00 0xcf4
OZGURDBG discover_CFG: 0xce8 0xc00 0xcf4
OZGURIMM Stack uop at pc 0x7f48ba049ce8 imm:0
OZGURDBG discover_CFG: 0xc9a 0xc00 0xcf4
OZGURDBG discover_CFG: 0xc3b 0xc00 0xcf4
OZGURIMM case RELLBR at pc 0x7f48ba049c44 imm:0
OZGURDBGSLICE at IP 7f48ba049c44 imm_values:e
OZGURDBG discover_CFG: 0x7f48ba049c54 0xc00 0xcf4
OZGURDBG discover_CFG: 0xc54 0xc00 0xcf4
OZGURDBG discover_CFG: 0xc46 0xc00 0xcf4
OZGURDBG discover_CFG: 0xc54 0xc00 0xcf4
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Str1_x2'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049c03 imm:0
OZGURIMM0 if not signed at pc 0x7f48ba049c0c imm:4
OZGURIMM0 if not signed at pc 0x7f48ba049c11 imm:2
OZGURIMM0 if signed at pc 0x7f48ba049c18 imm:3
OZGURDCODE@PC at IP 0x7f48ba049c1b disp:3
OZGURIMM0 if signed at pc 0x7f48ba049c1f imm:4
OZGURDCODE@PC at IP 0x7f48ba049c27 disp:ffffffffffffffff
OZGURIMM case RELLBR at pc 0x7f48ba049c2e imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049cf2 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049c39 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049c3b imm:1
OZGURIMM0 if not signed at pc 0x7f48ba049c3f imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049c44 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049c48 imm:3
OZGURIMM0 if signed at pc 0x7f48ba049c50 imm:2
OZGURDECODE@PC at IP 0x7f48ba049c57 scale:4
OZGURIMM0 if not signed at pc 0x7f48ba049c63 imm:2
OZGURDECODE@PC at IP 0x7f48ba049c67 scale:1
OZGURDCODE@PC at IP 0x7f48ba049c67 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049c70 imm:1
OZGURIMM0 if signed at pc 0x7f48ba049c78 imm:10
OZGURIMM case RELLBR at pc 0x7f48ba049c7f imm:0
OZGURDBGSLICE at IP c57 scale:4
OZGURDBGSLICE at IP c57 scale:4
OZGURIMM0 if not signed at pc 0x7f48ba049c81 imm:ff
OZGURIMM0 if signed at pc 0x7f48ba049c89 imm:fffffffffffffffc
OZGURDECODE@PC at IP 0x7f48ba049c90 scale:1
OZGURIMM case RELLBR at pc 0x7f48ba049c98 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ce8 imm:0
OZGURDCODE@PC at IP 0x7f48ba049c9a disp:1
OZGURDECODE@PC at IP 0x7f48ba049c9e scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049ca4 imm:0
OZGURDBGSLICE at IP c9e scale:4
OZGURDBGSLICE at IP c90 scale:1
OZGURDBGSLICE at IP c90 scale:1
OZGURDECODE@PC at IP 0x7f48ba049ca6 scale:4
OZGURDCODE@PC at IP 0x7f48ba049ca9 disp:2
OZGURIMM case RELLBR at pc 0x7f48ba049cb0 imm:0
OZGURDBGSLICE at IP ca6 scale:4
OZGURDBGSLICE at IP c9a scale:1
OZGURDBGSLICE at IP c9a disp:1
OZGURDBGSLICE at IP c9a disp:1
OZGURDECODE@PC at IP 0x7f48ba049cb2 scale:4
OZGURDCODE@PC at IP 0x7f48ba049cb5 disp:3
OZGURIMM case RELLBR at pc 0x7f48ba049cbc imm:0
OZGURDBGSLICE at IP cb2 scale:4
OZGURDBGSLICE at IP ca9 scale:1
OZGURDBGSLICE at IP ca9 disp:2
OZGURDBGSLICE at IP ca9 disp:2
OZGURDECODE@PC at IP 0x7f48ba049cbe scale:4
OZGURDCODE@PC at IP 0x7f48ba049cc1 disp:4
OZGURIMM case RELLBR at pc 0x7f48ba049cc8 imm:0
OZGURDBGSLICE at IP cbe scale:4
OZGURDBGSLICE at IP cb5 scale:1
OZGURDBGSLICE at IP cb5 disp:3
OZGURDBGSLICE at IP cb5 disp:3
OZGURIMM0 if signed at pc 0x7f48ba049cca imm:5
OZGURDECODE@PC at IP 0x7f48ba049cce scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049cd4 imm:0
OZGURDBGSLICE at IP cce scale:4
OZGURDBGSLICE at IP cc1 scale:1
OZGURDBGSLICE at IP cc1 disp:4
OZGURDBGSLICE at IP cc1 disp:4
OZGURIMM Stack uop at pc 0x7f48ba049ce2 imm:0
OZGURDECODE@PC at IP 0x7f48ba049cd6 scale:4
OZGURIMM Stack uop at pc 0x7f48ba049cd9 imm:0
OZGURDBGSLICE at IP cd6 scale:4
 This is Rslice 0x556e1d4b8620

  ** StrideSlice::Slice, block [0xc70,0xc81], from_uop=1, on reg Name RCX {type MemOp(2), stack=0, [0,63]}, start_pc=0xc74, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xc70,0xc81], from_uop=2, on reg Name RCX {type RegOp(1), stack=0, [0,63]}, start_pc=0xc78, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2
build_loops_for_interval routine: ubench_1D_Str1_x2'
build_loops_for_interval routine: ubench_1D_Str1_x2'
OZGURIMM0 if signed at pc 0x7f48ba049c70 imm:1
OZGURIMM0 if signed at pc 0x7f48ba049c78 imm:10
OZGURIMM case RELLBR at pc 0x7f48ba049c7f imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049c03 imm:0
OZGURIMM0 if not signed at pc 0x7f48ba049c0c imm:4
OZGURIMM0 if not signed at pc 0x7f48ba049c11 imm:2
OZGURIMM0 if signed at pc 0x7f48ba049c18 imm:3
OZGURDCODE@PC at IP 0x7f48ba049c1b disp:3
OZGURIMM0 if signed at pc 0x7f48ba049c1f imm:4
OZGURDCODE@PC at IP 0x7f48ba049c27 disp:ffffffffffffffff
OZGURIMM case RELLBR at pc 0x7f48ba049c2e imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049cf2 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049c39 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049c3b imm:1
OZGURIMM0 if not signed at pc 0x7f48ba049c3f imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049c44 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049c48 imm:3
OZGURIMM0 if signed at pc 0x7f48ba049c50 imm:2
OZGURDECODE@PC at IP 0x7f48ba049c57 scale:4
OZGURIMM0 if not signed at pc 0x7f48ba049c63 imm:2
OZGURDECODE@PC at IP 0x7f48ba049c67 scale:1
OZGURDCODE@PC at IP 0x7f48ba049c67 disp:0
OZGURIMM0 if not signed at pc 0x7f48ba049c81 imm:ff
OZGURIMM0 if signed at pc 0x7f48ba049c89 imm:fffffffffffffffc
OZGURDECODE@PC at IP 0x7f48ba049c90 scale:1
OZGURIMM case RELLBR at pc 0x7f48ba049c98 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ce8 imm:0
OZGURDCODE@PC at IP 0x7f48ba049c9a disp:1
OZGURDECODE@PC at IP 0x7f48ba049c9e scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049ca4 imm:0
OZGURDECODE@PC at IP 0x7f48ba049ca6 scale:4
OZGURDCODE@PC at IP 0x7f48ba049ca9 disp:2
OZGURIMM case RELLBR at pc 0x7f48ba049cb0 imm:0
OZGURDECODE@PC at IP 0x7f48ba049cb2 scale:4
OZGURDCODE@PC at IP 0x7f48ba049cb5 disp:3
OZGURIMM case RELLBR at pc 0x7f48ba049cbc imm:0
OZGURDECODE@PC at IP 0x7f48ba049cbe scale:4
OZGURDCODE@PC at IP 0x7f48ba049cc1 disp:4
OZGURIMM case RELLBR at pc 0x7f48ba049cc8 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049cca imm:5
OZGURDECODE@PC at IP 0x7f48ba049cce scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049cd4 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ce2 imm:0
OZGURDECODE@PC at IP 0x7f48ba049cd6 scale:4
OZGURIMM Stack uop at pc 0x7f48ba049cd9 imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Str1_x2'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Str1_x2'
In SchedDG constructor for routine ubench_1D_Str1_x2, pathId 0xc00/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Str1_x2'
OZGURIMM case RELLBR at pc 0x7f48ba049c03 imm:0
OZGURIMM0 if not signed at pc 0x7f48ba049c0c imm:4
OZGURIMM0 if not signed at pc 0x7f48ba049c11 imm:2
OZGURIMM0 if signed at pc 0x7f48ba049c18 imm:3
OZGURDCODE@PC at IP 0x7f48ba049c1b disp:3
OZGURIMM0 if signed at pc 0x7f48ba049c1f imm:4
OZGURDCODE@PC at IP 0x7f48ba049c27 disp:ffffffffffffffff
OZGURIMM case RELLBR at pc 0x7f48ba049c2e imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049cf2 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049c39 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049c3b imm:1
OZGURIMM0 if not signed at pc 0x7f48ba049c3f imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049c44 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049c48 imm:3
OZGURIMM0 if signed at pc 0x7f48ba049c50 imm:2
OZGURDECODE@PC at IP 0x7f48ba049c57 scale:4
OZGURIMM0 if not signed at pc 0x7f48ba049c63 imm:2
OZGURDECODE@PC at IP 0x7f48ba049c67 scale:1
OZGURDCODE@PC at IP 0x7f48ba049c67 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049c70 imm:1
OZGURIMM0 if signed at pc 0x7f48ba049c78 imm:10
OZGURIMM case RELLBR at pc 0x7f48ba049c7f imm:0
OZGURIMM0 if not signed at pc 0x7f48ba049c81 imm:ff
OZGURIMM0 if signed at pc 0x7f48ba049c89 imm:fffffffffffffffc
OZGURDECODE@PC at IP 0x7f48ba049c90 scale:1
OZGURIMM case RELLBR at pc 0x7f48ba049c98 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ce8 imm:0
OZGURDCODE@PC at IP 0x7f48ba049c9a disp:1
OZGURDECODE@PC at IP 0x7f48ba049c9e scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049ca4 imm:0
OZGURDECODE@PC at IP 0x7f48ba049ca6 scale:4
OZGURDCODE@PC at IP 0x7f48ba049ca9 disp:2
OZGURIMM case RELLBR at pc 0x7f48ba049cb0 imm:0
OZGURDECODE@PC at IP 0x7f48ba049cb2 scale:4
OZGURDCODE@PC at IP 0x7f48ba049cb5 disp:3
OZGURIMM case RELLBR at pc 0x7f48ba049cbc imm:0
OZGURDECODE@PC at IP 0x7f48ba049cbe scale:4
OZGURDCODE@PC at IP 0x7f48ba049cc1 disp:4
OZGURIMM case RELLBR at pc 0x7f48ba049cc8 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049cca imm:5
OZGURDECODE@PC at IP 0x7f48ba049cce scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049cd4 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ce2 imm:0
OZGURDECODE@PC at IP 0x7f48ba049cd6 scale:4
OZGURIMM Stack uop at pc 0x7f48ba049cd9 imm:0
Sniper Routine: ubench_1D_Str1_x2 StartAddr:c00
OZGURDBGX3 #Blocks: 19
	Block[0] 's startAddres: c00 endAddress:  c09
		instruction addres:c00
		instruction addres:c03
c00-0
c03-0

	Block[1] 's startAddres: ce0 endAddress:  ce2
		instruction addres:ce0
ce0-0

	Block[2] 's startAddres: c09 endAddress:  c34
		instruction addres:c09
		instruction addres:c0c
		instruction addres:c11
		instruction addres:c15
		instruction addres:c18
		instruction addres:c1b
		instruction addres:c1f
		instruction addres:c23
		instruction addres:c27
		instruction addres:c2b
		instruction addres:c2e
c09-0
c0c-0
c11-0
c15-0
c18-0
c1b-0
c1f-0
c23-0
c27-0
c2b-0
c2e-0

	Block[3] 's startAddres: cf0 endAddress:  cf4
		instruction addres:cf0
		instruction addres:cf2
cf0-0
cf2-0

	Block[4] 's startAddres: c34 endAddress:  c3b
		instruction addres:c34
		instruction addres:c36
		instruction addres:c39
c34-0
c36-0
c39-0

	Block[5] 's startAddres: c3b endAddress:  c46
		instruction addres:c3b
		instruction addres:c3f
		instruction addres:c44
c3b-0
c3f-0
c44-0

	Block[6] 's startAddres: c46 endAddress:  c54
		instruction addres:c46
		instruction addres:c48
		instruction addres:c4c
		instruction addres:c50
c46-0
c48-0
c4c-0
c50-0

	Block[7] 's startAddres: c54 endAddress:  c70
		instruction addres:c54
		instruction addres:c57
		instruction addres:c5b
		instruction addres:c5e
		instruction addres:c60
		instruction addres:c63
		instruction addres:c67
c54-0
c57-0
c5b-0
c5e-0
c60-0
c63-0
c67-0

	Block[8] 's startAddres: c70 endAddress:  c81
		instruction addres:c70
		instruction addres:c74
		instruction addres:c78
		instruction addres:c7c
		instruction addres:c7f
c70-0
c74-0
c78-0
c7c-0
c7f-0

	Block[9] 's startAddres: c81 endAddress:  c9a
		instruction addres:c81
		instruction addres:c86
		instruction addres:c89
		instruction addres:c8d
		instruction addres:c90
		instruction addres:c94
		instruction addres:c98
c81-0
c86-0
c89-0
c8d-0
c90-0
c94-0
c98-0

	Block[10] 's startAddres: ce8 endAddress:  cea
		instruction addres:ce8
ce8-0

	Block[11] 's startAddres: c9a endAddress:  ca6
		instruction addres:c9a
		instruction addres:c9e
		instruction addres:ca1
		instruction addres:ca4
c9a-0
c9e-0
ca1-0
ca4-0

	Block[12] 's startAddres: ca6 endAddress:  cb2
		instruction addres:ca6
		instruction addres:ca9
		instruction addres:cad
		instruction addres:cb0
ca6-0
ca9-0
cad-0
cb0-0

	Block[13] 's startAddres: cb2 endAddress:  cbe
		instruction addres:cb2
		instruction addres:cb5
		instruction addres:cb9
		instruction addres:cbc
cb2-0
cb5-0
cb9-0
cbc-0

	Block[14] 's startAddres: cbe endAddress:  cca
		instruction addres:cbe
		instruction addres:cc1
		instruction addres:cc5
		instruction addres:cc8
cbe-0
cc1-0
cc5-0
cc8-0

	Block[15] 's startAddres: cca endAddress:  cd6
		instruction addres:cca
		instruction addres:cce
		instruction addres:cd1
		instruction addres:cd4
cca-0
cce-0
cd1-0
cd4-0

	Block[16] 's startAddres: ce2 endAddress:  ce4
		instruction addres:ce2
ce2-0

	Block[17] 's startAddres: cd6 endAddress:  cda
		instruction addres:cd6
		instruction addres:cd9
cd6-0
cd9-0

	Block[18] 's startAddres: 0 endAddress:  0
Node Oxce2 is Frame
Node Oxcd9 is Frame
Node Oxce8 is Frame
c08
	c00-0
	c03-0
c33
	c09-0
	c0c-0
	c11-0
	c15-0
	c18-0
	c1b-0
	c1f-0
	c23-0
	c27-0
	c2b-0
	c2e-0
c3a
	c34-0
	c36-0
	c39-0
c45
	c3b-0
	c3f-0
	c44-0
c53
	c46-0
	c48-0
	c4c-0
	c50-0
c6f
	c54-0
	c57-0
	c5b-0
	c5e-0
	c60-0
	c63-0
	c67-0
c80
	c70-0
	c74-0
	c78-0
	c7c-0
	c7f-0
c99
	c81-0
	c86-0
	c89-0
	c8d-0
	c90-0
	c94-0
	c98-0
ca5
	c9a-0
	c9e-0
	ca1-0
	ca4-0
cb1
	ca6-0
	ca9-0
	cad-0
	cb0-0
cbd
	cb2-0
	cb5-0
	cb9-0
	cbc-0
cc9
	cbe-0
	cc1-0
	cc5-0
	cc8-0
cd5
	cca-0
	cce-0
	cd1-0
	cd4-0
cd9
	cd6-0
	cd9-1
ce1
	ce0-0
ce3
	ce2-1
ce9
	ce8-1
cf3
	cf0-0
	cf2-0
ffffffffffffffff
Address	type	class
Node 7 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=c0c, type=13
c0c: Copy --> r80[0:31] 
 <-- (77)
 --> (13 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc0c try:0
Node 6 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=c09, type=13
c09: Copy r81[0:63] --> r74[0:63] 
 <-- (77)
 --> (8 [{ 2 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc09 try:0
Node 5 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=ce0, type=28
ce0: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (77, 74)
 --> (16 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xce0 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=c03, type=8
c03: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xc03 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=c00, type=29
c00: LogicalOp r76[0:63] r76[0:63] --> r41[0:63] 
 <-- (77)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc00 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 71 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 71, pc=ce2, type=2
ce2: Load a78[0:63] --> 
 <-- (49, 70)
 --> (73 [{ 105 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xc00,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049ce2 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xce2 try:0
Node 72 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 72, pc=ce2, type=20
ce2: Add r78[0:63] --> r78[0:63] 
 <-- (49, 70)
 --> (73 [{ 106 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 75 [{ 109 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 76 [{ 111 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xce2 try:0
Node 73 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 73, pc=ce2, type=10
ce2: Return --> 
 <-- (71, 72)
 --> (74 [{ 108 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 75 [{ 110 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 76 [{ 112 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xce2 try:0
Node 74 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 74, pc=cd6, type=2
cd6: Load a81[0:63] a75[0:63] --> r74[0:31] 
 <-- (67, 73)
 --> (77 [{ 113 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 126 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 28 den: 1 HAHAHA Before num: 28 den: 1 After num: 28 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xc00,0) + 0x4 Reg_R8/0{RegOp}[0,63](0xc89,2) + 0x1c +
consten Term of Formula is: 28
Decoded Instruction PC:7f48ba049cd6 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xcd6 try:0
cd6	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4e92f0
Print Src reg info
Name RCX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 75
PTW rcx  @ 0x556e1d4e92f0
Node 75 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 75, pc=cd9, type=2
cd9: Load a78[0:63] --> 
 <-- (72, 73)
 --> (77 [{ 114 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xc00,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049cd9 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xcd9 try:0
Node 76 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 76, pc=cd9, type=20
cd9: Add r78[0:63] --> r78[0:63] 
 <-- (72, 73)
 --> (77 [{ 115 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 48 [{ 127 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 49 [{ 128 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xcd9 try:0
Node 77 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 77, pc=cd9, type=10
cd9: Return --> 
 <-- (74, 75, 76)
 --> (7 [{ 116 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 117 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 118 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 119 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 48 [{ 120 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 49 [{ 121 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 14 [{ 122 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 23 [{ 123 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 29 [{ 124 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 35 [{ 125 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xcd9 try:0
Node 43 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 43, pc=c89, type=29
c89: LogicalOp r82[0:63] --> r82[0:63] r41[0:63] 
 <-- (42)
 --> (44 [{ 57 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 45 [{ 59 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc89 try:0
Node 44 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 44, pc=c8d, type=19
c8d: Cmp r83[0:63] r82[0:63] --> r41[0:63] 
 <-- (31, 43)
 --> (47 [{ 61 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc8d try:0
Node 45 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 45, pc=c90, type=21
c90: LEA l80[0:63] l82[0:63] --> r75[0:63] 
 <-- (28, 43)
 --> (47 [{ 62 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 51 [{ 66 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 52 [{ 68 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 56 [{ 75 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 60 [{ 82 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 64 [{ 89 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 67 [{ 94 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc90 try:0
Node 46 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 46, pc=c94, type=13
c94: Copy r216[0:31] --> r74[0:31] 
 <-- (41)
 --> (47 [{ 63 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc94 try:0
Node 47 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 47, pc=c98, type=8
c98: CondBranch r41[0:63] --> 
 <-- (44, 45, 46)
OZGURDBG::instrumenting node:0xc98 try:0
Node 48 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 48, pc=ce8, type=2
ce8: Load a78[0:63] --> 
 <-- (77, 76)
 --> (50 [{ 64 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xc00,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049ce8 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xce8 try:0
Node 49 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 49, pc=ce8, type=20
ce8: Add r78[0:63] --> r78[0:63] 
 <-- (77, 76)
 --> (50 [{ 65 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 71 [{ 101 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 72 [{ 103 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xce8 try:0
Node 50 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 50, pc=ce8, type=10
ce8: Return --> 
 <-- (48, 49)
 --> (51 [{ 67 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 52 [{ 69 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xce8 try:0
Node 51 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 51, pc=c9a, type=21
c9a: LEA l75[0:63] --> r80[0:63] 
 <-- (45, 50)
 --> (53 [{ 70 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 55 [{ 73 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc9a try:0
Node 52 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 52, pc=c9e, type=2
c9e: Load a81[0:63] a75[0:63] --> r74[0:31] 
 <-- (45, 50)
 --> (54 [{ 72 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 8 den: 1 HAHAHA Before num: 8 den: 1 After num: 8 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xc00,0) + 0x4 Reg_R8/0{RegOp}[0,63](0xc89,2) + 0x8 +
consten Term of Formula is: 8
Decoded Instruction PC:7f48ba049c9e Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xc9e try:0
c9e	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4e9c80
Print Src reg info
Name RCX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 75
PTW rcx  @ 0x556e1d4e9c80
Node 53 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 53, pc=ca1, type=19
ca1: Cmp r76[0:63] r80[0:63] --> r41[0:63] 
 <-- (51)
 --> (54 [{ 71 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xca1 try:0
Node 54 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 54, pc=ca4, type=8
ca4: CondBranch r41[0:63] --> 
 <-- (53, 52)
 --> (55 [{ 74 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 56 [{ 76 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xca4 try:0
Node 55 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 55, pc=ca6, type=2
ca6: Load a81[0:63] a80[0:63] --> r74[0:31] 
 <-- (51, 54)
 --> (58 [{ 79 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 12 den: 1 HAHAHA Before num: 12 den: 1 After num: 12 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xc00,0) + 0x4 Reg_R8/0{RegOp}[0,63](0xc89,2) + 0xc +
consten Term of Formula is: 12
Decoded Instruction PC:7f48ba049ca6 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xca6 try:0
ca6	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4ea500
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d4ea500
Node 56 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 56, pc=ca9, type=21
ca9: LEA l75[0:63] --> r80[0:63] 
 <-- (45, 54)
 --> (57 [{ 77 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 59 [{ 80 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xca9 try:0
Node 57 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 57, pc=cad, type=19
cad: Cmp r76[0:63] r80[0:63] --> r41[0:63] 
 <-- (56)
 --> (58 [{ 78 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcad try:0
Node 58 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 58, pc=cb0, type=8
cb0: CondBranch r41[0:63] --> 
 <-- (57, 55)
 --> (59 [{ 81 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 60 [{ 83 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcb0 try:0
Node 59 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 59, pc=cb2, type=2
cb2: Load a81[0:63] a80[0:63] --> r74[0:31] 
 <-- (56, 58)
 --> (62 [{ 86 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 16 den: 1 HAHAHA Before num: 16 den: 1 After num: 16 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xc00,0) + 0x4 Reg_R8/0{RegOp}[0,63](0xc89,2) + 0x10 +
consten Term of Formula is: 16
Decoded Instruction PC:7f48ba049cb2 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xcb2 try:0
cb2	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4eac50
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d4eac50
Node 60 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 60, pc=cb5, type=21
cb5: LEA l75[0:63] --> r80[0:63] 
 <-- (45, 58)
 --> (61 [{ 84 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 63 [{ 87 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcb5 try:0
Node 61 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 61, pc=cb9, type=19
cb9: Cmp r76[0:63] r80[0:63] --> r41[0:63] 
 <-- (60)
 --> (62 [{ 85 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcb9 try:0
Node 62 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 62, pc=cbc, type=8
cbc: CondBranch r41[0:63] --> 
 <-- (61, 59)
 --> (63 [{ 88 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 64 [{ 90 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcbc try:0
Node 63 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 63, pc=cbe, type=2
cbe: Load a81[0:63] a80[0:63] --> r74[0:31] 
 <-- (60, 62)
 --> (66 [{ 93 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 20 den: 1 HAHAHA Before num: 20 den: 1 After num: 20 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xc00,0) + 0x4 Reg_R8/0{RegOp}[0,63](0xc89,2) + 0x14 +
consten Term of Formula is: 20
Decoded Instruction PC:7f48ba049cbe Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xcbe try:0
cbe	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4eb3a0
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d4eb3a0
Node 64 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 64, pc=cc1, type=21
cc1: LEA l75[0:63] --> r80[0:63] 
 <-- (45, 62)
 --> (65 [{ 91 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 68 [{ 96 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcc1 try:0
Node 65 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 65, pc=cc5, type=19
cc5: Cmp r76[0:63] r80[0:63] --> r41[0:63] 
 <-- (64)
 --> (66 [{ 92 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcc5 try:0
Node 66 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 66, pc=cc8, type=8
cc8: CondBranch r41[0:63] --> 
 <-- (65, 63)
 --> (67 [{ 95 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 68 [{ 97 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcc8 try:0
Node 67 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 67, pc=cca, type=20
cca: Add r75[0:63] --> r75[0:63] r41[0:63] 
 <-- (45, 66)
 --> (69 [{ 98 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 74 [{ 107 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcca try:0
Node 68 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 68, pc=cce, type=2
cce: Load a81[0:63] a80[0:63] --> r74[0:31] 
 <-- (64, 66)
 --> (70 [{ 100 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 24 den: 1 HAHAHA Before num: 24 den: 1 After num: 24 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xc00,0) + 0x4 Reg_R8/0{RegOp}[0,63](0xc89,2) + 0x18 +
consten Term of Formula is: 24
Decoded Instruction PC:7f48ba049cce Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xcce try:0
cce	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4ebaf0
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d4ebaf0
Node 69 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 69, pc=cd1, type=19
cd1: Cmp r76[0:63] r75[0:63] --> r41[0:63] 
 <-- (67)
 --> (70 [{ 99 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcd1 try:0
Node 70 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 70, pc=cd4, type=8
cd4: CondBranch r41[0:63] --> 
 <-- (69, 68)
 --> (71 [{ 102 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 72 [{ 104 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcd4 try:0
Node 8 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=c11, type=30
c11: Shift r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (6)
 --> (9 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc11 try:0
Node 9 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=c15, type=23
c15: Sub r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (8)
 --> (10 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc15 try:0
Node 10 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=c18, type=29
c18: LogicalOp r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (9)
 --> (11 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 18 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 22 [{ 22 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 26 [{ 28 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 30 [{ 32 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 31 [{ 35 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 32 [{ 36 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc18 try:0
Node 11 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=c1b, type=21
c1b: LEA l74[0:63] --> r75[0:63] 
 <-- (10)
 --> (12 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc1b try:0
Node 12 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=c1f, type=19
c1f: Cmp r75[0:63] --> r41[0:63] 
 <-- (11)
 --> (13 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc1f try:0
Node 13 of type MoveCC, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=c23, type=15
c23: MoveCC r80[0:63] r41[0:63] --> r75[0:63] 
 <-- (7, 12)
 --> (15 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 17 [{ 13 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc23 try:0
Node 14 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=c27, type=21
c27: LEA l76[0:63] --> r80[0:63] 
 <-- (77)
 --> (15 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 16 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc27 try:0
Node 15 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=c2b, type=19
c2b: Cmp r75[0:63] r80[0:63] --> r41[0:63] 
 <-- (13, 14)
 --> (16 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc2b try:0
Node 16 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=c2e, type=8
c2e: CondBranch r41[0:63] --> 
 <-- (15, 5)
 --> (17 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc2e try:0
Node 17 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=cf0, type=28
cf0: Xor r75[0:31] r75[0:31] --> r75[0:31] r41[0:31] 
 <-- (13, 16)
 --> (18 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcf0 try:0
Node 18 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=cf2, type=7
cf2: UncondBranch --> 
 <-- (17)
 --> (19 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xcf2 try:0
Node 19 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=c34, type=28
c34: Xor r80[0:31] r80[0:31] --> r80[0:31] r41[0:31] 
 <-- (14, 18)
 --> (21 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc34 try:0
Node 20 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 20, pc=c36, type=29
c36: LogicalOp r74[0:63] r74[0:63] --> r41[0:63] 
 <-- (10, 18)
 --> (21 [{ 20 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc36 try:0
Node 21 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 21, pc=c39, type=8
c39: CondBranch r41[0:63] --> 
 <-- (20, 19)
 --> (22 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc39 try:0
Node 22 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 22, pc=c3b, type=19
c3b: Cmp r74[0:63] --> r41[0:63] 
 <-- (10, 21)
 --> (24 [{ 24 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc3b try:0
Node 23 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=c3f, type=13
c3f: Copy --> r80[0:31] 
 <-- (77)
 --> (24 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 25 [{ 26 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc3f try:0
Node 24 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 24, pc=c44, type=8
c44: CondBranch r41[0:63] --> 
 <-- (22, 23)
 --> (25 [{ 27 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 26 [{ 29 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 30 [{ 33 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 32 [{ 37 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc44 try:0
Node 25 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 25, pc=c46, type=28
c46: Xor r80[0:31] r80[0:31] --> r80[0:31] r41[0:31] 
 <-- (23, 24)
 --> (40 [{ 46 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc46 try:0
Node 26 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 26, pc=c48, type=19
c48: Cmp r74[0:63] --> r41[0:63] 
 <-- (10, 24)
 --> (27 [{ 30 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc48 try:0
Node 27 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 27, pc=c4c, type=14
c4c: Move r41[0:31] --> r80[0:7] 
 <-- (26)
 --> (28 [{ 31 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc4c try:0
Node 28 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 28, pc=c50, type=20
c50: Add r80[0:63] --> r80[0:63] r41[0:63] 
 <-- (27)
 --> (40 [{ 47 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 45 [{ 58 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc50 try:0
Node 29 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 29, pc=c54, type=13
c54: Copy r76[0:63] --> r83[0:63] 
 <-- (77)
 --> (31 [{ 34 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc54 try:0
Node 30 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 30, pc=c57, type=21
c57: LEA l81[0:63] l74[0:63] --> r75[0:63] 
 <-- (10, 24)
 --> (37 [{ 41 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 38 [{ 42 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc57 try:0
Node 31 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 31, pc=c5b, type=23
c5b: Sub r83[0:63] r74[0:63] --> r83[0:63] r41[0:63] 
 <-- (29, 10)
 --> (33 [{ 38 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 42 [{ 53 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 44 [{ 56 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc5b try:0
Node 32 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 32, pc=c5e, type=28
c5e: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (10, 24)
 --> (36 [{ 40 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc5e try:0
Node 33 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 33, pc=c60, type=13
c60: Copy r83[0:63] --> r82[0:63] 
 <-- (31)
 --> (34 [{ 39 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc60 try:0
Node 34 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 34, pc=c63, type=30
c63: Shift r82[0:63] --> r82[0:63] r41[0:63] 
 <-- (33)
 --> (39 [{ 43 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc63 try:0
Node 35 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 35, pc=c67, type=31
c67: NOP --> 
 <-- (77)
 --> (40 [{ 48 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc67 try:0
Node 36 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 36, pc=c70, type=20
c70: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (32)
 --> (39 [{ 44 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc70 try:0
Node 37 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 37, pc=c74, type=2
c74: Load a75[0:63] --> r216[0:127] 
 <-- (30)
 --> (40 [{ 49 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 41 [{ 51 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA Before num: 4 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{LEAOp}[0,63](0xc00,0) + 0x4 Reg_RAX/0{RegOp}[0,31](0xc18,4) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049c74 Reloc:7f48ba049000 len:4 disp:0 scale:1
OZGURDBG::instrumenting node:0xc74 try:0
c74	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RCX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 75
PTW rcx  @ 0x556e1d4ec3f0
Node 38 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 38, pc=c78, type=20
c78: Add r75[0:63] --> r75[0:63] r41[0:63] 
 <-- (30)
 --> (40 [{ 50 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc78 try:0
Node 39 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 39, pc=c7c, type=19
c7c: Cmp r82[0:63] r74[0:63] --> r41[0:63] 
 <-- (34, 36)
 --> (40 [{ 45 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc7c try:0
Node 40 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 40, pc=c7f, type=8
c7f: CondBranch r41[0:63] --> 
 <-- (39, 25, 28, 35, 37, 38)
 --> (41 [{ 52 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 42 [{ 54 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc7f try:0
Node 41 of type Shuffle, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 41, pc=c81, type=16
c81: Shuffle r216[0:127] --> r216[0:127] 
 <-- (37, 40)
 --> (46 [{ 60 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc81 try:0
Node 42 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 42, pc=c86, type=13
c86: Copy r83[0:63] --> r82[0:63] 
 <-- (31, 40)
 --> (43 [{ 55 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xc86 try:0
c08
	c00-0
	c03-0
c33
	c09-0
	c0c-0
	c11-0
	c15-0
	c18-0
	c1b-0
	c1f-0
	c23-0
	c27-0
	c2b-0
	c2e-0
c3a
	c34-0
	c36-0
	c39-0
c45
	c3b-0
	c3f-0
	c44-0
c53
	c46-0
	c48-0
	c4c-0
	c50-0
c6f
	c54-0
	c57-0
	c5b-0
	c5e-0
	c60-0
	c63-0
	c67-0
c80
	c70-0
	c74-0
	c78-0
	c7c-0
	c7f-0
c99
	c81-0
	c86-0
	c89-0
	c8d-0
	c90-0
	c94-0
	c98-0
ca5
	c9a-0
	c9e-0
	ca1-0
	ca4-0
cb1
	ca6-0
	ca9-0
	cad-0
	cb0-0
cbd
	cb2-0
	cb5-0
	cb9-0
	cbc-0
cc9
	cbe-0
	cc1-0
	cc5-0
	cc8-0
cd5
	cca-0
	cce-0
	cd1-0
	cd4-0
cd9
	cd6-0
	cd9-1
ce1
	ce0-0
ce3
	ce2-1
ce9
	ce8-1
cf3
	cf0-0
	cf2-0
ffffffffffffffff
c08-0
c08-0
c33-0
c33-0
c3a-0
c3a-0
c45-0
c45-0
c53-0
c53-0
c6f-0
c6f-0
c80-0
c80-0
c99-0
c99-0
ca5-0
ca5-0
cb1-0
cb1-0
cbd-0
cbd-0
cc9-0
cc9-0
cd5-0
cd5-0
cd9-0
cd9-0
ce1-0
ce1-0
ce3-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load atce2
Node has 1 src regs
Node has 0 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d4ece50
ce3-0
ce9-1
Instrument a frame load and add second -1 as multuiplier
ce9-1
cf3-0
cf3-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:10	frame:3	strided:7	indirect:0
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Str1_x2
Name of the routine is: ubench_1D_Ind_x1_shfl
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Ind_x1_shfl start: 0xd00 offset: 0xd00 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Ind_x1_shfl 0x7f48ba049000'
OZGURDBG discover_CFG: 0xd00 0xd00 0xd2b
OZGURIMM case RELLBR at pc 0x7f48ba049d03 imm:0
OZGURDBGSLICE at IP 7f48ba049d03 imm_values:23
OZGURDBG discover_CFG: 0x7f48ba049d28 0xd00 0xd2b
OZGURDBG discover_CFG: 0xd28 0xd00 0xd2b
OZGURIMM Stack uop at pc 0x7f48ba049d2a imm:0
OZGURDBG discover_CFG: 0xd05 0xd00 0xd2b
OZGURIMM case RELLBR at pc 0x7f48ba049d1d imm:0
OZGURDBGSLICE at IP 7f48ba049d1d imm_values:fffffffffffffff1
OZGURDBG discover_CFG: 0x7f48ba049d10 0xd00 0xd2b
OZGURDBG discover_CFG: 0xd10 0xd00 0xd2b
OZGURDBG discover_CFG: 0xd1f 0xd00 0xd2b
OZGURIMM Stack uop at pc 0x7f48ba049d1f imm:0
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Ind_x1_shfl'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049d03 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049d2a imm:0
OZGURDECODE@PC at IP 0x7f48ba049d05 scale:4
OZGURDCODE@PC at IP 0x7f48ba049d09 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049d13 imm:4
OZGURDECODE@PC at IP 0x7f48ba049d1a scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049d1d imm:0
OZGURDBGSLICE at IP d1a scale:4
OZGURIMM Stack uop at pc 0x7f48ba049d1f imm:0
 This is Rslice 0x556e1d4b3190

  ** StrideSlice::Slice, block [0xd10,0xd1f], from_uop=0, on reg Name RSI {type MemOp(2), stack=0, [0,63]}, start_pc=0xd10, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xd10,0xd1f], from_uop=2, on reg Name RSI {type RegOp(1), stack=0, [0,63]}, start_pc=0xd13, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2
OZGURDBGSLICE at IP d1a scale:4

  ** StrideSlice::Slice, block [0xd10,0xd1f], from_uop=4, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xd1a, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xd10,0xd1f], from_uop=1, on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0xd10, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:0

  ** StrideSlice::Slice, block [0xd10,0xd1f], from_uop=4, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xd1a, start_be=0, start_rank=1
build_loops_for_interval routine: ubench_1D_Ind_x1_shfl'
build_loops_for_interval routine: ubench_1D_Ind_x1_shfl'
OZGURIMM0 if signed at pc 0x7f48ba049d13 imm:4
OZGURDECODE@PC at IP 0x7f48ba049d1a scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049d1d imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049d03 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049d2a imm:0
OZGURDECODE@PC at IP 0x7f48ba049d05 scale:4
OZGURDCODE@PC at IP 0x7f48ba049d09 disp:0
OZGURIMM Stack uop at pc 0x7f48ba049d1f imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Ind_x1_shfl'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Ind_x1_shfl'
In SchedDG constructor for routine ubench_1D_Ind_x1_shfl, pathId 0xd00/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Ind_x1_shfl'
OZGURIMM case RELLBR at pc 0x7f48ba049d03 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049d2a imm:0
OZGURDECODE@PC at IP 0x7f48ba049d05 scale:4
OZGURDCODE@PC at IP 0x7f48ba049d09 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049d13 imm:4
OZGURDECODE@PC at IP 0x7f48ba049d1a scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049d1d imm:0
OZGURIMM Stack uop at pc 0x7f48ba049d1f imm:0
Sniper Routine: ubench_1D_Ind_x1_shfl StartAddr:d00
OZGURDBGX3 #Blocks: 6
	Block[0] 's startAddres: d00 endAddress:  d05
		instruction addres:d00
		instruction addres:d03
d00-0
d03-0

	Block[1] 's startAddres: d28 endAddress:  d2b
		instruction addres:d28
		instruction addres:d2a
d28-0
d2a-0

	Block[2] 's startAddres: d05 endAddress:  d10
		instruction addres:d05
		instruction addres:d09
d05-0
d09-0

	Block[3] 's startAddres: d10 endAddress:  d1f
		instruction addres:d10
		instruction addres:d13
		instruction addres:d17
		instruction addres:d1a
		instruction addres:d1d
d10-0
d13-0
d17-0
d1a-0
d1d-0

	Block[4] 's startAddres: d1f endAddress:  d21
		instruction addres:d1f
d1f-0

	Block[5] 's startAddres: 0 endAddress:  0
Node Oxd2a is Frame
Node Oxd1f is Frame
d04
	d00-0
	d03-0
d0f
	d05-0
	d09-0
d1e
	d10-0
	d13-0
	d17-0
	d1a-0
	d1d-0
d20
	d1f-1
d2a
	d28-0
	d2a-1
ffffffffffffffff
Address	type	class
Node 7 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=d2a, type=20
d2a: Add r78[0:63] --> r78[0:63] 
 <-- (19, 18)
 --> (8 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 17 [{ 12 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 14 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd2a try:0
Node 6 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=d2a, type=2
d2a: Load a78[0:63] --> 
 <-- (19, 18)
 --> (8 [{ 3 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xd00,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d2a Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xd2a try:0
Node 5 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=d28, type=28
d28: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (19, 15)
 --> (8 [{ 4 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd28 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=d03, type=8
d03: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xd03 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=d00, type=29
d00: LogicalOp r76[0:63] r76[0:63] --> r41[0:63] 
 <-- (19, 9)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd00 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 15 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 15, pc=d1a, type=2
d1a: Load a81[0:63] a74[0:63] --> r74[0:31] 
 <-- (12)
 --> (16 [{ 10 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 27 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xd10,0) +  Reg_RDI/0{MemOp}[0,63](0xd00,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d1a Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xd1a try:0
d1a	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d2bfe90
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d2bfe90
Node 17 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=d1f, type=2
d1f: Load a78[0:63] --> 
 <-- (7, 16)
 --> (19 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xd00,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d1f Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xd1f try:0
Node 14 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 14, pc=d17, type=19
d17: Cmp r76[0:63] r80[0:63] --> r41[0:63] 
 <-- (9, 13)
 --> (16 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd17 try:0
Node 18 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=d1f, type=20
d1f: Add r78[0:63] --> r78[0:63] 
 <-- (7, 16)
 --> (19 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 28 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 7 [{ 29 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd1f try:0
Node 13 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 13, pc=d13, type=20
d13: Add r80[0:63] --> r80[0:63] r41[0:63] 
 <-- (19, 13)
 --> (14 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 30 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 11 [{ 32 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 33 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd13 try:0
Node 16 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 16, pc=d1d, type=8
d1d: CondBranch r41[0:63] --> 
 <-- (14, 15, 10)
 --> (17 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd1d try:0
Node 9 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=d05, type=21
d05: LEA l80[0:63] l76[0:63] --> r76[0:63] 
 <-- (19, 13, 9)
 --> (14 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 26 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 9 [{ 31 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd05 try:0
Node 19 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=d1f, type=10
d1f: Return --> 
 <-- (17, 18)
 --> (7 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 9 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 10 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 11 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd1f try:0
Node 10 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=d09, type=31
d09: NOP --> 
 <-- (19)
 --> (16 [{ 11 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd09 try:0
Node 12 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=d10, type=14
d10: Move t0[0:63] --> r74[0:63] 
 <-- (11)
 --> (15 [{ 8 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd10 try:0
Node 8 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=d2a, type=10
d2a: Return --> 
 <-- (7, 6, 5)
OZGURDBG::instrumenting node:0xd2a try:0
Node 11 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 11, pc=d10, type=2
d10: Load a80[0:63] --> t0[0:31] 
 <-- (19, 13)
 --> (12 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSI/0{MemOp}[0,63](0xd00,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d10 Reloc:7f48ba049000 len:3 disp:0 scale:1
OZGURDBG::instrumenting node:0xd10 try:0
d10	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d4ca940
d04
	d00-0
	d03-0
d0f
	d05-0
	d09-0
d1e
	d10-0
	d13-0
	d17-0
	d1a-0
	d1d-0
d20
	d1f-1
d2a
	d28-0
	d2a-1
ffffffffffffffff
d04-0
d04-0
d0f-0
d0f-0
d1e-0
d1e-0
d20-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load atd2a
Node has 1 src regs
Node has 0 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d4d44e0
d20-1
d2a-0
d2a-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:4	frame:2	strided:1	indirect:1
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Ind_x1_shfl
Name of the routine is: ubench_1D_Ind_x1_func
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Ind_x1_func start: 0xd30 offset: 0xd30 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Ind_x1_func 0x7f48ba049000'
OZGURDBG discover_CFG: 0xd30 0xd30 0xd5b
OZGURIMM case RELLBR at pc 0x7f48ba049d33 imm:0
OZGURDBGSLICE at IP 7f48ba049d33 imm_values:23
OZGURDBG discover_CFG: 0x7f48ba049d58 0xd30 0xd5b
OZGURDBG discover_CFG: 0xd58 0xd30 0xd5b
OZGURIMM Stack uop at pc 0x7f48ba049d5a imm:0
OZGURDBG discover_CFG: 0xd35 0xd30 0xd5b
OZGURIMM case RELLBR at pc 0x7f48ba049d4d imm:0
OZGURDBGSLICE at IP 7f48ba049d4d imm_values:fffffffffffffff1
OZGURDBG discover_CFG: 0x7f48ba049d40 0xd30 0xd5b
OZGURDBG discover_CFG: 0xd40 0xd30 0xd5b
OZGURDBG discover_CFG: 0xd4f 0xd30 0xd5b
OZGURIMM Stack uop at pc 0x7f48ba049d4f imm:0
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Ind_x1_func'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049d33 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049d5a imm:0
OZGURDECODE@PC at IP 0x7f48ba049d35 scale:4
OZGURDCODE@PC at IP 0x7f48ba049d39 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049d43 imm:4
OZGURDECODE@PC at IP 0x7f48ba049d4a scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049d4d imm:0
OZGURDBGSLICE at IP d4a scale:4
OZGURIMM Stack uop at pc 0x7f48ba049d4f imm:0
 This is Rslice 0x556e1d4b2bd0

  ** StrideSlice::Slice, block [0xd40,0xd4f], from_uop=0, on reg Name RSI {type MemOp(2), stack=0, [0,63]}, start_pc=0xd40, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xd40,0xd4f], from_uop=2, on reg Name RSI {type RegOp(1), stack=0, [0,63]}, start_pc=0xd43, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2
OZGURDBGSLICE at IP d4a scale:4

  ** StrideSlice::Slice, block [0xd40,0xd4f], from_uop=4, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xd4a, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xd40,0xd4f], from_uop=1, on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0xd40, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:0

  ** StrideSlice::Slice, block [0xd40,0xd4f], from_uop=4, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xd4a, start_be=0, start_rank=1
build_loops_for_interval routine: ubench_1D_Ind_x1_func'
build_loops_for_interval routine: ubench_1D_Ind_x1_func'
OZGURIMM0 if signed at pc 0x7f48ba049d43 imm:4
OZGURDECODE@PC at IP 0x7f48ba049d4a scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049d4d imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049d33 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049d5a imm:0
OZGURDECODE@PC at IP 0x7f48ba049d35 scale:4
OZGURDCODE@PC at IP 0x7f48ba049d39 disp:0
OZGURIMM Stack uop at pc 0x7f48ba049d4f imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Ind_x1_func'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Ind_x1_func'
In SchedDG constructor for routine ubench_1D_Ind_x1_func, pathId 0xd30/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Ind_x1_func'
OZGURIMM case RELLBR at pc 0x7f48ba049d33 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049d5a imm:0
OZGURDECODE@PC at IP 0x7f48ba049d35 scale:4
OZGURDCODE@PC at IP 0x7f48ba049d39 disp:0
OZGURIMM0 if signed at pc 0x7f48ba049d43 imm:4
OZGURDECODE@PC at IP 0x7f48ba049d4a scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049d4d imm:0
OZGURIMM Stack uop at pc 0x7f48ba049d4f imm:0
Sniper Routine: ubench_1D_Ind_x1_func StartAddr:d30
OZGURDBGX3 #Blocks: 6
	Block[0] 's startAddres: d30 endAddress:  d35
		instruction addres:d30
		instruction addres:d33
d30-0
d33-0

	Block[1] 's startAddres: d58 endAddress:  d5b
		instruction addres:d58
		instruction addres:d5a
d58-0
d5a-0

	Block[2] 's startAddres: d35 endAddress:  d40
		instruction addres:d35
		instruction addres:d39
d35-0
d39-0

	Block[3] 's startAddres: d40 endAddress:  d4f
		instruction addres:d40
		instruction addres:d43
		instruction addres:d47
		instruction addres:d4a
		instruction addres:d4d
d40-0
d43-0
d47-0
d4a-0
d4d-0

	Block[4] 's startAddres: d4f endAddress:  d51
		instruction addres:d4f
d4f-0

	Block[5] 's startAddres: 0 endAddress:  0
Node Oxd5a is Frame
Node Oxd4f is Frame
d34
	d30-0
	d33-0
d3f
	d35-0
	d39-0
d4e
	d40-0
	d43-0
	d47-0
	d4a-0
	d4d-0
d50
	d4f-1
d5a
	d58-0
	d5a-1
ffffffffffffffff
Address	type	class
Node 7 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=d5a, type=20
d5a: Add r78[0:63] --> r78[0:63] 
 <-- (19, 18)
 --> (8 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 17 [{ 12 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 14 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd5a try:0
Node 6 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=d5a, type=2
d5a: Load a78[0:63] --> 
 <-- (19, 18)
 --> (8 [{ 3 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xd30,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d5a Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xd5a try:0
Node 5 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=d58, type=28
d58: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (19, 15)
 --> (8 [{ 4 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd58 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=d33, type=8
d33: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xd33 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=d30, type=29
d30: LogicalOp r76[0:63] r76[0:63] --> r41[0:63] 
 <-- (19, 9)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd30 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 18 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 18, pc=d4f, type=20
d4f: Add r78[0:63] --> r78[0:63] 
 <-- (7, 16)
 --> (19 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 28 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 7 [{ 29 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd4f try:0
Node 13 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 13, pc=d43, type=20
d43: Add r80[0:63] --> r80[0:63] r41[0:63] 
 <-- (19, 13)
 --> (14 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 9 [{ 30 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 11 [{ 32 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 33 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd43 try:0
Node 17 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=d4f, type=2
d4f: Load a78[0:63] --> 
 <-- (7, 16)
 --> (19 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xd30,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d4f Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xd4f try:0
Node 14 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 14, pc=d47, type=19
d47: Cmp r76[0:63] r80[0:63] --> r41[0:63] 
 <-- (9, 13)
 --> (16 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd47 try:0
Node 16 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 16, pc=d4d, type=8
d4d: CondBranch r41[0:63] --> 
 <-- (14, 15, 10)
 --> (17 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd4d try:0
Node 19 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=d4f, type=10
d4f: Return --> 
 <-- (18, 17)
 --> (7 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 9 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 10 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 11 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd4f try:0
Node 9 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=d35, type=21
d35: LEA l80[0:63] l76[0:63] --> r76[0:63] 
 <-- (19, 13, 9)
 --> (14 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 26 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 9 [{ 31 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd35 try:0
Node 15 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 15, pc=d4a, type=2
d4a: Load a81[0:63] a74[0:63] --> r74[0:31] 
 <-- (12)
 --> (16 [{ 10 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 27 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xd40,0) +  Reg_RDI/0{MemOp}[0,63](0xd30,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d4a Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xd4a try:0
d4a	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d5092e0
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d5092e0
Node 10 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=d39, type=31
d39: NOP --> 
 <-- (19)
 --> (16 [{ 11 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd39 try:0
Node 11 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 11, pc=d40, type=2
d40: Load a80[0:63] --> t0[0:31] 
 <-- (19, 13)
 --> (12 [{ 5 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSI/0{MemOp}[0,63](0xd30,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d40 Reloc:7f48ba049000 len:3 disp:0 scale:1
OZGURDBG::instrumenting node:0xd40 try:0
d40	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d4b0010
Node 8 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=d5a, type=10
d5a: Return --> 
 <-- (7, 6, 5)
OZGURDBG::instrumenting node:0xd5a try:0
Node 12 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=d40, type=14
d40: Move t0[0:63] --> r74[0:63] 
 <-- (11)
 --> (15 [{ 8 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd40 try:0
d34
	d30-0
	d33-0
d3f
	d35-0
	d39-0
d4e
	d40-0
	d43-0
	d47-0
	d4a-0
	d4d-0
d50
	d4f-1
d5a
	d58-0
	d5a-1
ffffffffffffffff
d34-0
d34-0
d3f-0
d3f-0
d4e-0
d4e-0
d50-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load atd5a
Node has 1 src regs
Node has 0 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d512e20
d50-1
d5a-0
d5a-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:4	frame:2	strided:1	indirect:1
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Ind_x1_func
Name of the routine is: ubench_1D_Ind_x1_rand
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Ind_x1_rand start: 0xd60 offset: 0xd60 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Ind_x1_rand 0x7f48ba049000'
OZGURDBG discover_CFG: 0xd60 0xd60 0xd88
OZGURIMM case RELLBR at pc 0x7f48ba049d63 imm:0
OZGURDBGSLICE at IP 7f48ba049d63 imm_values:1e
OZGURDBG discover_CFG: 0x7f48ba049d83 0xd60 0xd88
OZGURDBG discover_CFG: 0xd83 0xd60 0xd88
OZGURIMM Stack uop at pc 0x7f48ba049d87 imm:0
OZGURDBG discover_CFG: 0xd65 0xd60 0xd88
OZGURIMM case RELLBR at pc 0x7f48ba049d81 imm:0
OZGURDBGSLICE at IP 7f48ba049d81 imm_values:ffffffffffffffed
OZGURDBG discover_CFG: 0x7f48ba049d70 0xd60 0xd88
OZGURDBG discover_CFG: 0xd70 0xd60 0xd88
OZGURDBG discover_CFG: 0xd83 0xd60 0xd88
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Ind_x1_rand'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049d63 imm:0
OZGURDECODE@PC at IP 0x7f48ba049d67 scale:1
OZGURDCODE@PC at IP 0x7f48ba049d67 disp:0
OZGURDECODE@PC at IP 0x7f48ba049d70 scale:4
OZGURDECODE@PC at IP 0x7f48ba049d74 scale:4
OZGURDECODE@PC at IP 0x7f48ba049d77 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049d7a imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049d81 imm:0
OZGURDBGSLICE at IP d70 scale:4
OZGURDBGSLICE at IP d74 scale:4
OZGURDBGSLICE at IP d77 scale:4
OZGURDECODE@PC at IP 0x7f48ba049d83 scale:4
OZGURDCODE@PC at IP 0x7f48ba049d83 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049d87 imm:0
OZGURDBGSLICE at IP d83 scale:4
OZGURDBGSLICE at IP d83 disp:fffffffffffffffc
 This is Rslice 0x556e1d4b0a20
OZGURDBGSLICE at IP d70 scale:4

  ** StrideSlice::Slice, block [0xd70,0xd83], from_uop=0, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xd70, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xd70,0xd83], from_uop=4, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xd7a, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xd70,0xd83], from_uop=0, on reg Name RSI {type MemOp(2), stack=0, [0,63]}, start_pc=0xd70, start_be=0, start_rank=1
OZGURDBGSLICE at IP d74 scale:4

  ** StrideSlice::Slice, block [0xd70,0xd83], from_uop=2, on reg Name RCX {type MemOp(2), stack=0, [0,63]}, start_pc=0xd74, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xd70,0xd83], from_uop=1, on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0xd70, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:0

  ** StrideSlice::Slice, block [0xd70,0xd83], from_uop=2, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xd74, start_be=0, start_rank=1
OZGURDBGSLICE at IP d77 scale:4

  ** StrideSlice::Slice, block [0xd70,0xd83], from_uop=3, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xd77, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xd70,0xd83], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xd77, start_be=0, start_rank=1
build_loops_for_interval routine: ubench_1D_Ind_x1_rand'
build_loops_for_interval routine: ubench_1D_Ind_x1_rand'
OZGURDECODE@PC at IP 0x7f48ba049d70 scale:4
OZGURDECODE@PC at IP 0x7f48ba049d74 scale:4
OZGURDECODE@PC at IP 0x7f48ba049d77 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049d7a imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049d81 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049d63 imm:0
OZGURDECODE@PC at IP 0x7f48ba049d67 scale:1
OZGURDCODE@PC at IP 0x7f48ba049d67 disp:0
OZGURDECODE@PC at IP 0x7f48ba049d83 scale:4
OZGURDCODE@PC at IP 0x7f48ba049d83 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049d87 imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Ind_x1_rand'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Ind_x1_rand'
In SchedDG constructor for routine ubench_1D_Ind_x1_rand, pathId 0xd60/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Ind_x1_rand'
OZGURIMM case RELLBR at pc 0x7f48ba049d63 imm:0
OZGURDECODE@PC at IP 0x7f48ba049d67 scale:1
OZGURDCODE@PC at IP 0x7f48ba049d67 disp:0
OZGURDECODE@PC at IP 0x7f48ba049d70 scale:4
OZGURDECODE@PC at IP 0x7f48ba049d74 scale:4
OZGURDECODE@PC at IP 0x7f48ba049d77 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049d7a imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049d81 imm:0
OZGURDECODE@PC at IP 0x7f48ba049d83 scale:4
OZGURDCODE@PC at IP 0x7f48ba049d83 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049d87 imm:0
Sniper Routine: ubench_1D_Ind_x1_rand StartAddr:d60
OZGURDBGX3 #Blocks: 5
	Block[0] 's startAddres: d60 endAddress:  d65
		instruction addres:d60
		instruction addres:d63
d60-0
d63-0

	Block[1] 's startAddres: d65 endAddress:  d70
		instruction addres:d65
		instruction addres:d67
d65-0
d67-0

	Block[2] 's startAddres: d70 endAddress:  d83
		instruction addres:d70
		instruction addres:d74
		instruction addres:d77
		instruction addres:d7a
		instruction addres:d7e
		instruction addres:d81
d70-0
d74-0
d77-0
d7a-0
d7e-0
d81-0

	Block[3] 's startAddres: d83 endAddress:  d88
		instruction addres:d83
		instruction addres:d87
d83-0
d87-0

	Block[4] 's startAddres: 0 endAddress:  0
Node Oxd87 is Frame
d64
	d60-0
	d63-0
d6f
	d65-0
	d67-0
d82
	d70-0
	d74-0
	d77-0
	d7a-0
	d7e-0
	d81-0
d87
	d83-0
	d87-1
ffffffffffffffff
Address	type	class
Node 7 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 7, pc=d70, type=2
d70: Load a80[0:63] a74[0:63] --> t0[0:31] 
 <-- (5)
 --> (8 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSI/0{MemOp}[0,63](0xd60,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d70 Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xd70 try:0
d70	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d5134c0
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d5134c0
Node 6 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=d67, type=31
d67: NOP --> 
 <-- (17)
 --> (13 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd67 try:0
Node 5 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=d65, type=28
d65: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (17, 14)
 --> (7 [{ 2 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 8 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd65 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=d63, type=8
d63: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xd63 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=d60, type=29
d60: LogicalOp r76[0:63] r76[0:63] --> r41[0:63] 
 <-- (17)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd60 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 15 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=d87, type=2
d87: Load a78[0:63] --> 
 <-- (17, 16)
 --> (17 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xd60,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d87 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xd87 try:0
Node 8 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 8, pc=d70, type=14
d70: Move t0[0:63] --> r75[0:63] 
 <-- (7)
 --> (9 [{ 4 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd70 try:0
Node 16 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=d87, type=20
d87: Add r78[0:63] --> r78[0:63] 
 <-- (17, 16)
 --> (17 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 24 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 25 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd87 try:0
Node 10 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 10, pc=d77, type=3
d77: Store r75[0:31] a81[0:63] a74[0:63] --> 
 <-- (9, 9, 5)
 --> (9 [{ 6 TRUE_DEPENDENCY MEMORY_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xd60,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d77 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xd77 try:0
Node 12 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=d7e, type=19
d7e: Cmp r76[0:63] r74[0:63] --> r41[0:63] 
 <-- (11)
 --> (13 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd7e try:0
Node 11 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 11, pc=d7a, type=20
d7a: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (5)
 --> (12 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd7a try:0
Node 13 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 13, pc=d81, type=8
d81: CondBranch r41[0:63] --> 
 <-- (12, 6, 10)
OZGURDBG::instrumenting node:0xd81 try:0
Node 17 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=d87, type=10
d87: Return --> 
 <-- (15, 16, 14)
 --> (6 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 14 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xd87 try:0
Node 9 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 9, pc=d74, type=2
d74: Load a81[0:63] a75[0:63] --> r75[0:31] 
 <-- (8, 10)
 --> (10 [{ 5 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xd70,0) +  Reg_RDI/0{MemOp}[0,63](0xd60,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049d74 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xd74 try:0
d74	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4e5650
Print Src reg info
Name RCX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 75
PTW rcx  @ 0x556e1d4e5650
Node 14 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=d83, type=2
d83: Load a81[0:63] a76[0:63] --> r74[0:31] 
 <-- (17)
 --> (17 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 23 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA index:3 num: -4 den: 1 HAHAHA Before num: -4 den: 1 After num: -4 den: 1
ref->base:  0x4 Reg_RDX/0{MemOp}[0,63](0xd60,0) +  Reg_RDI/0{MemOp}[0,63](0xd60,0) + -0x4 +
consten Term of Formula is: -4
Decoded Instruction PC:7f48ba049d83 Reloc:7f48ba049000 len:4 disp:fffffffffffffffc scale:4
OZGURDBG::instrumenting node:0xd83 try:0
d83	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4b3220
Print Src reg info
Name RDX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 76
PTW rdx  @ 0x556e1d4b3220
d64
	d60-0
	d63-0
d6f
	d65-0
	d67-0
d82
	d70-0
	d74-0
	d77-0
	d7a-0
	d7e-0
	d81-0
d87
	d83-0
	d87-1
ffffffffffffffff
d64-0
d64-0
d6f-0
d6f-0
d82-0
d82-0
d87-0
d87-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:4	frame:1	strided:2	indirect:1
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Ind_x1_rand
Name of the routine is: ubench_1D_Ind_x2
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Ind_x2 start: 0xd90 offset: 0xd90 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Ind_x2 0x7f48ba049000'
OZGURDBG discover_CFG: 0xd90 0xd90 0xdd2
OZGURIMM case RELLBR at pc 0x7f48ba049d93 imm:0
OZGURDBGSLICE at IP 7f48ba049d93 imm_values:38
OZGURDBG discover_CFG: 0x7f48ba049dcd 0xd90 0xdd2
OZGURDBG discover_CFG: 0xdcd 0xd90 0xdd2
OZGURIMM Stack uop at pc 0x7f48ba049dd1 imm:0
OZGURDBG discover_CFG: 0xd95 0xd90 0xdd2
OZGURIMM case RELLBR at pc 0x7f48ba049db1 imm:0
OZGURDBGSLICE at IP 7f48ba049db1 imm_values:ffffffffffffffed
OZGURDBG discover_CFG: 0x7f48ba049da0 0xd90 0xdd2
OZGURDBG discover_CFG: 0xda0 0xd90 0xdd2
OZGURDBG discover_CFG: 0xdb3 0xd90 0xdd2
OZGURIMM case RELLBR at pc 0x7f48ba049dcb imm:0
OZGURDBGSLICE at IP 7f48ba049dcb imm_values:ffffffffffffffeb
OZGURDBG discover_CFG: 0x7f48ba049db8 0xd90 0xdd2
OZGURDBG discover_CFG: 0xdb8 0xd90 0xdd2
OZGURDBG discover_CFG: 0xdcd 0xd90 0xdd2
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Ind_x2'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049d93 imm:0
OZGURDECODE@PC at IP 0x7f48ba049d97 scale:1
OZGURDCODE@PC at IP 0x7f48ba049d97 disp:0
OZGURDECODE@PC at IP 0x7f48ba049da0 scale:4
OZGURDECODE@PC at IP 0x7f48ba049da4 scale:4
OZGURDECODE@PC at IP 0x7f48ba049da7 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049daa imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049db1 imm:0
OZGURDBGSLICE at IP da0 scale:4
OZGURDBGSLICE at IP da4 scale:4
OZGURDBGSLICE at IP da7 scale:4
OZGURDECODE@PC at IP 0x7f48ba049db8 scale:4
OZGURDECODE@PC at IP 0x7f48ba049dbc scale:4
OZGURDECODE@PC at IP 0x7f48ba049dc0 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049dc4 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049dcb imm:0
OZGURDBGSLICE at IP db8 scale:4
OZGURDBGSLICE at IP dbc scale:4
OZGURDBGSLICE at IP dc0 scale:4
OZGURDECODE@PC at IP 0x7f48ba049dcd scale:4
OZGURDCODE@PC at IP 0x7f48ba049dcd disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049dd1 imm:0
OZGURDBGSLICE at IP dcd scale:4
OZGURDBGSLICE at IP dcd disp:fffffffffffffffc
 This is Rslice 0x556e1d4b0a20
OZGURDBGSLICE at IP da0 scale:4

  ** StrideSlice::Slice, block [0xda0,0xdb3], from_uop=0, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xda0, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xda0,0xdb3], from_uop=4, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xdaa, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xda0,0xdb3], from_uop=0, on reg Name RSI {type MemOp(2), stack=0, [0,63]}, start_pc=0xda0, start_be=0, start_rank=1
OZGURDBGSLICE at IP da4 scale:4

  ** StrideSlice::Slice, block [0xda0,0xdb3], from_uop=2, on reg Name RCX {type MemOp(2), stack=0, [0,63]}, start_pc=0xda4, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xda0,0xdb3], from_uop=1, on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0xda0, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:0

  ** StrideSlice::Slice, block [0xda0,0xdb3], from_uop=2, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xda4, start_be=0, start_rank=1
OZGURDBGSLICE at IP da7 scale:4

  ** StrideSlice::Slice, block [0xda0,0xdb3], from_uop=3, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xda7, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xda0,0xdb3], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xda7, start_be=0, start_rank=1
OZGURDBGSLICE at IP db8 scale:4

  ** StrideSlice::Slice, block [0xdb8,0xdcd], from_uop=0, on reg Name RCX {type MemOp(2), stack=0, [0,63]}, start_pc=0xdb8, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xdb8,0xdcd], from_uop=4, on reg Name RCX {type RegOp(1), stack=0, [0,63]}, start_pc=0xdc4, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xdb8,0xdcd], from_uop=0, on reg Name RSI {type MemOp(2), stack=0, [0,63]}, start_pc=0xdb8, start_be=0, start_rank=1
OZGURDBGSLICE at IP dbc scale:4

  ** StrideSlice::Slice, block [0xdb8,0xdcd], from_uop=2, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xdbc, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xdb8,0xdcd], from_uop=2, on reg Name R8 {type MemOp(2), stack=0, [0,63]}, start_pc=0xdbc, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xdb8,0xdcd], from_uop=1, on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0xdb8, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:0
OZGURDBGSLICE at IP dc0 scale:4

  ** StrideSlice::Slice, block [0xdb8,0xdcd], from_uop=3, on reg Name RCX {type MemOp(2), stack=0, [0,63]}, start_pc=0xdc0, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xdb8,0xdcd], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xdc0, start_be=0, start_rank=1
build_loops_for_interval routine: ubench_1D_Ind_x2'
build_loops_for_interval routine: ubench_1D_Ind_x2'
OZGURDECODE@PC at IP 0x7f48ba049da0 scale:4
OZGURDECODE@PC at IP 0x7f48ba049da4 scale:4
OZGURDECODE@PC at IP 0x7f48ba049da7 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049daa imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049db1 imm:0
build_loops_for_interval routine: ubench_1D_Ind_x2'
OZGURDECODE@PC at IP 0x7f48ba049db8 scale:4
OZGURDECODE@PC at IP 0x7f48ba049dbc scale:4
OZGURDECODE@PC at IP 0x7f48ba049dc0 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049dc4 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049dcb imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049d93 imm:0
OZGURDECODE@PC at IP 0x7f48ba049d97 scale:1
OZGURDCODE@PC at IP 0x7f48ba049d97 disp:0
OZGURDECODE@PC at IP 0x7f48ba049dcd scale:4
OZGURDCODE@PC at IP 0x7f48ba049dcd disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049dd1 imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Ind_x2'
simpleAddBlock
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Ind_x2'
In SchedDG constructor for routine ubench_1D_Ind_x2, pathId 0xd90/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Ind_x2'
OZGURIMM case RELLBR at pc 0x7f48ba049d93 imm:0
OZGURDECODE@PC at IP 0x7f48ba049d97 scale:1
OZGURDCODE@PC at IP 0x7f48ba049d97 disp:0
OZGURDECODE@PC at IP 0x7f48ba049da0 scale:4
OZGURDECODE@PC at IP 0x7f48ba049da4 scale:4
OZGURDECODE@PC at IP 0x7f48ba049da7 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049daa imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049db1 imm:0
OZGURDECODE@PC at IP 0x7f48ba049db8 scale:4
OZGURDECODE@PC at IP 0x7f48ba049dbc scale:4
OZGURDECODE@PC at IP 0x7f48ba049dc0 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049dc4 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049dcb imm:0
OZGURDECODE@PC at IP 0x7f48ba049dcd scale:4
OZGURDCODE@PC at IP 0x7f48ba049dcd disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049dd1 imm:0
Sniper Routine: ubench_1D_Ind_x2 StartAddr:d90
OZGURDBGX3 #Blocks: 7
	Block[0] 's startAddres: d90 endAddress:  d95
		instruction addres:d90
		instruction addres:d93
d90-0
d93-0

	Block[1] 's startAddres: d95 endAddress:  da0
		instruction addres:d95
		instruction addres:d97
d95-0
d97-0

	Block[2] 's startAddres: da0 endAddress:  db3
		instruction addres:da0
		instruction addres:da4
		instruction addres:da7
		instruction addres:daa
		instruction addres:dae
		instruction addres:db1
da0-0
da4-0
da7-0
daa-0
dae-0
db1-0

	Block[3] 's startAddres: db3 endAddress:  db8
		instruction addres:db3
		instruction addres:db5
db3-0
db5-0

	Block[4] 's startAddres: db8 endAddress:  dcd
		instruction addres:db8
		instruction addres:dbc
		instruction addres:dc0
		instruction addres:dc4
		instruction addres:dc8
		instruction addres:dcb
db8-0
dbc-0
dc0-0
dc4-0
dc8-0
dcb-0

	Block[5] 's startAddres: dcd endAddress:  dd2
		instruction addres:dcd
		instruction addres:dd1
dcd-0
dd1-0

	Block[6] 's startAddres: 0 endAddress:  0
Node Oxdd1 is Frame
d94
	d90-0
	d93-0
d9f
	d95-0
	d97-0
db2
	da0-0
	da4-0
	da7-0
	daa-0
	dae-0
	db1-0
db7
	db3-0
	db5-0
dcc
	db8-0
	dbc-0
	dc0-0
	dc4-0
	dc8-0
	dcb-0
dd1
	dcd-0
	dd1-1
ffffffffffffffff
Address	type	class
Node 7 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 7, pc=da0, type=2
da0: Load a80[0:63] a74[0:63] --> t0[0:31] 
 <-- (5)
 --> (8 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSI/0{MemOp}[0,63](0xd90,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049da0 Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xda0 try:0
da0	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d4e6350
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d4e6350
Node 6 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=d97, type=31
d97: NOP --> 
 <-- (26)
 --> (13 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd97 try:0
Node 5 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=d95, type=28
d95: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (26, 23)
 --> (7 [{ 2 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 8 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd95 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=d93, type=8
d93: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xd93 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=d90, type=29
d90: LogicalOp r76[0:63] r76[0:63] --> r41[0:63] 
 <-- (26)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xd90 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 9 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 9, pc=da4, type=2
da4: Load a81[0:63] a75[0:63] --> r75[0:31] 
 <-- (8, 10, 19)
 --> (10 [{ 5 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 14 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 24 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xda0,0) +  Reg_RDI/0{MemOp}[0,63](0xd90,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049da4 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xda4 try:0
da4	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d53c030
Print Src reg info
Name RCX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 75
PTW rcx  @ 0x556e1d53c030
Node 11 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 11, pc=daa, type=20
daa: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (5)
 --> (12 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 21 [{ 29 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdaa try:0
Node 8 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 8, pc=da0, type=14
da0: Move t0[0:63] --> r75[0:63] 
 <-- (7)
 --> (9 [{ 4 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xda0 try:0
Node 10 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 10, pc=da7, type=3
da7: Store r75[0:31] a81[0:63] a74[0:63] --> 
 <-- (9, 9, 5, 18)
 --> (9 [{ 6 TRUE_DEPENDENCY MEMORY_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 18 TRUE_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 21 OUTPUT_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xd90,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049da7 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xda7 try:0
Node 12 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=dae, type=19
dae: Cmp r76[0:63] r74[0:63] --> r41[0:63] 
 <-- (11)
 --> (13 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdae try:0
Node 13 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 13, pc=db1, type=8
db1: CondBranch r41[0:63] --> 
 <-- (12, 6, 10)
 --> (14 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdb1 try:0
Node 14 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=db3, type=28
db3: Xor r75[0:31] r75[0:31] --> r75[0:31] r41[0:31] 
 <-- (9, 13)
 --> (16 [{ 16 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 27 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 20 [{ 28 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdb3 try:0
Node 15 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=db5, type=31
db5: NOP --> 
 <-- (26)
 --> (22 [{ 32 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdb5 try:0
Node 16 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 16, pc=db8, type=2
db8: Load a80[0:63] a75[0:63] --> t0[0:31] 
 <-- (14)
 --> (17 [{ 17 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSI/0{MemOp}[0,63](0xd90,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049db8 Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xdb8 try:0
db8	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d53ce60
Print Src reg info
Name RCX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 75
PTW rcx  @ 0x556e1d53ce60
Node 17 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 17, pc=db8, type=14
db8: Move t0[0:63] --> r82[0:63] 
 <-- (16)
 --> (18 [{ 20 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdb8 try:0
Node 18 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 18, pc=dbc, type=2
dbc: Load a81[0:63] a82[0:63] --> r82[0:31] 
 <-- (10, 17, 19)
 --> (10 [{ 19 ANTI_DEPENDENCY MEMORY_TYPE LOOP_CARRIED(dist=1) Level=1 }], 19 [{ 22 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 26 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xdb8,0) +  Reg_RDI/0{MemOp}[0,63](0xd90,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049dbc Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xdbc try:0
dbc	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d53d550
Print Src reg info
Name R8 {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 82
PTW r8  @ 0x556e1d53d550
Node 19 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 19, pc=dc0, type=3
dc0: Store r82[0:31] a81[0:63] a75[0:63] --> 
 <-- (10, 18, 9, 18, 14)
 --> (18 [{ 23 TRUE_DEPENDENCY MEMORY_TYPE LOOP_CARRIED(dist=1) Level=1 }], 9 [{ 25 TRUE_DEPENDENCY MEMORY_TYPE LOOP_CARRIED(dist=1) Level=1 }], 22 [{ 33 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xd90,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049dc0 Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xdc0 try:0
Node 20 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 20, pc=dc4, type=20
dc4: Add r75[0:63] --> r75[0:63] r41[0:63] 
 <-- (14)
 --> (21 [{ 30 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdc4 try:0
Node 21 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 21, pc=dc8, type=19
dc8: Cmp r74[0:63] r75[0:63] --> r41[0:63] 
 <-- (11, 20)
 --> (22 [{ 31 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdc8 try:0
Node 22 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 22, pc=dcb, type=8
dcb: CondBranch r41[0:63] --> 
 <-- (21, 15, 19)
OZGURDBG::instrumenting node:0xdcb try:0
Node 23 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=dcd, type=2
dcd: Load a81[0:63] a76[0:63] --> r74[0:31] 
 <-- (26)
 --> (26 [{ 34 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 44 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA index:3 num: -4 den: 1 HAHAHA Before num: -4 den: 1 After num: -4 den: 1
ref->base:  0x4 Reg_RDX/0{MemOp}[0,63](0xd90,0) +  Reg_RDI/0{MemOp}[0,63](0xd90,0) + -0x4 +
consten Term of Formula is: -4
Decoded Instruction PC:7f48ba049dcd Reloc:7f48ba049000 len:4 disp:fffffffffffffffc scale:4
OZGURDBG::instrumenting node:0xdcd try:0
dcd	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d53dca0
Print Src reg info
Name RDX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 76
PTW rdx  @ 0x556e1d53dca0
Node 24 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 24, pc=dd1, type=2
dd1: Load a78[0:63] --> 
 <-- (26, 25)
 --> (26 [{ 35 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xd90,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049dd1 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xdd1 try:0
Node 25 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 25, pc=dd1, type=20
dd1: Add r78[0:63] --> r78[0:63] 
 <-- (26, 25)
 --> (26 [{ 36 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 24 [{ 45 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 25 [{ 46 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xdd1 try:0
Node 26 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 26, pc=dd1, type=10
dd1: Return --> 
 <-- (23, 24, 25)
 --> (6 [{ 37 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 38 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 39 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 40 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 23 [{ 41 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 24 [{ 42 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 25 [{ 43 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xdd1 try:0
d94
	d90-0
	d93-0
d9f
	d95-0
	d97-0
db2
	da0-0
	da4-0
	da7-0
	daa-0
	dae-0
	db1-0
db7
	db3-0
	db5-0
dcc
	db8-0
	dbc-0
	dc0-0
	dc4-0
	dc8-0
	dcb-0
dd1
	dcd-0
	dd1-1
ffffffffffffffff
d94-0
d94-0
d9f-0
d9f-0
db2-0
db2-0
db7-0
db7-0
dcc-0
dcc-0
dd1-0
dd1-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:6	frame:1	strided:3	indirect:2
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Ind_x2
Name of the routine is: ubench_1D_Ind_halfx1
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_Ind_halfx1 start: 0xde0 offset: 0xde0 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_Ind_halfx1 0x7f48ba049000'
OZGURDBG discover_CFG: 0xde0 0xde0 0xe08
OZGURIMM case RELLBR at pc 0x7f48ba049de3 imm:0
OZGURDBGSLICE at IP 7f48ba049de3 imm_values:1e
OZGURDBG discover_CFG: 0x7f48ba049e03 0xde0 0xe08
OZGURDBG discover_CFG: 0xe03 0xde0 0xe08
OZGURIMM Stack uop at pc 0x7f48ba049e07 imm:0
OZGURDBG discover_CFG: 0xde5 0xde0 0xe08
OZGURIMM case RELLBR at pc 0x7f48ba049e01 imm:0
OZGURDBGSLICE at IP 7f48ba049e01 imm_values:ffffffffffffffed
OZGURDBG discover_CFG: 0x7f48ba049df0 0xde0 0xe08
OZGURDBG discover_CFG: 0xdf0 0xde0 0xe08
OZGURDBG discover_CFG: 0xe03 0xde0 0xe08
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_Ind_halfx1'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049de3 imm:0
OZGURDECODE@PC at IP 0x7f48ba049de7 scale:1
OZGURDCODE@PC at IP 0x7f48ba049de7 disp:0
OZGURDECODE@PC at IP 0x7f48ba049df0 scale:4
OZGURDECODE@PC at IP 0x7f48ba049df4 scale:4
OZGURDECODE@PC at IP 0x7f48ba049df7 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049dfa imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e01 imm:0
OZGURDBGSLICE at IP df0 scale:4
OZGURDBGSLICE at IP df4 scale:4
OZGURDBGSLICE at IP df7 scale:4
OZGURDECODE@PC at IP 0x7f48ba049e03 scale:4
OZGURDCODE@PC at IP 0x7f48ba049e03 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049e07 imm:0
OZGURDBGSLICE at IP e03 scale:4
OZGURDBGSLICE at IP e03 disp:fffffffffffffffc
 This is Rslice 0x556e1d4d1960
OZGURDBGSLICE at IP df0 scale:4

  ** StrideSlice::Slice, block [0xdf0,0xe03], from_uop=0, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xdf0, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xdf0,0xe03], from_uop=4, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xdfa, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xdf0,0xe03], from_uop=0, on reg Name RSI {type MemOp(2), stack=0, [0,63]}, start_pc=0xdf0, start_be=0, start_rank=1
OZGURDBGSLICE at IP df4 scale:4

  ** StrideSlice::Slice, block [0xdf0,0xe03], from_uop=2, on reg Name RCX {type MemOp(2), stack=0, [0,63]}, start_pc=0xdf4, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xdf0,0xe03], from_uop=1, on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0xdf0, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:0

  ** StrideSlice::Slice, block [0xdf0,0xe03], from_uop=2, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xdf4, start_be=0, start_rank=1
OZGURDBGSLICE at IP df7 scale:4

  ** StrideSlice::Slice, block [0xdf0,0xe03], from_uop=3, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xdf7, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xdf0,0xe03], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xdf7, start_be=0, start_rank=1
build_loops_for_interval routine: ubench_1D_Ind_halfx1'
build_loops_for_interval routine: ubench_1D_Ind_halfx1'
OZGURDECODE@PC at IP 0x7f48ba049df0 scale:4
OZGURDECODE@PC at IP 0x7f48ba049df4 scale:4
OZGURDECODE@PC at IP 0x7f48ba049df7 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049dfa imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e01 imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049de3 imm:0
OZGURDECODE@PC at IP 0x7f48ba049de7 scale:1
OZGURDCODE@PC at IP 0x7f48ba049de7 disp:0
OZGURDECODE@PC at IP 0x7f48ba049e03 scale:4
OZGURDCODE@PC at IP 0x7f48ba049e03 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049e07 imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_Ind_halfx1'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_Ind_halfx1'
In SchedDG constructor for routine ubench_1D_Ind_halfx1, pathId 0xde0/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_Ind_halfx1'
OZGURIMM case RELLBR at pc 0x7f48ba049de3 imm:0
OZGURDECODE@PC at IP 0x7f48ba049de7 scale:1
OZGURDCODE@PC at IP 0x7f48ba049de7 disp:0
OZGURDECODE@PC at IP 0x7f48ba049df0 scale:4
OZGURDECODE@PC at IP 0x7f48ba049df4 scale:4
OZGURDECODE@PC at IP 0x7f48ba049df7 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049dfa imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e01 imm:0
OZGURDECODE@PC at IP 0x7f48ba049e03 scale:4
OZGURDCODE@PC at IP 0x7f48ba049e03 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049e07 imm:0
Sniper Routine: ubench_1D_Ind_halfx1 StartAddr:de0
OZGURDBGX3 #Blocks: 5
	Block[0] 's startAddres: de0 endAddress:  de5
		instruction addres:de0
		instruction addres:de3
de0-0
de3-0

	Block[1] 's startAddres: de5 endAddress:  df0
		instruction addres:de5
		instruction addres:de7
de5-0
de7-0

	Block[2] 's startAddres: df0 endAddress:  e03
		instruction addres:df0
		instruction addres:df4
		instruction addres:df7
		instruction addres:dfa
		instruction addres:dfe
		instruction addres:e01
df0-0
df4-0
df7-0
dfa-0
dfe-0
e01-0

	Block[3] 's startAddres: e03 endAddress:  e08
		instruction addres:e03
		instruction addres:e07
e03-0
e07-0

	Block[4] 's startAddres: 0 endAddress:  0
Node Oxe07 is Frame
de4
	de0-0
	de3-0
def
	de5-0
	de7-0
e02
	df0-0
	df4-0
	df7-0
	dfa-0
	dfe-0
	e01-0
e07
	e03-0
	e07-1
ffffffffffffffff
Address	type	class
Node 7 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 7, pc=df0, type=2
df0: Load a80[0:63] a74[0:63] --> t0[0:31] 
 <-- (5)
 --> (8 [{ 3 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSI/0{MemOp}[0,63](0xde0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049df0 Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xdf0 try:0
df0	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d53e4a0
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d53e4a0
Node 6 of type NOP, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=de7, type=31
de7: NOP --> 
 <-- (17)
 --> (13 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xde7 try:0
Node 5 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=de5, type=28
de5: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (17, 14)
 --> (7 [{ 2 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 8 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xde5 try:0
Node 4 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=de3, type=8
de3: CondBranch r41[0:63] --> 
 <-- (3)
OZGURDBG::instrumenting node:0xde3 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=de0, type=29
de0: LogicalOp r76[0:63] r76[0:63] --> r41[0:63] 
 <-- (17)
 --> (4 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xde0 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 12 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=dfe, type=19
dfe: Cmp r76[0:63] r74[0:63] --> r41[0:63] 
 <-- (11)
 --> (13 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdfe try:0
Node 14 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=e03, type=2
e03: Load a81[0:63] a76[0:63] --> r74[0:31] 
 <-- (17)
 --> (17 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 5 [{ 23 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA index:3 num: -4 den: 1 HAHAHA Before num: -4 den: 1 After num: -4 den: 1
ref->base:  0x4 Reg_RDX/0{MemOp}[0,63](0xde0,0) +  Reg_RDI/0{MemOp}[0,63](0xde0,0) + -0x4 +
consten Term of Formula is: -4
Decoded Instruction PC:7f48ba049e03 Reloc:7f48ba049000 len:4 disp:fffffffffffffffc scale:4
OZGURDBG::instrumenting node:0xe03 try:0
e03	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d53e9e0
Print Src reg info
Name RDX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 76
PTW rdx  @ 0x556e1d53e9e0
Node 11 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 11, pc=dfa, type=20
dfa: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (5)
 --> (12 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdfa try:0
Node 9 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 9, pc=df4, type=2
df4: Load a81[0:63] a75[0:63] --> r75[0:31] 
 <-- (8, 10)
 --> (10 [{ 5 ANTI_DEPENDENCY MEMORY_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xdf0,0) +  Reg_RDI/0{MemOp}[0,63](0xde0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049df4 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xdf4 try:0
df4	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d53f110
Print Src reg info
Name RCX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 75
PTW rcx  @ 0x556e1d53f110
Node 13 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 13, pc=e01, type=8
e01: CondBranch r41[0:63] --> 
 <-- (12, 6, 10)
OZGURDBG::instrumenting node:0xe01 try:0
Node 15 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=e07, type=2
e07: Load a78[0:63] --> 
 <-- (17, 16)
 --> (17 [{ 15 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xde0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049e07 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xe07 try:0
Node 10 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 10, pc=df7, type=3
df7: Store r75[0:31] a81[0:63] a74[0:63] --> 
 <-- (9, 9, 5)
 --> (9 [{ 6 TRUE_DEPENDENCY MEMORY_TYPE LOOP_CARRIED(dist=1) Level=1 }], 13 [{ 13 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xde0,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049df7 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xdf7 try:0
Node 8 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 8, pc=df0, type=14
df0: Move t0[0:63] --> r75[0:63] 
 <-- (7)
 --> (9 [{ 4 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xdf0 try:0
Node 17 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 17, pc=e07, type=10
e07: Return --> 
 <-- (14, 15, 16)
 --> (6 [{ 17 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 5 [{ 18 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 19 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 14 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 21 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xe07 try:0
Node 16 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=e07, type=20
e07: Add r78[0:63] --> r78[0:63] 
 <-- (17, 16)
 --> (17 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 24 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 16 [{ 25 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xe07 try:0
de4
	de0-0
	de3-0
def
	de5-0
	de7-0
e02
	df0-0
	df4-0
	df7-0
	dfa-0
	dfe-0
	e01-0
e07
	e03-0
	e07-1
ffffffffffffffff
de4-0
de4-0
def-0
def-0
e02-0
e02-0
e07-0
e07-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:4	frame:1	strided:2	indirect:1
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_Ind_halfx1
Name of the routine is: ubench_1D_If_halfx1
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_1D_If_halfx1 start: 0xe10 offset: 0xe10 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_1D_If_halfx1 0x7f48ba049000'
OZGURDBG discover_CFG: 0xe10 0xe10 0xe46
OZGURIMM case RELLBR at pc 0x7f48ba049e1a imm:0
OZGURDBGSLICE at IP 7f48ba049e1a imm_values:1c
OZGURDBG discover_CFG: 0x7f48ba049e38 0xe10 0xe46
OZGURDBG discover_CFG: 0xe38 0xe10 0xe46
OZGURIMM case RELLBR at pc 0x7f48ba049e3f imm:0
OZGURDBGSLICE at IP 7f48ba049e3f imm_values:ffffffffffffffdf
OZGURDBG discover_CFG: 0x7f48ba049e20 0xe10 0xe46
OZGURDBG discover_CFG: 0xe20 0xe10 0xe46
OZGURIMM case RELLBR at pc 0x7f48ba049e29 imm:0
OZGURDBGSLICE at IP 7f48ba049e29 imm_values:a
OZGURDBG discover_CFG: 0x7f48ba049e35 0xe10 0xe46
OZGURDBG discover_CFG: 0xe35 0xe10 0xe46
OZGURDBG discover_CFG: 0xe38 0xe10 0xe46
OZGURDBG discover_CFG: 0xe2b 0xe10 0xe46
OZGURDBG discover_CFG: 0xe35 0xe10 0xe46
OZGURDBG discover_CFG: 0xe41 0xe10 0xe46
OZGURIMM Stack uop at pc 0x7f48ba049e45 imm:0
OZGURDBG discover_CFG: 0xe1c 0xe10 0xe46
OZGURIMM case RELLBR at pc 0x7f48ba049e1c imm:0
OZGURDBGSLICE at IP 7f48ba049e1c imm_values:23
OZGURDBG discover_CFG: 0x7f48ba049e41 0xe10 0xe46
OZGURDBG discover_CFG: 0xe41 0xe10 0xe46
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_1D_If_halfx1'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM0 if not signed at pc 0x7f48ba049e15 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e1a imm:0
OZGURIMM0 if signed at pc 0x7f48ba049e38 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e3f imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049e1c imm:0
OZGURIMM0 if signed at pc 0x7f48ba049e26 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e29 imm:0
OZGURDECODE@PC at IP 0x7f48ba049e41 scale:4
OZGURDCODE@PC at IP 0x7f48ba049e41 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049e45 imm:0
OZGURDBGSLICE at IP e41 scale:4
OZGURDBGSLICE at IP e41 disp:fffffffffffffffc
OZGURDECODE@PC at IP 0x7f48ba049e2b scale:4
OZGURDECODE@PC at IP 0x7f48ba049e2f scale:4
OZGURDECODE@PC at IP 0x7f48ba049e32 scale:4
OZGURDBGSLICE at IP e2b scale:4
OZGURDBGSLICE at IP e2f scale:4
OZGURDBGSLICE at IP e32 scale:4
 This is Rslice 0x556e1d4d1960
OZGURDBGSLICE at IP e2b scale:4

  ** StrideSlice::Slice, block [0xe2b,0xe35], from_uop=0, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xe2b, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xe38,0xe41], from_uop=0, on reg Name RAX {type RegOp(1), stack=0, [0,63]}, start_pc=0xe38, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xe2b,0xe35], from_uop=0, on reg Name RDX {type MemOp(2), stack=0, [0,63]}, start_pc=0xe2b, start_be=0, start_rank=3
OZGURDBGSLICE at IP e2f scale:4

  ** StrideSlice::Slice, block [0xe2b,0xe35], from_uop=2, on reg Name RSI {type MemOp(2), stack=0, [0,63]}, start_pc=0xe2f, start_be=0, start_rank=3

  ** StrideSlice::Slice, block [0xe2b,0xe35], from_uop=1, on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0xe2b, start_be=0, start_rank=3
OZGURERROR:: sii->is_strideF != 1 it is:0

  ** StrideSlice::Slice, block [0xe2b,0xe35], from_uop=2, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xe2f, start_be=0, start_rank=3
OZGURDBGSLICE at IP e32 scale:4

  ** StrideSlice::Slice, block [0xe2b,0xe35], from_uop=3, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xe32, start_be=0, start_rank=3
OZGURERROR:: sii->is_strideF != 1 it is:2

  ** StrideSlice::Slice, block [0xe2b,0xe35], from_uop=3, on reg Name RDI {type MemOp(2), stack=0, [0,63]}, start_pc=0xe32, start_be=0, start_rank=3
build_loops_for_interval routine: ubench_1D_If_halfx1'
build_loops_for_interval routine: ubench_1D_If_halfx1'
OZGURIMM0 if signed at pc 0x7f48ba049e38 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e3f imm:0
OZGURIMM0 if signed at pc 0x7f48ba049e26 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e29 imm:0
OZGURDECODE@PC at IP 0x7f48ba049e2b scale:4
OZGURDECODE@PC at IP 0x7f48ba049e2f scale:4
OZGURDECODE@PC at IP 0x7f48ba049e32 scale:4
OZGURIMM0 if not signed at pc 0x7f48ba049e15 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e1a imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049e1c imm:0
OZGURDECODE@PC at IP 0x7f48ba049e41 scale:4
OZGURDCODE@PC at IP 0x7f48ba049e41 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049e45 imm:0
[INFO]Routine::constructLoops(): 'ubench_1D_If_halfx1'
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_1D_If_halfx1'
In SchedDG constructor for routine ubench_1D_If_halfx1, pathId 0xe10/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_1D_If_halfx1'
OZGURIMM0 if not signed at pc 0x7f48ba049e15 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e1a imm:0
OZGURIMM0 if signed at pc 0x7f48ba049e38 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e3f imm:0
OZGURIMM0 if signed at pc 0x7f48ba049e26 imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e29 imm:0
OZGURDECODE@PC at IP 0x7f48ba049e2b scale:4
OZGURDECODE@PC at IP 0x7f48ba049e2f scale:4
OZGURDECODE@PC at IP 0x7f48ba049e32 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049e1c imm:0
OZGURDECODE@PC at IP 0x7f48ba049e41 scale:4
OZGURDCODE@PC at IP 0x7f48ba049e41 disp:fffffffffffffffc
OZGURIMM Stack uop at pc 0x7f48ba049e45 imm:0
Sniper Routine: ubench_1D_If_halfx1 StartAddr:e10
OZGURDBGX3 #Blocks: 8
	Block[0] 's startAddres: e10 endAddress:  e1c
		instruction addres:e10
		instruction addres:e12
		instruction addres:e15
		instruction addres:e1a
e10-0
e12-0
e15-0
e1a-0

	Block[1] 's startAddres: e38 endAddress:  e41
		instruction addres:e38
		instruction addres:e3c
		instruction addres:e3f
e38-0
e3c-0
e3f-0

	Block[2] 's startAddres: e20 endAddress:  e2b
		instruction addres:e20
		instruction addres:e23
		instruction addres:e26
		instruction addres:e29
e20-0
e23-0
e26-0
e29-0

	Block[3] 's startAddres: e2b endAddress:  e35
		instruction addres:e2b
		instruction addres:e2f
		instruction addres:e32
e2b-0
e2f-0
e32-0

	Block[4] 's startAddres: e35 endAddress:  e38
		instruction addres:e35
e35-0

	Block[5] 's startAddres: e1c endAddress:  e1e
		instruction addres:e1c
e1c-0

	Block[6] 's startAddres: e41 endAddress:  e46
		instruction addres:e41
		instruction addres:e45
e41-0
e45-0

	Block[7] 's startAddres: 0 endAddress:  0
Node Oxe45 is Frame
e1b
	e10-0
	e12-0
	e15-0
	e1a-0
e1d
	e1c-0
e2a
	e20-0
	e23-0
	e26-0
	e29-0
e34
	e2b-0
	e2f-0
	e32-0
e37
	e35-0
e40
	e38-0
	e3c-0
	e3f-0
e45
	e41-0
	e45-1
ffffffffffffffff
Address	type	class
Node 7 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 7, pc=e38, type=20
e38: Add r74[0:63] --> r74[0:63] r41[0:63] 
 <-- (3, 6)
 --> (8 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 15 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 17 [{ 20 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe38 try:0
Node 6 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=e1a, type=8
e1a: CondBranch r41[0:63] --> 
 <-- (4, 5, 3)
 --> (7 [{ 5 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe1a try:0
Node 5 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=e15, type=13
e15: Copy --> r80[0:31] 
 <-- (23)
 --> (6 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe15 try:0
Node 4 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=e12, type=29
e12: LogicalOp r75[0:63] r75[0:63] --> r41[0:63] 
 <-- (23)
 --> (6 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe12 try:0
Node 3 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=e10, type=28
e10: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (23, 20)
 --> (6 [{ 3 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 4 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe10 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
OZGURDBG::instrumenting node:0x0 try:0
Node 8 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 8, pc=e3c, type=19
e3c: Cmp r75[0:63] r74[0:63] --> r41[0:63] 
 <-- (7)
 --> (9 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe3c try:0
Node 11 of type Sub, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 11, pc=e23, type=23
e23: Sub r82[0:31] --> r82[0:31] r41[0:31] 
 <-- (10)
 --> (13 [{ 14 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 21 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe23 try:0
Node 10 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 10, pc=e20, type=13
e20: Copy r80[0:31] --> r82[0:31] 
 <-- (5, 9)
 --> (11 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe20 try:0
Node 15 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 15, pc=e2b, type=14
e2b: Move t0[0:63] --> r80[0:63] 
 <-- (14)
 --> (16 [{ 18 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe2b try:0
Node 16 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 16, pc=e2f, type=2
e2f: Load a81[0:63] a80[0:63] --> r80[0:31] 
 <-- (15)
 --> (17 [{ 19 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xe2b,0) +  Reg_RDI/0{MemOp}[0,63](0xe10,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049e2f Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xe2f try:0
e2f	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d53f980
Print Src reg info
Name RSI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 80
PTW rsi  @ 0x556e1d53f980
Node 17 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 17, pc=e32, type=3
e32: Store r80[0:31] a81[0:63] a74[0:63] --> 
 <-- (16, 7)
 --> (19 [{ 23 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA Before num: 4 den: 1 After num: 4 den: 1
ref->base:   Reg_RDI/0{MemOp}[0,63](0xe10,0) + 0x4 +
consten Term of Formula is: 4
Decoded Instruction PC:7f48ba049e32 Reloc:7f48ba049000 len:3 disp:0 scale:4
OZGURDBG::instrumenting node:0xe32 try:0
Node 18 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 18, pc=e35, type=13
e35: Copy r82[0:31] --> r80[0:31] 
 <-- (11, 13)
 --> (19 [{ 24 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe35 try:0
Node 19 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 19, pc=e1c, type=7
e1c: UncondBranch --> 
 <-- (17, 18)
OZGURDBG::instrumenting node:0xe1c try:0
Node 20 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 20, pc=e41, type=2
e41: Load a81[0:63] a75[0:63] --> r74[0:31] 
 <-- (23)
 --> (23 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 34 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA index:3 num: -4 den: 1 HAHAHA Before num: -4 den: 1 After num: -4 den: 1
ref->base:  0x4 Reg_RCX/0{MemOp}[0,63](0xe10,0) +  Reg_RDI/0{MemOp}[0,63](0xe10,0) + -0x4 +
consten Term of Formula is: -4
Decoded Instruction PC:7f48ba049e41 Reloc:7f48ba049000 len:4 disp:fffffffffffffffc scale:4
OZGURDBG::instrumenting node:0xe41 try:0
e41	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDI {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 81
PTW rdi  @ 0x556e1d4ff620
Print Src reg info
Name RCX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 75
PTW rcx  @ 0x556e1d4ff620
Node 21 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 21, pc=e45, type=2
e45: Load a78[0:63] --> 
 <-- (23, 22)
 --> (23 [{ 26 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xe10,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049e45 Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xe45 try:0
Node 22 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 22, pc=e45, type=20
e45: Add r78[0:63] --> r78[0:63] 
 <-- (23, 22)
 --> (23 [{ 27 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 21 [{ 35 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 22 [{ 36 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xe45 try:0
Node 23 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=e45, type=10
e45: Return --> 
 <-- (20, 21, 22)
 --> (5 [{ 28 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 4 [{ 29 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 30 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 20 [{ 31 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 21 [{ 32 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 22 [{ 33 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xe45 try:0
Node 9 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 9, pc=e3f, type=8
e3f: CondBranch r41[0:63] --> 
 <-- (8)
 --> (10 [{ 9 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 12 [{ 12 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe3f try:0
Node 12 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 12, pc=e26, type=19
e26: Cmp r80[0:31] --> r41[0:31] 
 <-- (5, 9)
 --> (13 [{ 13 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe26 try:0
Node 13 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 13, pc=e29, type=8
e29: CondBranch r41[0:63] --> 
 <-- (12, 11)
 --> (14 [{ 16 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 18 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe29 try:0
Node 14 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 14, pc=e2b, type=2
e2b: Load a76[0:63] a74[0:63] --> t0[0:31] 
 <-- (7, 13)
 --> (15 [{ 17 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA Before num: 4 den: 1 After num: 4 den: 1
ref->base:   Reg_RDX/0{MemOp}[0,63](0xe10,0) + 0x4 +
consten Term of Formula is: 4
Decoded Instruction PC:7f48ba049e2b Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xe2b try:0
e2b	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 76
PTW rdx  @ 0x556e1d4ffcf0
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d4ffcf0
e1b
	e10-0
	e12-0
	e15-0
	e1a-0
e1d
	e1c-0
e2a
	e20-0
	e23-0
	e26-0
	e29-0
e34
	e2b-0
	e2f-0
	e32-0
e37
	e35-0
e40
	e38-0
	e3c-0
	e3f-0
e45
	e41-0
	e45-1
ffffffffffffffff
e1b-0
e1b-0
e1d-0
e1d-0
e2a-0
e2a-0
e34-0
e34-0
e37-0
e37-0
e40-0
e40-0
e45-0
e45-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:4	frame:1	strided:2	indirect:1
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_1D_If_halfx1
Name of the routine is: ubench_multi_func
dyninstAnalyzeRoutines1365
dyninstAnalyzeRoutines1391
dyninstAnalyzeRoutines1393
dyninstAnalyzeRoutines1396
dyninstAnalyzeRoutines1399
dyninstAnalyzeRoutines1401
OZGUR_1 RELOC:::7f48ba049000
dyninstAnalyzeRoutines1404
dyninstAnalyzeRoutines1406
OZGURDBG routine: ubench_multi_func start: 0xe50 offset: 0xe50 reloc: 0x7f48ba049000
createDyninstFunction
[INFO]LoadModule::dynInstAnalyzeRoutines(): 'ubench_multi_func 0x7f48ba049000'
OZGURDBG discover_CFG: 0xe50 0xe50 0xecb
OZGURIMM case RELLBR at pc 0x7f48ba049e56 imm:0
OZGURDBGSLICE at IP 7f48ba049e56 imm_values:70
OZGURDBG discover_CFG: 0x7f48ba049ec8 0xe50 0xecb
OZGURDBG discover_CFG: 0xec8 0xe50 0xecb
OZGURIMM Stack uop at pc 0x7f48ba049eca imm:0
OZGURDBG discover_CFG: 0xe58 0xe50 0xecb
OZGURIMM case RELLBR at pc 0x7f48ba049e7f imm:0
OZGURDBGSLICE at IP 7f48ba049e7f imm_values:ffffffffffffffef
OZGURDBG discover_CFG: 0x7f48ba049e70 0xe50 0xecb
OZGURDBG discover_CFG: 0xe70 0xe50 0xecb
OZGURDBG discover_CFG: 0xe81 0xe50 0xecb
OZGURIMM case RELLBR at pc 0x7f48ba049e84 imm:0
OZGURDBGSLICE at IP 7f48ba049e84 imm_values:3a
OZGURDBG discover_CFG: 0x7f48ba049ec0 0xe50 0xecb
OZGURDBG discover_CFG: 0xec0 0xe50 0xecb
OZGURIMM Stack uop at pc 0x7f48ba049ec0 imm:0
OZGURDBG discover_CFG: 0xe86 0xe50 0xecb
OZGURIMM case RELLBR at pc 0x7f48ba049e9f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049e9f imm:0
OZGURDBGSLICE at IP 7f48ba049e9f imm_values:fffffffffffffcfc
OZGURDBG discover_CFG: 0x7f48ba049ba0 0xe50 0xecb
OZGURDBG discover_CFG: 0xba0 0xe50 0xecb
OZGURDBG discover_CFG: 0xea4 0xe50 0xecb
OZGURIMM case RELLBR at pc 0x7f48ba049ea7 imm:0
OZGURDBGSLICE at IP 7f48ba049ea7 imm_values:e
OZGURDBG discover_CFG: 0x7f48ba049eb7 0xe50 0xecb
OZGURDBG discover_CFG: 0xeb7 0xe50 0xecb
OZGURIMM case RELLBR at pc 0x7f48ba049ebe imm:0
OZGURDBGSLICE at IP 7f48ba049ebe imm_values:fffffffffffffff0
OZGURDBG discover_CFG: 0x7f48ba049eb0 0xe50 0xecb
OZGURDBG discover_CFG: 0xeb0 0xe50 0xecb
OZGURDBG discover_CFG: 0xeb7 0xe50 0xecb
OZGURDBG discover_CFG: 0xec0 0xe50 0xecb
main_analysis841
[INFO]Routine::main_analysis(): 'ubench_multi_func'
OZGURDBG::Discover the Path func:main_analysis line1004 CFG:0
build_loops_scope_tree
OZGURIMM case RELLBR at pc 0x7f48ba049e56 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049eca imm:0
OZGURDCODE@PC at IP 0x7f48ba049e58 disp:ffffffffffffffff
OZGURIMM0 if not signed at pc 0x7f48ba049e5f imm:1
OZGURIMM0 if signed at pc 0x7f48ba049e6c imm:1
OZGURDECODE@PC at IP 0x7f48ba049e70 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049e74 imm:1
OZGURDECODE@PC at IP 0x7f48ba049e7b scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049e7f imm:0
OZGURDBGSLICE at IP e70 scale:4
OZGURDBGSLICE at IP e7b scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049e84 imm:0
OZGURDECODE@PC at IP 0x7f48ba049e86 scale:4
OZGURDCODE@PC at IP 0x7f48ba049e8d disp:20117c
OZGURDECODE@PC at IP 0x7f48ba049e94 scale:4
OZGURDECODE@PC at IP 0x7f48ba049e9b scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049e9f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049e9f imm:0
OZGURDBGSLICE at IP e8d disp:20117c
OZGURDBGSLICE at IP e86 scale:4
OZGURDBGSLICE at IP e86 scale:4
OZGURDBGSLICE at IP e9b scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049ea7 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049eb7 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049ebe imm:0
OZGURDECODE@PC at IP 0x7f48ba049eb3 scale:4
OZGURDBGSLICE at IP eb3 scale:4
OZGURIMM Stack uop at pc 0x7f48ba049ec0 imm:0
 This is Rslice 0x556e1d4e9b10
OZGURDBGSLICE at IP e70 scale:4

  ** StrideSlice::Slice, block [0xe70,0xe81], from_uop=0, on reg Name RDX {type MemOp(2), stack=0, [0,63]}, start_pc=0xe70, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xe70,0xe81], from_uop=0, on reg Name R8 {type MemOp(2), stack=0, [0,63]}, start_pc=0xe70, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xe70,0xe81], from_uop=2, on reg Name R8 {type RegOp(1), stack=0, [0,63]}, start_pc=0xe74, start_be=1, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2
OZGURDBGSLICE at IP e7b scale:4

  ** StrideSlice::Slice, block [0xe70,0xe81], from_uop=4, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xe7b, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xe70,0xe81], from_uop=1, on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0xe70, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:0

  ** StrideSlice::Slice, block [0xe70,0xe81], from_uop=4, on reg Name R9 {type MemOp(2), stack=0, [0,63]}, start_pc=0xe7b, start_be=0, start_rank=1

  ** StrideSlice::Slice, block [0xeb0,0xeb7], from_uop=0, on reg Name R8 {type MemOp(2), stack=0, [0,63]}, start_pc=0xeb0, start_be=0, start_rank=2

  ** StrideSlice::Slice, block [0xeb7,0xec0], from_uop=0, on reg Name R8 {type RegOp(1), stack=0, [0,63]}, start_pc=0xeb7, start_be=0, start_rank=1
OZGURERROR:: sii->is_strideF != 1 it is:2
OZGURDBGSLICE at IP eb3 scale:4

  ** StrideSlice::Slice, block [0xeb0,0xeb7], from_uop=2, on reg Name RAX {type MemOp(2), stack=0, [0,63]}, start_pc=0xeb3, start_be=0, start_rank=2

  ** StrideSlice::Slice, block [0xeb0,0xeb7], from_uop=1, on reg Name T0 {type TempReg(6), stack=0, [0,63]}, start_pc=0xeb0, start_be=0, start_rank=2
OZGURERROR:: sii->is_strideF != 1 it is:0

  ** StrideSlice::Slice, block [0xeb0,0xeb7], from_uop=2, on reg Name R9 {type MemOp(2), stack=0, [0,63]}, start_pc=0xeb3, start_be=0, start_rank=2
build_loops_for_interval routine: ubench_multi_func'
build_loops_for_interval routine: ubench_multi_func'
OZGURDECODE@PC at IP 0x7f48ba049e70 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049e74 imm:1
OZGURDECODE@PC at IP 0x7f48ba049e7b scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049e7f imm:0
build_loops_for_interval routine: ubench_multi_func'
OZGURIMM0 if signed at pc 0x7f48ba049eb7 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049ebe imm:0
OZGURDECODE@PC at IP 0x7f48ba049eb3 scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049e56 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049eca imm:0
OZGURDCODE@PC at IP 0x7f48ba049e58 disp:ffffffffffffffff
OZGURIMM0 if not signed at pc 0x7f48ba049e5f imm:1
OZGURIMM0 if signed at pc 0x7f48ba049e6c imm:1
OZGURIMM case RELLBR at pc 0x7f48ba049e84 imm:0
OZGURDECODE@PC at IP 0x7f48ba049e86 scale:4
OZGURDCODE@PC at IP 0x7f48ba049e8d disp:20117c
OZGURDECODE@PC at IP 0x7f48ba049e94 scale:4
OZGURDECODE@PC at IP 0x7f48ba049e9b scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049e9f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049e9f imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049ea7 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049ec0 imm:0
[INFO]Routine::constructLoops(): 'ubench_multi_func'
simpleAddBlock
simpleAddBlock
simpleAddBlock
[INFO]Routine::constructPaths:schedule: 'ubench_multi_func'
In SchedDG constructor for routine ubench_multi_func, pathId 0xe50/1/1. AvgNumIters 2.000000, freq 1
[INFO]DGBuilder::build_graph: 'ubench_multi_func'
OZGURIMM case RELLBR at pc 0x7f48ba049e56 imm:0
OZGURIMM Stack uop at pc 0x7f48ba049eca imm:0
OZGURDCODE@PC at IP 0x7f48ba049e58 disp:ffffffffffffffff
OZGURIMM0 if not signed at pc 0x7f48ba049e5f imm:1
OZGURIMM0 if signed at pc 0x7f48ba049e6c imm:1
OZGURDECODE@PC at IP 0x7f48ba049e70 scale:4
OZGURIMM0 if signed at pc 0x7f48ba049e74 imm:1
OZGURDECODE@PC at IP 0x7f48ba049e7b scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049e7f imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049e84 imm:0
OZGURDECODE@PC at IP 0x7f48ba049e86 scale:4
OZGURDCODE@PC at IP 0x7f48ba049e8d disp:20117c
OZGURDECODE@PC at IP 0x7f48ba049e94 scale:4
OZGURDECODE@PC at IP 0x7f48ba049e9b scale:4
OZGURIMM case RELLBR at pc 0x7f48ba049e9f imm:0
OZGURIMM Stack uop at pc 0x7f48ba049e9f imm:0
OZGURIMM case RELLBR at pc 0x7f48ba049ea7 imm:0
OZGURIMM0 if signed at pc 0x7f48ba049eb7 imm:4
OZGURIMM case RELLBR at pc 0x7f48ba049ebe imm:0
OZGURDECODE@PC at IP 0x7f48ba049eb3 scale:4
OZGURIMM Stack uop at pc 0x7f48ba049ec0 imm:0
Sniper Routine: ubench_multi_func StartAddr:e50
OZGURDBGX3 #Blocks: 12
	Block[0] 's startAddres: e50 endAddress:  e58
		instruction addres:e50
		instruction addres:e53
		instruction addres:e56
e50-0
e53-0
e56-0

	Block[1] 's startAddres: ec8 endAddress:  ecb
		instruction addres:ec8
		instruction addres:eca
ec8-0
eca-0

	Block[2] 's startAddres: e58 endAddress:  e70
		instruction addres:e58
		instruction addres:e5c
		instruction addres:e5f
		instruction addres:e62
		instruction addres:e65
		instruction addres:e69
		instruction addres:e6c
e58-0
e5c-0
e5f-0
e62-0
e65-0
e69-0
e6c-0

	Block[3] 's startAddres: e70 endAddress:  e81
		instruction addres:e70
		instruction addres:e74
		instruction addres:e78
		instruction addres:e7b
		instruction addres:e7f
e70-0
e74-0
e78-0
e7b-0
e7f-0

	Block[4] 's startAddres: e81 endAddress:  e86
		instruction addres:e81
		instruction addres:e84
e81-0
e84-0

	Block[5] 's startAddres: e86 endAddress:  ea4
		instruction addres:e86
		instruction addres:e8a
		instruction addres:e8d
		instruction addres:e94
		instruction addres:e98
		instruction addres:e9b
		instruction addres:e9f
e86-0
e8a-0
e8d-0
e94-0
e98-0
e9b-0
e9f-0

	Block[6] 's startAddres: ea4 endAddress:  ea4

	Block[7] 's startAddres: ea4 endAddress:  ea9
		instruction addres:ea4
		instruction addres:ea7
ea4-0
ea7-0

	Block[8] 's startAddres: eb7 endAddress:  ec0
		instruction addres:eb7
		instruction addres:ebb
		instruction addres:ebe
eb7-0
ebb-0
ebe-0

	Block[9] 's startAddres: eb0 endAddress:  eb7
		instruction addres:eb0
		instruction addres:eb3
eb0-0
eb3-0

	Block[10] 's startAddres: ec0 endAddress:  ec2
		instruction addres:ec0
ec0-0

	Block[11] 's startAddres: 0 endAddress:  0
Node Oxeca is Frame
Node Oxec0 is Frame
e57
	e50-0
	e53-0
	e56-0
e6f
	e58-0
	e5c-0
	e5f-0
	e62-0
	e65-0
	e69-0
	e6c-0
e80
	e70-0
	e74-0
	e78-0
	e7b-0
	e7f-0
e85
	e81-0
	e84-0
ea3
	e86-0
	e8a-0
	e8d-0
	e94-0
	e98-0
	e9b-0
	e9f-0
ea8
	ea4-0
	ea7-0
eb6
	eb0-0
	eb3-0
ebf
	eb7-0
	ebb-0
	ebe-0
ec1
	ec0-1
eca
	ec8-0
	eca-1
ffffffffffffffff
Address	type	class
Node 7 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 7, pc=eca, type=2
eca: Load a78[0:63] --> 
 <-- (46, 45, 1, 34)
 --> (9 [{ 3 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{MemOp}[0,63](0xe50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049eca Reloc:7f48ba049000 len:1 disp:0 scale:1
OZGURDBG::instrumenting node:0xeca try:0
Node 6 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 6, pc=ec8, type=28
ec8: Xor r74[0:31] r74[0:31] --> r74[0:31] r41[0:31] 
 <-- (46, 43, 1, 34)
 --> (9 [{ 4 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xec8 try:0
Node 5 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 5, pc=e56, type=8
e56: CondBranch r41[0:63] --> 
 <-- (3, 4)
 --> (34 [{ 38 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe56 try:0
Node 4 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 4, pc=e53, type=13
e53: Copy r81[0:63] --> r83[0:63] 
 <-- (46, 1, 34)
 --> (5 [{ 2 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 21 [{ 17 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 31 [{ 28 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe53 try:0
Node 3 of type LogicalOp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 3, pc=e50, type=29
e50: LogicalOp r75[0:63] r75[0:63] --> r41[0:63] 
 <-- (46, 1, 34)
 --> (5 [{ 1 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe50 try:0
Node 2 of type DG_Exit, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 2, pc=0, type=-2
0: DG_Exit --> 
 <-- (37, 40, 46)
OZGURDBG::instrumenting node:0x0 try:0
Node 1 of type DG_Entry, longestCycle 0, resourceScore 0, sccId 0.loop index: 0
isLoopCondition(): 0
NodeId: 1, pc=0, type=-1
--> 
 <-- [TopNode]
 --> (7 [{ 80 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 81 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 4 [{ 82 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 3 [{ 83 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 27 [{ 84 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 28 [{ 85 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 10 [{ 89 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 11 [{ 90 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 91 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 26 [{ 92 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 8 [{ 93 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0x0 try:0
Node 27 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 27, pc=e8d, type=2
e8d: Load --> r80[0:63] 
 <-- (46, 1, 34)
 --> (34 [{ 33 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 2105360 den: 1 HAHAHA Before num: 2105360 den: 1 After num: 2105360 den: 1
ref->base:  0x202010 +
consten Term of Formula is: 2105360
Decoded Instruction PC:7f48ba049e8d Reloc:7f48ba049000 len:7 disp:20117c scale:1
OZGURDBG::instrumenting node:0xe8d try:0
e8d	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 0 src regs
Node has 1 dest regs
OZGURTESTREG
Node 28 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 28, pc=e94, type=21
e94: LEA l76[0:63] l75[0:63] --> r84[0:63] 
 <-- (46, 1, 34)
 --> (34 [{ 34 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe94 try:0
Node 29 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 29, pc=e98, type=2
e98: Load a82[0:63] --> t0[0:31] 
 <-- (25)
 --> (30 [{ 27 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 4 den: 1 HAHAHA Before num: 4 den: 1 After num: 4 den: 1
ref->base:   Reg_RDX/0{LEAOp}[0,63](0xe50,0) + 0x4 Reg_R10/0{RegOp}[0,63](0xe5f,2) + 0x4 +
consten Term of Formula is: 4
Decoded Instruction PC:7f48ba049e98 Reloc:7f48ba049000 len:3 disp:0 scale:1
OZGURDBG::instrumenting node:0xe98 try:0
e98	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name R8 {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 82
PTW r8  @ 0x556e1d51cfe0
Node 30 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 30, pc=e98, type=14
e98: Move t0[0:63] --> r74[0:63] 
 <-- (29)
 --> (31 [{ 29 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe98 try:0
Node 31 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 31, pc=e9b, type=2
e9b: Load a83[0:63] a74[0:63] --> r85[0:31] 
 <-- (4, 30)
 --> (34 [{ 35 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xe98,4) +  Reg_RDI/0{RegOp}[0,63](0xe50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049e9b Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xe9b try:0
e9b	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name R9 {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 83
PTW r9  @ 0x556e1d51dc10
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d51dc10
Node 32 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 32, pc=e9f, type=20
e9f: Add r78[0:63] --> r78[0:63] 
 <-- (8, 24)
 --> (33 [{ 32 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe9f try:0
Node 33 of type Store, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 33, pc=e9f, type=3
e9f: Store a78[0:63] --> 
 <-- (32)
 --> (34 [{ 36 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: -8 den: 1 HAHAHA Before num: -8 den: 1 After num: -8 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xe50,0) + -0x8 +
consten Term of Formula is: -8
Decoded Instruction PC:7f48ba049e9f Reloc:7f48ba049000 len:5 disp:0 scale:1
OZGURDBG::instrumenting node:0xe9f try:0
Node 34 of type Jump, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 34, pc=e9f, type=9
e9f: Jump --> 
 <-- (27, 28, 31, 33, 26, 5, 22, 24, 9, 37, 40, 46)
 --> (35 [{ 42 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 36 [{ 43 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 37 [{ 44 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 38 [{ 47 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 41 [{ 52 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 44 [{ 57 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 45 [{ 60 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 46 [{ 61 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 97 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 98 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 4 [{ 99 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 100 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 27 [{ 101 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 28 [{ 102 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 10 [{ 103 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 11 [{ 104 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 105 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 26 [{ 106 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 8 [{ 107 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xe9f try:0
Node 35 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 35, pc=e9f, type=20
e9f: Add r78[0:63] --> r78[0:63] 
 <-- (34)
 --> (37 [{ 45 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 44 [{ 55 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 45 [{ 58 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe9f try:0
Node 36 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 36, pc=ea4, type=20
ea4: Add r74[0:31] r85[0:31] --> r74[0:31] r41[0:31] 
 <-- (34)
 --> (37 [{ 46 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xea4 try:0
Node 37 of type UncondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 37, pc=ea7, type=7
ea7: UncondBranch --> 
 <-- (34, 35, 36)
 --> (2 [{ 86 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 34 [{ 94 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xea7 try:0
Node 38 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 38, pc=eb7, type=20
eb7: Add r82[0:63] --> r82[0:63] r41[0:63] 
 <-- (34)
 --> (39 [{ 48 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 41 [{ 50 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 15 [{ 79 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xeb7 try:0
Node 39 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 39, pc=ebb, type=19
ebb: Cmp r82[0:63] r84[0:63] --> r41[0:63] 
 <-- (38)
 --> (40 [{ 49 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xebb try:0
Node 40 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 40, pc=ebe, type=8
ebe: CondBranch r41[0:63] --> 
 <-- (39)
 --> (41 [{ 51 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 44 [{ 56 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 45 [{ 59 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 2 [{ 87 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 34 [{ 95 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xebe try:0
Node 41 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 41, pc=eb0, type=2
eb0: Load a82[0:63] --> t0[0:31] 
 <-- (38, 40, 34)
 --> (42 [{ 53 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA index:2 num: 4 den: 1 HAHAHA index:3 num: 8 den: 1 HAHAHA Before num: 8 den: 1 After num: 8 den: 1
ref->base:   Reg_RDX/0{LEAOp}[0,63](0xe50,0) + 0x4 Reg_R10/0{RegOp}[0,63](0xe5f,2) + 0x8 +
consten Term of Formula is: 8
Decoded Instruction PC:7f48ba049eb0 Reloc:7f48ba049000 len:3 disp:0 scale:1
OZGURDBG::instrumenting node:0xeb0 try:0
eb0	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 1 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name R8 {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 82
PTW r8  @ 0x556e1d51df60
Node 42 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 42, pc=eb0, type=14
eb0: Move t0[0:63] --> r74[0:63] 
 <-- (41)
 --> (43 [{ 54 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xeb0 try:0
Node 43 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 3
isLoopCondition(): 0
NodeId: 43, pc=eb3, type=2
eb3: Load a83[0:63] a74[0:63] --> r74[0:31] 
 <-- (42)
 --> (46 [{ 62 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 6 [{ 76 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xeb0,0) +  Reg_RDI/0{RegOp}[0,63](0xe50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049eb3 Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xeb3 try:0
eb3	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name R9 {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 83
PTW r9  @ 0x556e1d51e710
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d51e710
Node 44 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 44, pc=ec0, type=2
ec0: Load a78[0:63] --> 
 <-- (35, 40, 34)
 --> (46 [{ 63 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RSP/0{RegOp}[0,63](0xe50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049ec0 Reloc:7f48ba049000 len:2 disp:0 scale:1
OZGURDBG::instrumenting node:0xec0 try:0
Node 45 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 45, pc=ec0, type=20
ec0: Add r78[0:63] --> r78[0:63] 
 <-- (35, 40, 34)
 --> (46 [{ 64 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 7 [{ 77 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }], 8 [{ 78 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xec0 try:0
Node 46 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 46, pc=ec0, type=10
ec0: Return --> 
 <-- (34, 43, 44, 45)
 --> (7 [{ 65 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 6 [{ 66 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 4 [{ 67 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 3 [{ 68 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 27 [{ 69 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 28 [{ 70 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 10 [{ 71 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 11 [{ 72 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 15 [{ 73 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 26 [{ 74 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 8 [{ 75 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }], 2 [{ 88 OUTPUT_DEPENDENCY STRUCTURE_TYPE LOOP_INDEPENDENT Level=0 }], 34 [{ 96 TRUE_DEPENDENCY CONTROL_TYPE LOOP_CARRIED(dist=1) Level=1 }])
OZGURDBG::instrumenting node:0xec0 try:0
Node 10 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 10, pc=e58, type=21
e58: LEA l75[0:63] --> r74[0:63] 
 <-- (46, 1, 34)
 --> (13 [{ 8 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 14 [{ 9 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe58 try:0
Node 11 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 11, pc=e5c, type=13
e5c: Copy r75[0:63] --> r84[0:63] 
 <-- (46, 1, 34)
 --> (12 [{ 6 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe5c try:0
Node 12 of type Shift, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 12, pc=e5f, type=30
e5f: Shift r84[0:63] --> r84[0:63] r41[0:63] 
 <-- (11)
 --> (13 [{ 7 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe5f try:0
Node 13 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 13, pc=e62, type=19
e62: Cmp r84[0:63] r74[0:63] --> r41[0:63] 
 <-- (12, 10)
 --> (14 [{ 10 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe62 try:0
Node 14 of type MoveCC, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 14, pc=e65, type=15
e65: MoveCC r74[0:63] r41[0:63] --> r84[0:63] 
 <-- (10, 13)
 --> (16 [{ 11 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe65 try:0
Node 15 of type Xor, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 15, pc=e69, type=28
e69: Xor r82[0:31] r82[0:31] --> r82[0:31] r41[0:31] 
 <-- (46, 38, 1, 34)
 --> (17 [{ 12 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 19 [{ 14 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe69 try:0
Node 16 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 16, pc=e6c, type=20
e6c: Add r84[0:63] --> r84[0:63] r41[0:63] 
 <-- (14)
 --> (20 [{ 15 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 23 [{ 21 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }], 25 [{ 24 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe6c try:0
Node 17 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 17, pc=e70, type=2
e70: Load a76[0:63] a82[0:63] --> t0[0:31] 
 <-- (15)
 --> (18 [{ 13 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:   Reg_RDX/0{MemOp}[0,63](0xe50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049e70 Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xe70 try:0
e70	load	strided
OZGURDBG Instrumenting Strided Load
OZGURDBG Instrumenting Strided Load >>> Before<<<
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name RDX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 76
PTW rdx  @ 0x556e1d51ed50
Print Src reg info
Name R8 {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 82
PTW r8  @ 0x556e1d51ed50
Node 18 of type Move, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 18, pc=e70, type=14
e70: Move t0[0:63] --> r74[0:63] 
 <-- (17)
 --> (21 [{ 18 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe70 try:0
Node 19 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 19, pc=e74, type=20
e74: Add r82[0:63] --> r82[0:63] r41[0:63] 
 <-- (15)
 --> (20 [{ 16 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe74 try:0
Node 20 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 20, pc=e78, type=19
e78: Cmp r84[0:63] r82[0:63] --> r41[0:63] 
 <-- (16, 19)
 --> (22 [{ 19 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe78 try:0
Node 21 of type Load, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 21, pc=e7b, type=2
e7b: Load a83[0:63] a74[0:63] --> r74[0:31] 
 <-- (4, 18)
 --> (22 [{ 20 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
 HAHAHA 0:0 num: 0 den: 0 HAHAHA index:1 num: 4 den: 1 HAHAHA index:2 num: 1 den: 1 HAHAHA Before num: 1 den: 1 After num: 0 den: 1
ref->base:  0x4 LoadToReg_T0/0{TempReg}[0,31](0xe70,0) +  Reg_RDI/0{RegOp}[0,63](0xe50,0) +
consten Term of Formula is: 0
Decoded Instruction PC:7f48ba049e7b Reloc:7f48ba049000 len:4 disp:0 scale:4
OZGURDBG::instrumenting node:0xe7b try:0
e7b	load	indirect
OZGURDBG Instrumenting Indirect Load
Node has 2 src regs
Node has 1 dest regs
OZGURTESTREG
Print Src reg info
Name R9 {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 83
PTW r9  @ 0x556e1d51f950
Print Src reg info
Name RAX {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 74
PTW rax  @ 0x556e1d51f950
Node 22 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 2
isLoopCondition(): 0
NodeId: 22, pc=e7f, type=8
e7f: CondBranch r41[0:63] --> 
 <-- (20, 21)
 --> (23 [{ 22 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 34 [{ 39 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe7f try:0
Node 23 of type Cmp, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 23, pc=e81, type=19
e81: Cmp r75[0:63] r84[0:63] --> r41[0:63] 
 <-- (16, 22)
 --> (24 [{ 23 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe81 try:0
Node 24 of type CondBranch, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 24, pc=e84, type=8
e84: CondBranch r41[0:63] --> 
 <-- (23)
 --> (25 [{ 25 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 32 [{ 31 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 34 [{ 40 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe84 try:0
Node 25 of type LEA, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 25, pc=e86, type=21
e86: LEA l76[0:63] l84[0:63] --> r82[0:63] 
 <-- (16, 24)
 --> (29 [{ 26 TRUE_DEPENDENCY ADDR_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe86 try:0
Node 26 of type Copy, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 26, pc=e8a, type=13
e8a: Copy r80[0:63] --> r81[0:63] 
 <-- (46, 1, 34)
 --> (34 [{ 37 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xe8a try:0
Node 8 of type Add, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 8, pc=eca, type=20
eca: Add r78[0:63] --> r78[0:63] 
 <-- (46, 45, 1, 34)
 --> (9 [{ 5 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }], 32 [{ 30 TRUE_DEPENDENCY GP_REGISTER_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xeca try:0
Node 9 of type Return, longestCycle 0, resourceScore 0, sccId 0.loop index: 1
isLoopCondition(): 0
NodeId: 9, pc=eca, type=10
eca: Return --> 
 <-- (7, 6, 8)
 --> (34 [{ 41 TRUE_DEPENDENCY CONTROL_TYPE LOOP_INDEPENDENT Level=0 }])
OZGURDBG::instrumenting node:0xeca try:0
e57
	e50-0
	e53-0
	e56-0
e6f
	e58-0
	e5c-0
	e5f-0
	e62-0
	e65-0
	e69-0
	e6c-0
e80
	e70-0
	e74-0
	e78-0
	e7b-0
	e7f-0
e85
	e81-0
	e84-0
ea3
	e86-0
	e8a-0
	e8d-0
	e94-0
	e98-0
	e9b-0
	e9f-0
ea8
	ea4-0
	ea7-0
eb6
	eb0-0
	eb3-0
ebf
	eb7-0
	ebb-0
	ebe-0
ec1
	ec0-1
eca
	ec8-0
	eca-1
ffffffffffffffff
e57-0
e57-0
e6f-0
e6f-0
e80-0
e80-0
e85-0
e85-0
ea3-0
ea3-0
ea8-0
ea8-0
eb6-0
eb6-0
ebf-0
ebf-0
ec1-1
Instrument a frame load and add second -1 as multuiplier
OZGURDBG Instrumenting Frame Load ateca
Node has 1 src regs
Node has 0 dest regs
OZGURTESTREG
Print Src reg info
Name RSP {type MemOp(2), stack=0, [0,63]}
Print Src reg Name: 78
PTW rsp  @ 0x556e1d51fe90
ec1-1
eca-0
eca-0
ffffffffffffffff-0
ffffffffffffffff-0
Testing mem Instructions Final:
Total loads:9	frame:2	strided:5	indirect:2
Total stores:0	frame:0	strided:0	indirect:0
Sniper Routine Analized: ubench_multi_func
Start Writing to a file
706 3000f6
711 300106
968 30023f
acf 3003a5
add 3003bd
af2 3003d7
b30 30040c
b3d 30041e
b70 30044e
b80 300463
b8d 300475
bb0 300494
bbd 3004a6
be0 3004c6
bed 3004d8
c74 30055c
c9e 30058f
ca6 3005a1
cb2 3005b7
cbe 3005cd
cce 3005e7
cd6 3005f9
ce2 300609
d10 30062a
d1a 300639
d2a 30064c
d40 300662
d4a 300671
d5a 300684
d70 30069a
d74 3006a8
d83 3006c1
da0 3006e0
da4 3006ee
db8 30070c
dbc 30071a
dcd 300735
df0 300754
df4 300762
e03 30077b
e2b 3007a3
e2f 3007b1
e41 3007cd
e70 300800
e7b 300815
e98 30083c
e9b 300844
eb0 30085c
eb3 300864
eca 30087f
f40 300886
918 3008bf
5ae 3008dc
8d0 300919
924 300924
880 300952
f4c 300962
f19 3009b1
f2a 3009cc
OZGURDBG::I Wrote to a file named /home/kili337/Projects/IPPD/gitlab/memgaze/bin/ubench-500k_O3_PTW image: /home/kili337/Projects/IPPD/gitlab/memgaze/bin/ubench-500k_O3
[INFO]MIAMI_Driver::Finalize
