# -*-Mode: makefile;-*-

# Set PIN_ROOT and BINUTILS_ROOT to point to the correct locations for your 
# system
PIN_ROOT ?= ${HOME}/1modsim-tools-svn/palm-miami/pkg/pin-2.14-71313-gcc.4.4.7-linux
#PIN_ROOT ?= ${HOME}/1modsim-tools-svn/palm-miami/pkg/pin-3.0-76991-gcc-linux

HPCTOOLKIT_EXT = /home/frie869/modsim-tools/palm-externals-temp/trunk/hpctoolkit-externals/x86_64-linux

#BINUTILS_ROOT ?= ${HOME}/pkg/binutils-2.26
BINUTILS_ROOT ?= $(HPCTOOLKIT_EXT)/binutils

DYNINST_ROOT ?= $(HPCTOOLKIT_EXT)/symtabAPI
DYNINST_INC = $(DYNINST_ROOT)/include
DYNINST_LIB = $(DYNINST_ROOT)/lib

# Optionally, set the compilers used to build MIAMI.
# PIN favors the GNU compilers for building the tools, thus we've tested
# building MIAMI using the GNU compilers only
CC  = g++
CXX = g++ -std=gnu++11 #-std=c++11

# set variable COMPILE_MIAMI_SO to "yes" to compile a shared library version 
# of the miami post-processing tool in addition to the standanlone version. 
# This library is not used anymore, but is left in for historical reasons.
# miami.so requires PIC versions of all linked libraries, e.g. binutils
# COMPILE_MIAMI_SO = yes

# We are attempting to discover the MIAMI root directory and store this 
# value in the MIAMI_HOME variable.
# This approach may require make version 3.81 or newer. If it does not work 
# correctly on your system, set MIAMI_HOME to point to the correct MIAMI
# root directory by hand. You can type "make info" to see the value of 
# variable MIAMI_HOME visible to the build system.
this_makefile:=$(word $(words $(MAKEFILE_LIST)),$(MAKEFILE_LIST))
mkfile_dir  = $(abspath $(dir $(this_makefile)))
MIAMI_HOME  = $(mkfile_dir)

MIAMI_TARGET = $(MIAMI_HOME)/install
