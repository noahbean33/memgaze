#!/bin/bash
# -*- mode: sh -*-

#*BeginPNNLCopyright*********************************************************
#
# $HeadURL$
# $Id: 0cae9f95d9ed0841bbf77c91eef5f3d4c9a73f2e $
#
#***********************************************************EndPNNLCopyright*

# set -x

scriptPath0="${BASH_SOURCE[0]}" # works when script is sourced (unlike $0)
scriptPath=$(readlink -f "${scriptPath0}")
scriptCmd=${scriptPath##*/} # cf. $(basename ...)
scriptDir=${scriptPath%/*}  # cf. $(dirname ...)

#****************************************************************************

MG_XLIB_ROOT="${MG_XLIB_ROOT:-${scriptDir}/../../xlib/lib}"
MG_PERF_ROOT="${MG_PERF_ROOT:-${scriptDir}/../../xlib/perf}"

#-----------------------------------------------------------

mg_anal="${scriptDir}/../libexec/memgaze-analyze"

#****************************************************************************

opt_outDir='.'
opt_trace_dir=''
#opt_inst_dir=''
opt_loads='1'
opt_stores='0'
opt_strided='1'
opt_indirect='1'
opt_frame='0'
opt_analysis_file=''

#****************************************************************************
# Parse arguments
#****************************************************************************

die()
{
    cat <<EOF 1>&2
${scriptCmd}: $*
Use '${scriptCmd} -h' for usage.
EOF
    exit 1
}

usage()
{
    cat <<EOF
Usage: ${scriptCmd} [options] 
Options:
  -h / --help              help

  -t / --trace-dir <path>  memgaze trace directory

  -o / --output => output directory name (optional)
EOF
    exit 0
}

#-----------------------------------------------------------
# optional arguments
#-----------------------------------------------------------
while [[ $# -gt 0 ]] ; do

    arg="$1"
    shift # past argument

    case "${arg}" in
        -h | --help )
            usage
            ;;

        -o | --output )
            opt_outDir="$1"
            shift # past value
            ;;
        
	      -t | --trace-dir )
            opt_trace_dir="$1"
            shift # past value
            ;;

	      # -s | --inst-dir )
        #     opt_inst_dir="$1"
        #     shift # past value
        #     ;;

	      -- )
            break
            ;;

        * ) # beginning of <application> command line
            set -- "$arg" "$@"
            break
            ;;
    esac
done


#-----------------------------------------------------------
# required args
#-----------------------------------------------------------

#if [[ -z $1 ]] ; then
#    die "no command to monitor"
#fi
mkdir ${opt_outDir}

trace=''
binanlys=''
hpcstruct=''
mode=''
period=''
callpath=''
binary=''
output='memgaze-fp.txt'

while IFS=' ' read -r type value; do
    echo "type: $type value: $value"
    if [[ $type == "-m" ]] ; then
      mode=$value
    elif [[ $type == "-p" ]] ; then
      period=$value
    elif [[ $type == "-t" ]] ;then
      trace=$value
    elif [[ $type == "-b" ]] ;then
      binary=$value
    elif [[ $type == "-l" ]] ;then
      binanlys=$value
    elif [[ $type == "-h" ]] ;then
      hpcstruct=$value
    elif [[ $type == "-c" ]] ;then
      callpath=$value
    fi
done < ${opt_trace_dir}/memgaze.config 


#****************************************************************************
# 
#****************************************************************************

#${mg_anal} -t ${scriptDir}/${trace} -l ${scriptDir}/${binanlys} -s ${scriptDir}/${hpcstruct} -o ${scriptDir}/${output} -m ${mode} -p ${period} -c ${scriptDir}/${callpath}
${mg_anal} -t ${trace} -l ${binanlys} -s ${hpcstruct} -o ${opt_outDir}/${output} -m ${mode} -p ${period} -c ${callpath}
